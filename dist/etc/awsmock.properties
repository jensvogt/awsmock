#
# Property file for the AWS cloud simulation
#
#
# General
#
# awsmock.region:                               AWS region
# awsmock.access.key.id:                        AWS access key id, should be same as in your .aws/credential file, default: none
# awsmock.secret.access.key:                    AWS secret access key, should be same as in your .aws/credential file, default: none
# awsmock.account.id:                           AWS account ID, default 000000000000
# awsmock.client.id:                            AWS client ID, default 00000000
# awsmock.user:                                 AWS user default none
# awsmock.data.dir:                             AwsMock base data dir
# awsmock.temp.dir:                             Temporary directory, used by some service
# awsmock.pretty:                               Pretty print output for XML and JSON
# awsmock.verifysignature:                      Whether the AWS signature should be verified, default: false
# awsmock.dockerized:                           Set to true, in case awsmock runs as doker container, default: false
#
awsmock.region=eu-central-1
awsmock.access.key.id=none
awsmock.secret.access.key=none
awsmock.account.id=000000000000
awsmock.client.id=00000000
awsmock.user=none
awsmock.data.dir=/home/awsmock/data
awsmock.temp.dir=/home/awsmock/data/tmp
awsmock.pretty=true
awsmock.verifysignature=false
awsmock.dockerized=false
#
# Gateway
#
# awsmock.service.gateway.active:               activation flag
# awsmock.gateway.http.host:                    gateway host, default localhost
# awsmock.gateway.http.address:                 gateway listening address, default: 0.0.0.0
# awsmock.gateway.http.port:                    gateway port, default: 4566
# awsmock.gateway.http.max.queue:               gateway maximal queue length, default: 250
# awsmock.gateway.http.max.threads:             gateway maximal threads, default: 50
# awsmock.gateway.http.max.body:                gateway maximal body size in bytes, default: 100MB
# awsmock.gateway.http.timeout:                 gateway request timeout in seconds, default: 900
#
awsmock.service.gateway.active=true
awsmock.service.gateway.http.host=localhost
awsmock.service.gateway.http.address=0.0.0.0
awsmock.service.gateway.http.port=4566
awsmock.service.gateway.http.max.queue=10
awsmock.service.gateway.http.max.threads=50
awsmock.service.gateway.http.max.body=104857600
awsmock.service.gateway.http.timeout=900
#
# S3 service
#
# awsmock.service.s3.active                     Activation flag
# awsmock.service.s3.monitoring.period:         S3 monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            S3 maintenance worker period in seconds, default: 30sec.
#
awsmock.service.s3.active=true
awsmock.service.s3.monitoring.period=300
awsmock.service.s3.worker.period=3600
#
# SQS service
#
# awsmock.service.sqs.active                    Activation flag
# awsmock.service.sqs.monitoring.period:        SQS monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            SQS maintenance worker period in seconds, default: 30sec.
#
awsmock.service.sqs.active=true
awsmock.service.sqs.monitoring.period=300
awsmock.service.sqs.worker.period=60
#
# SNS service
#
# awsmock.service.sns.active                    Activation flag
# awsmock.service.sns.message.timeout:          SNS message timeout in days, default: 14
# awsmock.service.sns.hostname:                 SNS hostname to use for topics
# awsmock.service.sns.worker.period:            SNS maintenance worker period in seconds, default: 300sec.
# awsmock.service.sns.monitoring.period:        SNS monitoring period in seconds, default: 300sec.
#
awsmock.service.sns.active=true
awsmock.service.sns.message.timeout=14
awsmock.service.sns.worker.period=300
awsmock.service.sns.monitoring.period=300
#
# Lambda module
#
# awsmock.service.lambda.active                 module activation
# awsmock.service.lambda.monitoring.period      monitoring polling period in seconds, default: 300
# awsmock.service.lambda.worker.period          worker period in seconds, default: 300
# awsmock.service.lambda.lifetime               lambda function lifetime, default: 3600
#
awsmock.service.lambda.active=true
awsmock.service.lambda.monitoring.period=60
awsmock.service.lambda.worker.period=300
awsmock.service.lambda.lifetime=3600
#
# Transfer module
#
# awsmock.service.transfer.active               module activation
# awsmock.service.transfer.ftp.port:            port for the transfer FTP server, default 2121
# awsmock.service.transfer.bucket:              S3 bucket for the transfer server
# awsmock.service.transfer.monitoring.period:   Transfer monitoring period in seconds, default 300sec
#
awsmock.service.transfer.active=true
awsmock.service.transfer.ftp.port=2121
awsmock.service.transfer.bucket=transfer-server
awsmock.service.transfer.base.dir=/home/awsmock/data/transfer
awsmock.service.transfer.monitoring.period=300
#
# Cognito module
#
# awsmock.service.cognito.active                module activation
# awsmock.worker.cognito.timeout                polling period
#
awsmock.service.cognito.active=true
awsmock.service.cognito.period=10000
awsmock.worker.cognito.timeout=120
#
# DynamoDB module
#
# awsmock.service.dynamodb.active               module activation
# awsmock.service.dynamodb.monitoring.period    monitoring polling period, default: 300
# awsmock.dynamodb.host:                        host name of the DynamoDB docker image, default: localhost
# awsmock.dynamodb.port:                        port of the DynamoDB docker image, default: 8000
#
awsmock.service.dynamodb.active=true
awsmock.service.dynamodb.http.port=9506
awsmock.service.dynamodb.http.host=localhost
awsmock.service.dynamodb.http.max.queue=250
awsmock.service.dynamodb.http.max.thread=50
awsmock.service.dynamodb.monitoring.period=300
awsmock.dynamodb.host=localhost
awsmock.dynamodb.port=8000
#
#
# awsmock.service.secretsmanager.active             module activation
# awsmock.service.secretsmanager.monitoring.period: monitoring period in seconds, default: 300
#
awsmock.service.secretsmanager.active=true
awsmock.service.secretsmanager.monitoring.period=300
#
# KMS service
#
# awsmock.service.kms.active                    Activation flag
# awsmock.service.kms.monitoring.period:        KMS monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            KMS maintenance worker period in seconds, default: 30sec.
#
awsmock.service.kms.active=true
awsmock.service.kms.monitoring.period=300
awsmock.service.kms.worker.period=3600
#
# SSM service
#
# awsmock.service.ssm.active                    Activation flag
# awsmock.service.ssm.monitoring.period:        SSM monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            SSM maintenance worker period in seconds, default: 30sec.
#
awsmock.service.ssm.active=true
awsmock.service.ssm.monitoring.period=300
awsmock.service.ssm.worker.period=3600
#
# Docker module
#
# awsmock.docker.network.mode:                  docker network mode [bridge|host]
# awsmock.docker.network.name:                  docker internal network name
# awsmock.docker.default.memory.size:           docker default memory size
# awsmock.docker.default.temp.size:             docker temp disk space
# awsmock.docker.container.port:                docker internal container port [8080]
# awsmock.docker.socket:                        docker socket
#
awsmock.docker.network.mode=bridge
awsmock.docker.network.name=.dockerhost.net
awsmock.docker.default.memory.size=512
awsmock.docker.default.temp.size=10240
awsmock.docker.container.port=8080
awsmock.docker.socket=/var/run/docker.sock
#
# FTP module
#
# awsmock.service.ftp.port:                     FTP default port
# awsmock.service.ftp.host:                     FTP host
# awsmock.service.ftp.max.thread:               Maximal number concurrent threads
# awsmock.service.ftp.base.dir:                 Base directory for all users
# awsmock.service.ftp.pasv.min:                 Passive mode minimum port, default: 6000
# awsmock.service.ftp.pasv.max:                 Passive mode maximum port, default: 6010
#
awsmock.service.ftp.port=21
awsmock.service.ftp.host=localhost
awsmock.service.ftp.max.thread=4
awsmock.service.ftp.base.dir=/home/awsmock/data/transfer
awsmock.service.ftp.pasv.min=6000
awsmock.service.ftp.pasv.max=6010
#
# MongoDB Database
#
# awsmock.mongodb.active:                       if true run with mongodb, otherwise run with in-memory database
# awsmock.mongodb.name:                         database name of the mongodb database
# awsmock.mongodb.host:                         database host name of the mongodb instance
# awsmock.mongodb.port:                         database port of the mongodb instance
# awsmock.mongodb.user:                         database user of the mongodb instance
# awsmock.mongodb.password:                     database password of the mongodb instance
# awsmock.mongodb.pool.size:                    connection pool size
#
awsmock.mongodb.active=true
awsmock.mongodb.name=awsmock
awsmock.mongodb.host=localhost
awsmock.mongodb.port=27017
awsmock.mongodb.user=admin
awsmock.mongodb.password=admin
awsmock.mongodb.pool.size=256
#
# Prometheus Monitoring
#
# awsmock.service.monitoring.port:              prometheus port
# awsmock.service.monitoring.period:            monitoring system metrics period in seconds
# awsmock.service.monitoring.prometheus:        publish for prometheus
# awsmock.service.monitoring.intern:            use intern monitoring only
# awsmock.service.monitoring.retention:         monitoring data retention period in days
#
awsmock.service.monitoring.port=9091
awsmock.service.monitoring.period=60
awsmock.service.monitoring.prometheus=true
awsmock.service.monitoring.intern=true
awsmock.service.monitoring.retention=3
#
# Logging
#
# awsmock.log.level:                            logging level, default: debug, valid: none,fatal,error,warning,info,debug,verbose
#
awsmock.service.logging.level=debug
awsmock.service.logging.file=/var/log/awsmock.log
