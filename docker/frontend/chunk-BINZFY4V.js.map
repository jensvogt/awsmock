{"version":3,"sources":["node_modules/ng-apexcharts/fesm2022/ng-apexcharts.mjs","src/app/services/monitoring.service.ts","src/app/services/chart-service.component.ts","src/app/modules/dashboard/charts/cpu-chart/cpu-chart.component.ts","src/app/modules/dashboard/charts/cpu-chart/cpu-chart.component.html","src/app/modules/dashboard/charts/thread-chart/threads-chart.component.ts","src/app/modules/dashboard/charts/thread-chart/threads-chart.component.html","src/app/modules/dashboard/charts/gateway-time/gateway-time.component.ts","src/app/modules/dashboard/charts/gateway-time/gateway-time.component.html","src/app/modules/dashboard/charts/memory-chart/memory-chart.component.ts","src/app/modules/dashboard/charts/memory-chart/memory-chart.component.html","node_modules/@angular/material/fesm2022/toolbar.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","src/app/services/module.service.ts","src/app/modules/infrastructure/selection/module-selection.component.ts","src/app/modules/infrastructure/selection/module-selection.component.html","src/app/modules/infrastructure/export/file-export/file-export.component.ts","src/app/modules/infrastructure/export/file-export/file-export.component.html","src/app/modules/infrastructure/export/export-infrastructure.component.ts","src/app/modules/infrastructure/export/export-infrastructure.component.html","src/app/modules/infrastructure/import/import-infrastructure.component.ts","src/app/modules/infrastructure/import/import-infrastructure.component.html","src/app/modules/dashboard/dashboard.component.ts","src/app/modules/dashboard/dashboard.component.html","src/app/modules/dashboard/state/dashboard.reducer.ts","src/app/modules/dashboard/state/dashboard.actions.ts","src/app/modules/dashboard/state/dashboard.effects.ts","src/app/modules/dashboard/dashboard-routing.module.ts","src/app/modules/dashboard/dashboard.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, signal, inject, NgZone, PLATFORM_ID, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { asapScheduler } from 'rxjs';\nconst _c0 = [\"chart\"];\nclass ChartComponent {\n  constructor() {\n    this.autoUpdateSeries = true;\n    this.chartReady = new EventEmitter();\n    // The instance stored in `signal` will be exposed in the future.\n    // Consumers can then use it in conjunction with `computed` to retrieve\n    // the latest chart instance and execute logic on the chart whenever it changes.\n    this.chartInstance = signal(null);\n    this.ngZone = inject(NgZone);\n    this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n  }\n  ngOnChanges(changes) {\n    if (!this.isBrowser) return;\n    this.ngZone.runOutsideAngular(() => {\n      asapScheduler.schedule(() => this.hydrate(changes));\n    });\n  }\n  ngOnDestroy() {\n    this.destroy();\n  }\n  hydrate(changes) {\n    const shouldUpdateSeries = this.autoUpdateSeries && Object.keys(changes).filter(c => c !== \"series\").length === 0;\n    if (shouldUpdateSeries) {\n      this.updateSeries(this.series, true);\n      return;\n    }\n    this.createElement();\n  }\n  async createElement() {\n    const {\n      default: ApexCharts\n    } = await import('apexcharts');\n    window.ApexCharts ||= ApexCharts;\n    const options = {};\n    if (this.annotations) {\n      options.annotations = this.annotations;\n    }\n    if (this.chart) {\n      options.chart = this.chart;\n    }\n    if (this.colors) {\n      options.colors = this.colors;\n    }\n    if (this.dataLabels) {\n      options.dataLabels = this.dataLabels;\n    }\n    if (this.series) {\n      options.series = this.series;\n    }\n    if (this.stroke) {\n      options.stroke = this.stroke;\n    }\n    if (this.labels) {\n      options.labels = this.labels;\n    }\n    if (this.legend) {\n      options.legend = this.legend;\n    }\n    if (this.fill) {\n      options.fill = this.fill;\n    }\n    if (this.tooltip) {\n      options.tooltip = this.tooltip;\n    }\n    if (this.plotOptions) {\n      options.plotOptions = this.plotOptions;\n    }\n    if (this.responsive) {\n      options.responsive = this.responsive;\n    }\n    if (this.markers) {\n      options.markers = this.markers;\n    }\n    if (this.noData) {\n      options.noData = this.noData;\n    }\n    if (this.xaxis) {\n      options.xaxis = this.xaxis;\n    }\n    if (this.yaxis) {\n      options.yaxis = this.yaxis;\n    }\n    if (this.forecastDataPoints) {\n      options.forecastDataPoints = this.forecastDataPoints;\n    }\n    if (this.grid) {\n      options.grid = this.grid;\n    }\n    if (this.states) {\n      options.states = this.states;\n    }\n    if (this.title) {\n      options.title = this.title;\n    }\n    if (this.subtitle) {\n      options.subtitle = this.subtitle;\n    }\n    if (this.theme) {\n      options.theme = this.theme;\n    }\n    this.destroy();\n    const chartInstance = this.ngZone.runOutsideAngular(() => new ApexCharts(this.chartElement.nativeElement, options));\n    this.chartInstance.set(chartInstance);\n    this.render();\n    this.chartReady.emit({\n      chartObj: chartInstance\n    });\n  }\n  render() {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.render());\n  }\n  updateOptions(options, redrawPaths, animate, updateSyncedCharts) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.updateOptions(options, redrawPaths, animate, updateSyncedCharts));\n  }\n  updateSeries(newSeries, animate) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.updateSeries(newSeries, animate));\n  }\n  appendSeries(newSeries, animate) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.appendSeries(newSeries, animate));\n  }\n  appendData(newData) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.appendData(newData));\n  }\n  highlightSeries(seriesName) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.highlightSeries(seriesName));\n  }\n  toggleSeries(seriesName) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.toggleSeries(seriesName));\n  }\n  showSeries(seriesName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.showSeries(seriesName));\n  }\n  hideSeries(seriesName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.hideSeries(seriesName));\n  }\n  resetSeries() {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.resetSeries());\n  }\n  zoomX(min, max) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(min, max));\n  }\n  toggleDataPointSelection(seriesIndex, dataPointIndex) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.toggleDataPointSelection(seriesIndex, dataPointIndex));\n  }\n  destroy() {\n    this.chartInstance()?.destroy();\n    this.chartInstance.set(null);\n  }\n  setLocale(localeName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(localeName));\n  }\n  paper() {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());\n  }\n  addXaxisAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addXaxisAnnotation(options, pushToMemory, context));\n  }\n  addYaxisAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addYaxisAnnotation(options, pushToMemory, context));\n  }\n  addPointAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addPointAnnotation(options, pushToMemory, context));\n  }\n  removeAnnotation(id, options) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.removeAnnotation(id, options));\n  }\n  clearAnnotations(options) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.clearAnnotations(options));\n  }\n  dataURI(options) {\n    return this.chartInstance()?.dataURI(options);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function ChartComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartComponent,\n      selectors: [[\"apx-chart\"]],\n      viewQuery: function ChartComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartElement = _t.first);\n        }\n      },\n      inputs: {\n        chart: \"chart\",\n        annotations: \"annotations\",\n        colors: \"colors\",\n        dataLabels: \"dataLabels\",\n        series: \"series\",\n        stroke: \"stroke\",\n        labels: \"labels\",\n        legend: \"legend\",\n        markers: \"markers\",\n        noData: \"noData\",\n        fill: \"fill\",\n        tooltip: \"tooltip\",\n        plotOptions: \"plotOptions\",\n        responsive: \"responsive\",\n        xaxis: \"xaxis\",\n        yaxis: \"yaxis\",\n        forecastDataPoints: \"forecastDataPoints\",\n        grid: \"grid\",\n        states: \"states\",\n        title: \"title\",\n        subtitle: \"subtitle\",\n        theme: \"theme\",\n        autoUpdateSeries: \"autoUpdateSeries\"\n      },\n      outputs: {\n        chartReady: \"chartReady\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 0,\n      consts: [[\"chart\", \"\"]],\n      template: function ChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", null, 0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      selector: \"apx-chart\",\n      template: `<div #chart></div>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true\n    }]\n  }], null, {\n    chart: [{\n      type: Input\n    }],\n    annotations: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    dataLabels: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    markers: [{\n      type: Input\n    }],\n    noData: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    plotOptions: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    xaxis: [{\n      type: Input\n    }],\n    yaxis: [{\n      type: Input\n    }],\n    forecastDataPoints: [{\n      type: Input\n    }],\n    grid: [{\n      type: Input\n    }],\n    states: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    subtitle: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    autoUpdateSeries: [{\n      type: Input\n    }],\n    chartReady: [{\n      type: Output\n    }],\n    chartElement: [{\n      type: ViewChild,\n      args: [\"chart\", {\n        static: true\n      }]\n    }]\n  });\n})();\nconst declarations = [ChartComponent];\nclass NgApexchartsModule {\n  /** @nocollapse */static {\n    this.ɵfac = function NgApexchartsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgApexchartsModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgApexchartsModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgApexchartsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [declarations],\n      exports: [declarations]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-apexcharts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartComponent, NgApexchartsModule };\n","// Angular Modules\nimport {Injectable} from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {MonitoringConfig} from \"./awsmock-http-config\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class MonitoringService {\n\n    monitoringConfig = new MonitoringConfig;\n    url: string = environment.gatewayEndpoint + '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     */\n    public getCounters(name: string, start: Date, end: Date, step: number) {\n        let headers = this.monitoringConfig.monitoringHttpOptions.headers.set('x-awsmock-Target', \"monitoring\").set('x-awsmock-action', \"get-counters\");\n        const body = {\n            region: environment.awsmockRegion,\n            name: name,\n            start: start.getTime(),\n            end: end.getTime(),\n            step: step\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n}\n","import {Injectable} from '@angular/core';\n\nexport interface TimeRange {\n    value: string;\n    viewValue: string;\n}\n\nconst TimeRanges: Array<TimeRange> = [\n    {value: 'Today', viewValue: 'Today'},\n    {value: 'LastHour', viewValue: 'Last Hour'},\n    {value: 'Last3Hours', viewValue: 'Last 3 Hours'},\n    {value: 'Last6Hours', viewValue: 'Last 6 Hours'},\n    {value: 'Last12Hours', viewValue: 'Last 12 Hours'},\n];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ChartService {\n\n    constructor() {\n    }\n\n    getAnimation() {\n        return {enabled: false};\n    }\n\n    getRanges(): TimeRange[] {\n        return TimeRanges as TimeRange[];\n    }\n\n    getDefaultRange(): string {\n        return TimeRanges[0].value;\n    }\n\n    getStartTime(choice: string): Date {\n        let startTime = new Date();\n        if (choice == 'Today') {\n            startTime.setHours(0, 0, 0, 0);\n        } else if (choice == 'LastHour') {\n            startTime.setHours(startTime.getHours() - 1);\n        } else if (choice == 'Last3Hours') {\n            startTime.setHours(startTime.getHours() - 3);\n        } else if (choice == 'Last6Hours') {\n            startTime.setHours(startTime.getHours() - 6);\n        } else if (choice == 'Last12Hours') {\n            startTime.setHours(startTime.getHours() - 12);\n        }\n        startTime.setSeconds(0);\n        startTime.setMilliseconds(0);\n        return startTime;\n    }\n\n    getEndTime(): Date {\n        let endTime = new Date();\n        endTime.setSeconds(0);\n        endTime.setMilliseconds(0);\n        return endTime;\n    }\n}","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    ApexAxisChartSeries,\n    ApexChart,\n    ApexDataLabels,\n    ApexGrid,\n    ApexStroke,\n    ApexTitleSubtitle,\n    ApexTooltip,\n    ApexXAxis,\n    ApexYAxis,\n    ChartComponent\n} from \"ng-apexcharts\";\nimport {MonitoringService} from \"../../../../services/monitoring.service\";\nimport {ChartService, TimeRange} from \"../../../../services/chart-service.component\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader} from \"@angular/material/card\";\nimport {MatOption, MatSelect} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\nimport {NgIf} from \"@angular/common\";\n\nexport type ChartOptions = {\n    series: ApexAxisChartSeries;\n    chart: ApexChart;\n    xaxis: ApexXAxis;\n    yaxis: ApexYAxis;\n    dataLabels: ApexDataLabels;\n    grid: ApexGrid;\n    stroke: ApexStroke;\n    title: ApexTitleSubtitle;\n    tooltip: ApexTooltip;\n};\n\n@Component({\n    selector: 'cpu-chart-component',\n    templateUrl: './cpu-chart.component.html',\n    styleUrls: ['./cpu-chart.component.scss'],\n    imports: [\n        MatCard,\n        MatCardHeader,\n        MatCardActions,\n        MatSelect,\n        FormsModule,\n        MatOption,\n        MatCardContent,\n        ChartComponent,\n        NgIf\n    ],\n    standalone: true\n})\nexport class CpuChartComponent implements OnInit {\n\n    public cpuChartOptions: Partial<ChartOptions> | undefined;\n\n    ranges: TimeRange[] = [];\n    selectedTimeRange: string = '';\n    @ViewChild(\"cpuChart\") cpuChart: ChartComponent | undefined;\n\n    constructor(private monitoringService: MonitoringService, private chartService: ChartService) {\n    }\n\n    ngOnInit(): void {\n        this.ranges = this.chartService.getRanges();\n        this.selectedTimeRange = this.chartService.getDefaultRange();\n        this.loadCpuChart();\n    }\n\n    loadCpuChart() {\n\n        let start = this.chartService.getStartTime(this.selectedTimeRange);\n        let end = this.chartService.getEndTime();\n        this.monitoringService.getCounters('total_cpu', start, end, 5)\n            .subscribe((data: any) => {\n                if (data) {\n                    this.cpuChartOptions = {\n                        series: [{name: \"CPU Usage\", data: data.counters}],\n                        chart: {height: 350, type: \"line\", animations: this.chartService.getAnimation()},\n                        dataLabels: {enabled: false},\n                        stroke: {show: true, curve: \"smooth\", width: 2},\n                        tooltip: {shared: true, x: {format: \"dd/MM HH:mm:ss\"}},\n                        title: {text: \"CPU\", align: \"center\"},\n                        grid: {row: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}, column: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}},\n                        xaxis: {type: \"datetime\", title: {text: \"Time\"}, labels: {datetimeUTC: false}, min: start.getTime(), max: end.getTime()},\n                        yaxis: {min: 0, decimalsInFloat: 3, title: {text: \"CPU [%]\"}, labels: {offsetX: 10}}\n                    };\n                }\n            });\n    }\n}\n","<mat-card class=\"mat-elevation-z4\">\n    <mat-card-header>\n        <div class=\"container\">\n            <div class=\"flex-container-left\">\n                <div class=\"flex-item\">\n                    <!--mat-card-title class=\"one\">Performance</mat-card-title-->\n                </div>\n            </div>\n            <div class=\"flex-container-right\">\n                <div class=\"flex-item\">\n                    <mat-card-actions>\n                        <mat-select (selectionChange)=\"loadCpuChart()\" [(ngModel)]=\"selectedTimeRange\" style=\"width:200px\">\n                            @for (range of ranges; track range) {\n                                <mat-option [value]=\"range.value\">{{ range.viewValue }}</mat-option>\n                            }\n                        </mat-select>\n                    </mat-card-actions>\n                </div>\n            </div>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <apx-chart *ngIf=\"cpuChartOptions\"\n                   [chart]=\"cpuChartOptions.chart\"\n                   [dataLabels]=\"cpuChartOptions.dataLabels\"\n                   [grid]=\"cpuChartOptions.grid\"\n                   [series]=\"cpuChartOptions.series\"\n                   [stroke]=\"cpuChartOptions.stroke\"\n                   [title]=\"cpuChartOptions.title\"\n                   [tooltip]=\"cpuChartOptions.tooltip\"\n                   [xaxis]=\"cpuChartOptions.xaxis\"\n                   [yaxis]=\"cpuChartOptions.yaxis\"\n        ></apx-chart>\n    </mat-card-content>\n</mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    ApexAxisChartSeries,\n    ApexChart,\n    ApexDataLabels,\n    ApexGrid,\n    ApexStroke,\n    ApexTitleSubtitle,\n    ApexTooltip,\n    ApexXAxis,\n    ApexYAxis,\n    ChartComponent\n} from \"ng-apexcharts\";\nimport {MonitoringService} from \"../../../../services/monitoring.service\";\nimport {ChartService, TimeRange} from \"../../../../services/chart-service.component\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader} from \"@angular/material/card\";\nimport {MatOption, MatSelect} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\nimport {NgIf} from \"@angular/common\";\n\nexport type ChartOptions = {\n    series: ApexAxisChartSeries;\n    chart: ApexChart;\n    xaxis: ApexXAxis;\n    yaxis: ApexYAxis;\n    dataLabels: ApexDataLabels;\n    grid: ApexGrid;\n    stroke: ApexStroke;\n    title: ApexTitleSubtitle;\n    tooltip: ApexTooltip;\n};\n\n@Component({\n    selector: 'threads-chart-component',\n    templateUrl: './threads-chart.component.html',\n    styleUrls: ['./threads-chart.component.scss'],\n    imports: [\n        MatCardHeader,\n        MatCard,\n        MatCardActions,\n        MatSelect,\n        FormsModule,\n        MatOption,\n        MatCardContent,\n        ChartComponent,\n        NgIf\n    ],\n    standalone: true\n})\nexport class ThreadsChartComponent implements OnInit {\n\n    public threadsChartOptions: Partial<ChartOptions> | undefined;\n\n    ranges: TimeRange[] = [];\n    selectedTimeRange: string = '';\n    @ViewChild(\"threadsChart\") threadsChart: ChartComponent | undefined;\n\n    constructor(private monitoringService: MonitoringService, private chartService: ChartService) {\n    }\n\n    ngOnInit(): void {\n        this.ranges = this.chartService.getRanges();\n        this.selectedTimeRange = this.chartService.getDefaultRange();\n        this.loadThreadChart();\n    }\n\n    loadThreadChart() {\n\n        let start = this.chartService.getStartTime(this.selectedTimeRange);\n        let end = this.chartService.getEndTime();\n        this.monitoringService.getCounters('total_threads', start, end, 5)\n            .subscribe((data: any) => {\n                if (data) {\n                    this.threadsChartOptions = {\n                        series: [{name: \"Threads\", data: data.counters}],\n                        chart: {height: 350, type: \"line\", animations: this.chartService.getAnimation()},\n                        dataLabels: {enabled: false},\n                        stroke: {show: true, curve: \"smooth\", width: 2},\n                        tooltip: {shared: true, x: {format: \"dd/MM HH:mm:ss\"}},\n                        title: {text: \"Threads\", align: \"center\"},\n                        grid: {row: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}, column: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}},\n                        xaxis: {type: \"datetime\", title: {text: \"Time\"}, labels: {datetimeUTC: false}, min: start.getTime(), max: end.getTime()},\n                        yaxis: {min: 0, decimalsInFloat: 0, title: {text: \"CPU [%]\"}, labels: {offsetX: 10}}\n                    };\n                }\n            });\n    }\n}\n","<mat-card class=\"mat-elevation-z4\">\n    <mat-card-header>\n        <div class=\"container\">\n            <div class=\"flex-container-left\">\n                <div class=\"flex-item\">\n                    <!--mat-card-title class=\"one\">Performance</mat-card-title-->\n                </div>\n            </div>\n            <div class=\"flex-container-right\">\n                <div class=\"flex-item\">\n                    <mat-card-actions>\n                        <mat-select (selectionChange)=\"loadThreadChart()\" [(ngModel)]=\"selectedTimeRange\" style=\"width:200px\">\n                            @for (range of ranges; track range) {\n                                <mat-option [value]=\"range.value\">{{ range.viewValue }}</mat-option>\n                            }\n                        </mat-select>\n                    </mat-card-actions>\n                </div>\n            </div>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <apx-chart *ngIf=\"threadsChartOptions\"\n                   [chart]=\"threadsChartOptions.chart\"\n                   [dataLabels]=\"threadsChartOptions.dataLabels\"\n                   [grid]=\"threadsChartOptions.grid\"\n                   [series]=\"threadsChartOptions.series\"\n                   [stroke]=\"threadsChartOptions.stroke\"\n                   [title]=\"threadsChartOptions.title\"\n                   [tooltip]=\"threadsChartOptions.tooltip\"\n                   [xaxis]=\"threadsChartOptions.xaxis\"\n                   [yaxis]=\"threadsChartOptions.yaxis\"\n        ></apx-chart>\n    </mat-card-content>\n</mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    ApexAxisChartSeries,\n    ApexChart,\n    ApexDataLabels,\n    ApexGrid,\n    ApexStroke,\n    ApexTitleSubtitle,\n    ApexTooltip,\n    ApexXAxis,\n    ApexYAxis,\n    ChartComponent\n} from \"ng-apexcharts\";\nimport {MonitoringService} from \"../../../../services/monitoring.service\";\nimport {ChartService, TimeRange} from \"../../../../services/chart-service.component\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader} from \"@angular/material/card\";\nimport {MatOption, MatSelect} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\nimport {NgIf} from \"@angular/common\";\n\nexport type ChartOptions = {\n    series: ApexAxisChartSeries;\n    chart: ApexChart;\n    xaxis: ApexXAxis;\n    yaxis: ApexYAxis;\n    dataLabels: ApexDataLabels;\n    grid: ApexGrid;\n    stroke: ApexStroke;\n    title: ApexTitleSubtitle;\n    tooltip: ApexTooltip;\n};\n\n@Component({\n    selector: 'gateway-time-chart-component',\n    templateUrl: './gateway-time.component.html',\n    styleUrls: ['./gateway-time.component.scss'],\n    imports: [\n        MatCardHeader,\n        MatCard,\n        MatCardActions,\n        MatSelect,\n        FormsModule,\n        MatOption,\n        MatCardContent,\n        ChartComponent,\n        NgIf\n    ],\n    standalone: true\n})\nexport class GatewayTimeComponent implements OnInit {\n\n    public httpTimeChartOptions: Partial<ChartOptions> | undefined;\n\n    ranges: TimeRange[] = [];\n    selectedTimeRange: string = '';\n    @ViewChild(\"httpTimerChart\") httpTimerChart: ChartComponent | undefined;\n\n    constructor(private monitoringService: MonitoringService, private chartService: ChartService) {\n    }\n\n    ngOnInit(): void {\n        this.ranges = this.chartService.getRanges();\n        this.selectedTimeRange = this.chartService.getDefaultRange();\n        this.loadHttpTimeChart();\n    }\n\n    loadHttpTimeChart() {\n\n        let start = this.chartService.getStartTime(this.selectedTimeRange);\n        let end = this.chartService.getEndTime();\n        this.monitoringService.getCounters('gateway_http_timer', start, end, 5)\n            .subscribe((data: any) => {\n                if (data) {\n                    this.httpTimeChartOptions = {\n                        series: [{name: \"HTTP Response Time\", data: data.counters}],\n                        chart: {height: 350, type: \"line\", animations: this.chartService.getAnimation()},\n                        dataLabels: {enabled: false},\n                        stroke: {show: true, curve: \"smooth\", width: 2},\n                        title: {text: \"HTTP Response Time\", align: \"center\"},\n                        tooltip: {x: {format: \"dd/MM HH:mm:ss\"}},\n                        grid: {row: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}, column: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}},\n                        xaxis: {type: \"datetime\", title: {text: \"Time\"}, labels: {datetimeUTC: false}, min: start.getTime(), max: end.getTime()},\n                        yaxis: {\n                            min: 0, forceNiceScale: true, decimalsInFloat: 0, title: {text: \"HTTP Response Time [ms]\"}, labels: {\n                                formatter: function (val) {\n                                    return val.toFixed(0)\n                                },\n                                offsetX: 10\n                            }\n                        }\n                    };\n                }\n            });\n    }\n}\n","<mat-card class=\"mat-elevation-z3\">\n    <mat-card-header>\n        <div class=\"container\">\n            <div class=\"flex-container-left\">\n                <div class=\"flex-item\">\n                    <!--mat-card-title class=\"one\">Performance</mat-card-title-->\n                </div>\n            </div>\n            <div class=\"flex-container-right\">\n                <div class=\"flex-item\">\n                    <mat-card-actions>\n                        <mat-select (selectionChange)=\"loadHttpTimeChart()\" [(ngModel)]=\"selectedTimeRange\" style=\"width:200px\">\n                            @for (range of ranges; track range) {\n                                <mat-option [value]=\"range.value\">{{ range.viewValue }}</mat-option>\n                            }\n                        </mat-select>\n                    </mat-card-actions>\n                </div>\n            </div>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <div>\n            <apx-chart *ngIf=\"httpTimeChartOptions\"\n                       [chart]=\"httpTimeChartOptions.chart\"\n                       [dataLabels]=\"httpTimeChartOptions.dataLabels\"\n                       [grid]=\"httpTimeChartOptions.grid\"\n                       [series]=\"httpTimeChartOptions.series\"\n                       [stroke]=\"httpTimeChartOptions.stroke\"\n                       [title]=\"httpTimeChartOptions.title\"\n                       [tooltip]=\"httpTimeChartOptions.tooltip\"\n                       [xaxis]=\"httpTimeChartOptions.xaxis\"\n                       [yaxis]=\"httpTimeChartOptions.yaxis\"\n            ></apx-chart>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    ApexAxisChartSeries,\n    ApexChart,\n    ApexDataLabels,\n    ApexGrid,\n    ApexStroke,\n    ApexTitleSubtitle,\n    ApexTooltip,\n    ApexXAxis,\n    ApexYAxis,\n    ChartComponent\n} from \"ng-apexcharts\";\nimport {MonitoringService} from \"../../../../services/monitoring.service\";\nimport {ChartService, TimeRange} from \"../../../../services/chart-service.component\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader} from \"@angular/material/card\";\nimport {MatOption, MatSelect} from \"@angular/material/select\";\nimport {NgIf} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nexport type ChartOptions = {\n    series: ApexAxisChartSeries;\n    chart: ApexChart;\n    xaxis: ApexXAxis;\n    yaxis: ApexYAxis;\n    dataLabels: ApexDataLabels;\n    grid: ApexGrid;\n    stroke: ApexStroke;\n    title: ApexTitleSubtitle;\n    tooltip: ApexTooltip;\n};\n\n@Component({\n    selector: 'memory-chart-component',\n    templateUrl: './memory-chart.component.html',\n    styleUrls: ['./memory-chart.component.scss'],\n    imports: [\n        MatCardActions,\n        MatSelect,\n        MatCardHeader,\n        MatCard,\n        MatCardContent,\n        ChartComponent,\n        NgIf,\n        FormsModule,\n        MatOption\n    ],\n    standalone: true\n})\nexport class MemoryChartComponent implements OnInit {\n\n    public memChartOptions: Partial<ChartOptions> | undefined;\n\n    ranges: TimeRange[] = [];\n    selectedTimeRange: string = '';\n    @ViewChild(\"memoryChart\") memoryChart: ChartComponent | undefined;\n\n    constructor(private monitoringService: MonitoringService, private chartService: ChartService) {\n    }\n\n    ngOnInit(): void {\n        this.ranges = this.chartService.getRanges();\n        this.selectedTimeRange = this.chartService.getDefaultRange();\n        this.loadMemoryChart();\n    }\n\n    loadMemoryChart() {\n\n        let start = this.chartService.getStartTime(this.selectedTimeRange);\n        let end = this.chartService.getEndTime();\n        this.monitoringService.getCounters('real_memory_used', start, end, 5)\n            .subscribe((data: any) => {\n                if (data) {\n                    this.memChartOptions = {\n                        series: [{name: \"memoryChart\", data: data.counters}],\n                        chart: {height: 350, type: \"line\", animations: this.chartService.getAnimation()},\n                        dataLabels: {enabled: false},\n                        stroke: {show: true, curve: \"smooth\", width: 2},\n                        title: {text: \"Memory\", align: \"center\"},\n                        tooltip: {x: {format: \"dd/MM HH:mm:ss\"}},\n                        grid: {row: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}, column: {colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.5}},\n                        xaxis: {type: \"datetime\", title: {text: \"Time\"}, labels: {datetimeUTC: false}, min: start.getTime(), max: end.getTime()},\n                        yaxis: {\n                            min: 0, forceNiceScale: true, decimalsInFloat: 0, title: {text: \"Memory [MB]\"}, labels: {\n                                formatter: function (val) {\n                                    val /= 1024;\n                                    return val.toFixed(0);\n                                },\n                                offsetX: 10\n                            }\n                        }\n                    };\n                }\n            });\n    }\n}\n","<mat-card class=\"mat-elevation-z3\">\n    <mat-card-header>\n        <div class=\"container\">\n            <div class=\"flex-container-left\">\n                <div class=\"flex-item\">\n                    <!--mat-card-title class=\"one\">Performance</mat-card-title-->\n                </div>\n            </div>\n            <div class=\"flex-container-right\">\n                <div class=\"flex-item\">\n                    <mat-card-actions>\n                        <mat-select (selectionChange)=\"loadMemoryChart()\" [(ngModel)]=\"selectedTimeRange\" style=\"width:200px\">\n                            @for (range of ranges; track range) {\n                                <mat-option [value]=\"range.value\">{{ range.viewValue }}</mat-option>\n                            }\n                        </mat-select>\n                    </mat-card-actions>\n                </div>\n            </div>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <div>\n            <apx-chart *ngIf=\"memChartOptions\"\n                       [chart]=\"memChartOptions.chart\"\n                       [dataLabels]=\"memChartOptions.dataLabels\"\n                       [grid]=\"memChartOptions.grid\"\n                       [series]=\"memChartOptions.series\"\n                       [stroke]=\"memChartOptions.stroke\"\n                       [title]=\"memChartOptions.title\"\n                       [tooltip]=\"memChartOptions.tooltip\"\n                       [xaxis]=\"memChartOptions.xaxis\"\n                       [yaxis]=\"memChartOptions.yaxis\"\n            ></apx-chart>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static {\n    this.ɵfac = function MatToolbarRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbarRow)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatToolbarRow,\n      selectors: [[\"mat-toolbar-row\"]],\n      hostAttrs: [1, \"mat-toolbar-row\"],\n      exportAs: [\"matToolbarRow\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  constructor(_elementRef, _platform, document) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static {\n    this.ɵfac = function MatToolbar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatToolbar,\n      selectors: [[\"mat-toolbar\"]],\n      contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-toolbar\"],\n      hostVars: 6,\n      hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n        }\n      },\n      inputs: {\n        color: \"color\"\n      },\n      exportAs: [\"matToolbar\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 0,\n      template: function MatToolbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n        }\n      },\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-app-surface));color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-app-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-app-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-app-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-app-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-app-title-large-tracking));margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-app-surface));color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-app-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-app-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-app-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-app-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-app-title-large-tracking));margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-app-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static {\n    this.ɵfac = function MatToolbarModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatToolbarModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._options = _options;\n    /** CSS classes to add when transitioning between the different checkbox states. */\n    this._animationClasses = {\n      uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n      uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n      checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n      checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n      indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n      indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n    };\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     */\n    this.ariaLabel = '';\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    this.ariaLabelledby = null;\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    this.labelPosition = 'after';\n    /** Name value will be applied to the input element if present */\n    this.name = null;\n    /** Event emitted when the checkbox's `checked` value changes. */\n    this.change = new EventEmitter();\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    this.indeterminateChange = new EventEmitter();\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    this._currentAnimationClass = '';\n    this._currentCheckState = TransitionCheckState.Init;\n    this._controlValueAccessorChangeFn = () => {};\n    this._validatorChangeFn = () => {};\n    this._checked = false;\n    this._disabled = false;\n    this._indeterminate = false;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n    this.disabledInteractive = _options?.disabledInteractive ?? false;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this._indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate;\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = value;\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n    this._syncIndeterminate(this._indeterminate);\n  }\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static {\n    this.ɵfac = function MatCheckbox_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCheckbox)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatCheckbox,\n      selectors: [[\"mat-checkbox\"]],\n      viewQuery: function MatCheckbox_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(MatRipple, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-checkbox\"],\n      hostVars: 16,\n      hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n        }\n      },\n      inputs: {\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n        id: \"id\",\n        required: [2, \"required\", \"required\", booleanAttribute],\n        labelPosition: \"labelPosition\",\n        name: \"name\",\n        value: \"value\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n        color: \"color\",\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n        checked: [2, \"checked\", \"checked\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\",\n        indeterminateChange: \"indeterminateChange\"\n      },\n      exportAs: [\"matCheckbox\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 15,\n      vars: 20,\n      consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n      template: function MatCheckbox_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n          });\n          i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTouchTargetClick());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 6, 1);\n          i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onBlur());\n          })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInputClick());\n          })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"div\", 7);\n          i0.ɵɵelementStart(7, \"div\", 8);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 9);\n          i0.ɵɵelement(9, \"path\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelement(10, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"label\", 13, 2);\n          i0.ɵɵprojection(14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const checkbox_r2 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n          i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"name\", ctx.name)(\"value\", ctx.value);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", ctx.inputId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n    }]\n  }], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCheckboxRequiredValidator_BaseFactory;\n      return function MatCheckboxRequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(__ngFactoryType__ || MatCheckboxRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCheckboxRequiredValidator,\n      selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n      providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n  static {\n    this.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _MatCheckboxRequiredValidatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: _MatCheckboxRequiredValidatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckboxRequiredValidator],\n      exports: [MatCheckboxRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatCheckboxModule {\n  static {\n    this.ɵfac = function MatCheckboxModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCheckboxModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatCheckboxModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","// Angular Modules\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {environment} from \"../../environments/environment\";\nimport {ManagerConfig} from \"./awsmock-http-config\";\nimport {catchError, throwError} from \"rxjs\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable()\nexport class ModuleService {\n\n    managerConfig = new ManagerConfig;\n    url: string = environment.gatewayEndpoint + '/';\n\n    constructor(private http: HttpClient, private snackBar: MatSnackBar) {\n    }\n\n    /**\n     * @brief Returns the available modules names\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     */\n    public getModuleList() {\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'list-modules');\n        return this.http.get(this.url, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    /**\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     */\n    public exportInfrastructure(moduleList: string[], includeObjects: boolean, prettyPrint: boolean) {\n        let body = {\n            prettyPrint: prettyPrint,\n            includeObjects: includeObjects,\n            modules: moduleList\n        }\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'export');\n        return this.http.post(this.url, body, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    /**\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     */\n    public importInfrastructure(body: string) {\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'import');\n        return this.http.post(this.url, body, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    public cleanInfrastructure(body: any) {\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'clean-objects');\n        return this.http.post(this.url, body, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    public eraseInfrastructure(body: any) {\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'erase-infrastructure');\n        return this.http.post(this.url, body, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    public getConfig() {\n        let headers = this.managerConfig.managerHttpOptions.headers.set('x-awsmock-target', 'module').set('x-awsmock-action', 'get-config');\n        return this.http.get(this.url, {headers: headers}).pipe(catchError(this.handleError));\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.status === 0) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error);\n            this.snackBar.open(\"Network error, message: \" + error.error, 'X', {duration: 5000, panelClass: 'error'})\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong.\n            console.error(\n                `Backend returned code ${error.status}, body was: `, error.error);\n            this.snackBar.open(\"Backend return code: \" + error.status + \", message: \" + error.error, 'X', {duration: 5000, panelClass: 'error'})\n        }\n        // Return an observable with a user-facing error message.\n        return throwError(() => new Error('Something bad happened; please try again later.'));\n    }\n}\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from \"@angular/core\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader, MatCardImage, MatCardTitle} from \"@angular/material/card\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatToolbar} from \"@angular/material/toolbar\";\nimport {JsonPipe, NgForOf, NgIf, SlicePipe} from \"@angular/common\";\nimport {MatList, MatListItem, MatListOption} from \"@angular/material/list\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {MatFormField, MatLabel, MatOption, MatSelect} from \"@angular/material/select\";\nimport {MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatCheckbox, MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {ModuleService} from \"../../../services/module.service\";\n\nconst AllModules = {\n    modules: [\n        {name: 's3', displayName: 'S3', selected: false},\n        {name: 'sqs', displayName: 'SQS', selected: false},\n        {name: 'sns', displayName: 'SNS', selected: false},\n        {name: 'kms', displayName: 'KMS', selected: false},\n        {name: 'ssm', displayName: 'SSM', selected: false},\n        {name: 'secretsmanager', displayName: 'SecretsManager', selected: false},\n        {name: 'cognito', displayName: 'Cognito', selected: false},\n        {name: 'dynamodb', displayName: 'DynamoDB', selected: false},\n        {name: 'lambda', displayName: 'Lambda', selected: false},\n        {name: 'transfer', displayName: 'Transfer', selected: false},\n    ]\n}\n\n@Component({\n    selector: 'module-selection-component',\n    templateUrl: './module-selection.component.html',\n    standalone: true,\n    imports: [\n        MatCard,\n        MatCardHeader,\n        MatCardContent,\n        MatCardActions,\n        MatCardImage,\n        MatCardTitle,\n        MatButton,\n        MatToolbar,\n        NgIf,\n        NgForOf,\n        MatList,\n        MatIcon,\n        MatListItem,\n        MatSelect,\n        MatOption,\n        MatIconButton,\n        MatListOption,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        MatCheckbox,\n        MatCheckboxModule,\n        JsonPipe,\n        SlicePipe,\n        FormsModule,\n        CdkDrag,\n        CdkDragHandle\n    ],\n    providers: [ModuleService],\n    styleUrls: ['./module-selection.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModuleSelectionComponentDialog implements OnInit {\n\n    title: string | undefined = \"\";\n\n    allSelected: boolean = true;\n    includeObjects: boolean = false;\n    includeObjectsVisible: boolean = false\n    onlyObjects: boolean = true;\n    onlyObjectsVisible: boolean = false\n    prettyPrint: boolean = true\n    prettyPrintVisible: boolean = false\n    mode: string = 'export';\n    protected readonly allModules = AllModules.modules;\n\n    constructor(private dialogRef: MatDialogRef<ModuleSelectionComponentDialog>, @Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar) {\n        this.title = data.title;\n        this.mode = data.mode;\n        if (this.mode === 'export') {\n            this.includeObjectsVisible = true;\n            this.prettyPrintVisible = true;\n        } else if (this.mode === 'clean') {\n            this.onlyObjects = true;\n            this.onlyObjectsVisible = true;\n        } else if (this.mode === 'erase') {\n            this.onlyObjectsVisible = false;\n        }\n        this.setAll();\n    }\n\n    ngOnInit(): void {\n        /*  this.moduleService.getModuleList().subscribe((data: any) => {\n              data.forEach((module: any) => {\n                  this.allModules?.push({name: module.name, selected: false, displayName: module.name});\n              });\n              this.setAll();\n              this.cdr.detectChanges();\n          })*/\n    }\n\n    setAll() {\n        this.allModules?.forEach((item) => {\n            item.selected = this.allSelected;\n        });\n    }\n\n    includeObjectsSelected() {\n        this.snackBar.open(\"The resulting file can be very big! Files bigger 10MB will be rejected! Use the command line client instead.\", \"Done\", {duration: 3000})\n    }\n\n    close() {\n        this.dialogRef.close(false);\n    }\n\n    save() {\n        this.dialogRef.close({modules: this.allModules, onlyObjects: this.onlyObjects, includeObjects: this.includeObjects, prettyPrint: this.prettyPrint});\n    }\n}","<h2 cdkDrag cdkDragHandle cdkDragRootElement=\".cdk-overlay-pane\" mat-dialog-title>{{ title }}</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <h6>Select modules:</h6>\n    <div class=\"container\">\n        <div class=\"item\">\n            <mat-list>\n                <mat-list-item>\n                    <mat-checkbox (click)=\"setAll()\" [(ngModel)]=\"allSelected\">All</mat-checkbox>\n                </mat-list-item>\n            </mat-list>\n        </div>\n        <div class=\"item\">\n        </div>\n        <div class=\"item\">\n            <mat-list>\n                <mat-list-item *ngFor=\"let module of allModules | slice:0:5\">\n                    <mat-checkbox [(ngModel)]=\"module.selected\">{{ module.displayName }}</mat-checkbox>\n                </mat-list-item>\n            </mat-list>\n        </div>\n        <div class=\"item\">\n            <mat-list>\n                <mat-list-item *ngFor=\"let module of allModules | slice:5:10\">\n                    <mat-checkbox [(ngModel)]=\"module.selected\">{{ module.displayName }}</mat-checkbox>\n                </mat-list-item>\n            </mat-list>\n        </div>\n        <div class=\"item\">\n            <mat-list>\n                <mat-list-item *ngIf=\"onlyObjectsVisible\">\n                    <mat-checkbox [(ngModel)]=\"onlyObjects\">Only Objects</mat-checkbox>\n                </mat-list-item>\n                <mat-list-item *ngIf=\"includeObjectsVisible\">\n                    <mat-checkbox (click)=\"includeObjectsSelected()\" [(ngModel)]=\"includeObjects\">Include Objects</mat-checkbox>\n                </mat-list-item>\n            </mat-list>\n        </div>\n        <div class=\"item\">\n            <mat-list>\n                <mat-list-item *ngIf=\"prettyPrintVisible\">\n                    <mat-checkbox [(ngModel)]=\"prettyPrint\">Pretty Print</mat-checkbox>\n                </mat-list-item>\n            </mat-list>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button (click)=\"close()\" mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"save()\" cdkFocusInitial mat-button>Ok</button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader, MatCardSubtitle} from \"@angular/material/card\";\nimport {\n    MatCell,\n    MatCellDef,\n    MatColumnDef,\n    MatHeaderCell,\n    MatHeaderCellDef,\n    MatHeaderRow,\n    MatHeaderRowDef,\n    MatNoDataRow,\n    MatRow,\n    MatRowDef,\n    MatTable\n} from \"@angular/material/table\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort, MatSortHeader} from \"@angular/material/sort\";\nimport {MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {MatTooltip} from \"@angular/material/tooltip\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatFormField, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {saveAs} from \"file-saver\";\n\n@Component({\n    selector: 'export-file-download',\n    templateUrl: './file-export.component.html',\n    standalone: true,\n    imports: [\n        MatCard,\n        MatCardHeader,\n        MatCardContent,\n        MatCardActions,\n        MatCardSubtitle,\n        MatTable,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatColumnDef,\n        MatIcon,\n        MatHeaderCell,\n        MatCell,\n        MatHeaderRowDef,\n        MatHeaderRow,\n        MatSortHeader,\n        MatRowDef,\n        MatNoDataRow,\n        MatIconButton,\n        MatRow,\n        MatPaginator,\n        MatSort,\n        MatTooltip,\n        FormsModule,\n        MatButton,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel\n    ],\n    styleUrls: ['./file-export.component.scss'],\n    providers: []\n})\nexport class FileExportComponent implements OnInit {\n\n    body: string = '';\n    fileName: string | undefined = '';\n\n    constructor(private snackBar: MatSnackBar, private dialogRef: MatDialogRef<FileExportComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.body = data;\n    }\n\n    ngOnInit(): void {\n    }\n\n    // Method to handle file upload\n    download(): void {\n        if (this.fileName) {\n            const blob = new Blob([this.body], {type: \"application/json\"});\n            saveAs(blob, this.fileName);\n            this.snackBar.open(\"Infrastructure saved to local file: \" + this.fileName, 'Done', {duration: 5000});\n            this.dialogRef.close(true);\n        }\n    }\n}\n","<h2 mat-dialog-title>Upload Object</h2>\n<mat-dialog-content class=\"mat-typography\" style=\"width: 500px;height:200px\">\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>File name</mat-label>\n        <input [(ngModel)]=\"fileName\" matInput value=\"\">\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"download()\" cdkFocusInitial mat-button>Download</button>\n</mat-dialog-actions>\n","import {Component, Inject, OnDestroy, OnInit} from \"@angular/core\";\nimport {ChartComponent} from \"ng-apexcharts\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader, MatCardImage, MatCardTitle} from \"@angular/material/card\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatToolbar} from \"@angular/material/toolbar\";\nimport {NgForOf, NgIf} from \"@angular/common\";\nimport {MatList, MatListItem, MatListOption, MatNavList, MatSelectionList} from \"@angular/material/list\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatFormField, MatLabel, MatOption, MatSelect} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {MatInput} from \"@angular/material/input\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {CdkTextareaAutosize} from \"@angular/cdk/text-field\";\nimport {FileExportComponent} from \"./file-export/file-export.component\";\n\n@Component({\n    selector: 'export-infrastructure-component',\n    templateUrl: './export-infrastructure.component.html',\n    standalone: true,\n    imports: [\n        ChartComponent,\n        MatCard,\n        MatCardHeader,\n        MatCardContent,\n        MatCardActions,\n        MatCardImage,\n        MatCardTitle,\n        MatButton,\n        MatToolbar,\n        NgIf,\n        NgForOf,\n        MatList,\n        MatIcon,\n        MatListItem,\n        RouterLink,\n        MatSelect,\n        FormsModule,\n        MatOption,\n        MatIconButton,\n        MatListOption,\n        MatSelectionList,\n        MatNavList,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        CdkDrag,\n        CdkDragHandle,\n        CdkTextareaAutosize,\n    ],\n    providers: [],\n    styleUrls: ['./export-infrastructure.component.scss']\n})\nexport class ExportInfrastructureComponentDialog implements OnInit, OnDestroy {\n\n    body: string | undefined;\n\n    constructor(private dialogRef: MatDialogRef<ExportInfrastructureComponentDialog>, @Inject(MAT_DIALOG_DATA) public data: any, private dialog: MatDialog) {\n        this.body = JSON.stringify(data, null, 4);\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    fileExport() {\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.data = this.body;\n\n        this.dialog.open(FileExportComponent, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                this.dialogRef.close(true);\n            }\n        });\n    }\n}","<h2 cdkDrag cdkDragHandle cdkDragRootElement=\".cdk-overlay-pane\" mat-dialog-title>Export Infrastructure</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <mat-form-field style=\"width: 100%;height:100%\">\n        <mat-label>Infrastructure:</mat-label>\n        <textarea [(ngModel)]=\"body\" cdkAutosizeMinRows=\"70\" cdkTextareaAutosize matInput placeholder=\"Infrastructure\" readonly\n                  style=\"width:100%; height:100%\"></textarea>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"fileExport()\" cdkFocusInitial mat-button>Save to file</button>\n</mat-dialog-actions>\n","import {Component, Inject, OnDestroy, OnInit} from \"@angular/core\";\nimport {ChartComponent} from \"ng-apexcharts\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader, MatCardImage, MatCardTitle} from \"@angular/material/card\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatToolbar} from \"@angular/material/toolbar\";\nimport {NgForOf, NgIf} from \"@angular/common\";\nimport {MatList, MatListItem, MatListOption, MatNavList, MatSelectionList} from \"@angular/material/list\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatFormField, MatLabel, MatOption, MatSelect} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {MatInput} from \"@angular/material/input\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {CdkTextareaAutosize} from \"@angular/cdk/text-field\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {FileImportComponent} from \"./file-import/file-import.component\";\nimport {ModuleService} from \"../../../services/module.service\";\n\n@Component({\n    selector: 'export-infrastructure-component',\n    templateUrl: './import-infrastructure.component.html',\n    standalone: true,\n    imports: [\n        ChartComponent,\n        MatCard,\n        MatCardHeader,\n        MatCardContent,\n        MatCardActions,\n        MatCardImage,\n        MatCardTitle,\n        MatButton,\n        MatToolbar,\n        NgIf,\n        NgForOf,\n        MatList,\n        MatIcon,\n        MatListItem,\n        RouterLink,\n        MatSelect,\n        FormsModule,\n        MatOption,\n        MatIconButton,\n        MatListOption,\n        MatSelectionList,\n        MatNavList,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        CdkDrag,\n        CdkDragHandle,\n        CdkTextareaAutosize,\n    ],\n    providers: [ModuleService],\n    styleUrls: ['./import-infrastructure.component.scss']\n})\nexport class ImportInfrastructureComponentDialog implements OnInit, OnDestroy {\n\n    body: string | undefined = '';\n\n    constructor(private dialogRef: MatDialogRef<ImportInfrastructureComponentDialog>, @Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar,\n                private dialog: MatDialog, private moduleService: ModuleService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    importInfrastructure() {\n        if (this.body === undefined || this.body.length === 0) {\n            this.snackBar.open('Empty infrastructure JSON', 'Done', {duration: 5000});\n            return;\n        }\n        this.moduleService.importInfrastructure(this.body).subscribe(() => {\n            this.snackBar.open('Infrastructure imported', 'Done', {duration: 5000})\n            this.dialogRef.close(true);\n        });\n    }\n\n    loadFromFile() {\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.data = this.body;\n\n        this.dialog.open(FileImportComponent, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                this.body = result;\n            }\n        });\n    }\n\n    close() {\n        this.dialogRef.close(false);\n    }\n}","<h2 cdkDrag cdkDragHandle cdkDragRootElement=\".cdk-overlay-pane\" mat-dialog-title>Import Infrastructure</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <mat-form-field style=\"width: 100%;height:100%\">\n        <mat-label>Infrastructure:</mat-label>\n        <textarea [(ngModel)]=\"body\" cdkAutosizeMinRows=\"70\" cdkTextareaAutosize matInput placeholder=\"Infrastructure\" readonly\n                  style=\"width:100%; height:100%\">{{ body }}</textarea>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button (click)=\"close()\" mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"loadFromFile()\" mat-button>Load File</button>\n    <button (click)=\"importInfrastructure()\" cdkFocusInitial mat-button>Import</button>\n</mat-dialog-actions>\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {ModuleService} from \"../../services/module.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Store} from \"@ngrx/store\";\nimport {CpuChartComponent} from \"./charts/cpu-chart/cpu-chart.component\";\nimport {ThreadsChartComponent} from \"./charts/thread-chart/threads-chart.component\";\nimport {GatewayTimeComponent} from \"./charts/gateway-time/gateway-time.component\";\nimport {MemoryChartComponent} from \"./charts/memory-chart/memory-chart.component\";\nimport {interval, Subscription} from \"rxjs\";\nimport {ModuleSelectionComponentDialog} from \"../infrastructure/selection/module-selection.component\";\nimport {ExportInfrastructureComponentDialog} from \"../infrastructure/export/export-infrastructure.component\";\nimport {ImportInfrastructureComponentDialog} from \"../infrastructure/import/import-infrastructure.component\";\n\n@Component({\n    selector: 'dashboard-component',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n    // Last update\n    lastUpdate: Date = new Date();\n\n    // Auto-update\n    updateSubscription: Subscription | undefined;\n    @ViewChild(CpuChartComponent) cpuChart: CpuChartComponent | undefined;\n    @ViewChild(MemoryChartComponent) memoryChart: MemoryChartComponent | undefined;\n    @ViewChild(GatewayTimeComponent) gatewayTimeChart: GatewayTimeComponent | undefined;\n    @ViewChild(ThreadsChartComponent) threadsChart: ThreadsChartComponent | undefined;\n\n    constructor(private snackBar: MatSnackBar, private moduleService: ModuleService, private dialog: MatDialog, private readonly store: Store) {\n        this.updateSubscription = interval(60000).subscribe(() => {\n            this.lastUpdate = new Date();\n            this.cpuChart?.loadCpuChart();\n            this.memoryChart?.loadMemoryChart();\n            this.gatewayTimeChart?.loadHttpTimeChart();\n            this.threadsChart?.loadThreadChart();\n        });\n    }\n\n\n    ngOnInit(): void {\n        this.lastUpdate = new Date();\n        this.cpuChart?.loadCpuChart();\n        this.memoryChart?.loadMemoryChart();\n        this.gatewayTimeChart?.loadHttpTimeChart();\n        this.threadsChart?.loadThreadChart();\n    }\n\n    ngOnDestroy(): void {\n        this.updateSubscription?.unsubscribe();\n    }\n\n    exportInfrastructure() {\n\n        const moduleSelectedDialogConfig = new MatDialogConfig();\n        moduleSelectedDialogConfig.disableClose = true;\n        moduleSelectedDialogConfig.autoFocus = true;\n        moduleSelectedDialogConfig.maxWidth = '100vw';\n        moduleSelectedDialogConfig.maxHeight = '100vh';\n        moduleSelectedDialogConfig.panelClass = 'full-screen-modal';\n        moduleSelectedDialogConfig.width = \"20%\"\n        moduleSelectedDialogConfig.minWidth = '280px'\n        moduleSelectedDialogConfig.data = {title: 'Export modules', mode: 'export'};\n\n        this.dialog.open(ModuleSelectionComponentDialog, moduleSelectedDialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n\n                // Process parameters\n                const moduleList = result.modules.filter((ele: any) => {\n                    return ele.selected;\n                }).map((ele: any) => ele.name);\n                const includeObjects = result.includeObjects;\n                const prettyPrint = result.prettyPrint;\n\n                this.moduleService.exportInfrastructure(moduleList, includeObjects, prettyPrint).subscribe((data: any) => {\n\n                    const exportDialogConfig = new MatDialogConfig();\n                    exportDialogConfig.disableClose = true;\n                    exportDialogConfig.autoFocus = true;\n                    exportDialogConfig.maxWidth = '100vw';\n                    exportDialogConfig.maxHeight = '100vh';\n                    exportDialogConfig.panelClass = 'full-screen-modal';\n                    exportDialogConfig.width = \"90%\"\n                    exportDialogConfig.data = data;\n\n                    this.dialog.open(ExportInfrastructureComponentDialog, exportDialogConfig).afterClosed().subscribe(result => {\n                        if (result) {\n                            console.log(result);\n                        }\n                    });\n                });\n            }\n        });\n\n    }\n\n    importInfrastructure() {\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxWidth = '100vw';\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.panelClass = 'full-screen-modal';\n        dialogConfig.width = \"90%\"\n\n        this.dialog.open(ImportInfrastructureComponentDialog, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                console.log(result);\n                // this.moduleService.setInfrastructure().subscribe((data: any) => {\n                //\n                // });\n            }\n        });\n    }\n\n    cleanInfrastructure() {\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"40%\"\n        dialogConfig.data = {title: 'Clean Infrastructure', mode: 'clean'}\n\n        this.dialog.open(ModuleSelectionComponentDialog, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                const moduleList = result.modules.filter((ele: any) => {\n                    return ele.selected;\n                }).map((ele: any) => ele.name);\n                this.moduleService.cleanInfrastructure({modules: moduleList, onlyObjects: result.onlyObjects}).subscribe(() => {\n                    this.snackBar.open('Infrastructure cleaned', 'Done', {duration: 5000})\n                });\n            }\n        });\n    }\n\n    eraseInfrastructure() {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"40%\"\n        dialogConfig.data = {title: 'Erase Infrastructure', mode: 'erase'}\n\n        this.dialog.open(ModuleSelectionComponentDialog, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                const moduleList = result.modules.filter((ele: any) => {\n                    return ele.selected;\n                }).map((ele: any) => ele.name);\n                this.moduleService.eraseInfrastructure({modules: moduleList, onlyObjects: result.onlyObjects}).subscribe(() => {\n                    this.snackBar.open('Infrastructure erased', 'Done', {duration: 5000})\n                });\n            }\n        });\n    }\n}\n","<mat-card class=\"mat-elevation-z4\">\n    <mat-card-content>\n        <div class=\"wrapper\">\n            <mat-card class=\"mat-elevation-z4\">\n                <mat-card-header>\n                    <mat-card-title>Services</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <mat-grid-list cols=\"2\" rowHeight=\"200px\">\n                        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                            <div style=\"margin-left: -10px; width: 100%; height: 100%;\">\n                                <mat-nav-list style=\"height:200px\">\n                                    <a href=\"/sqs-queue-list\" mat-list-item>Simple Queueing Service</a>\n                                    <a href=\"/sns-topic-list\" mat-list-item>Simple Notification Service</a>\n                                    <a href=\"/s3-bucket-list\" mat-list-item>S3 Storage Service</a>\n                                    <a href=\"/cognito-user-pool-list\" mat-list-item>Cognito Service</a>\n                                </mat-nav-list>\n                            </div>\n                        </mat-grid-tile>\n                        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                            <div style=\"margin-left: -10px;; width: 100%; height: 100%;\">\n                                <mat-nav-list>\n                                    <a href=\"/lambda-function-list\" mat-list-item>Lambdas</a>\n                                    <a href=\"/lambda-function-list\" mat-list-item></a>\n                                    <a href=\"/lambda-function-list\" mat-list-item></a>\n                                    <a href=\"/lambda-function-list\" mat-list-item></a>\n                                </mat-nav-list>\n                            </div>\n                        </mat-grid-tile>\n                    </mat-grid-list>\n                </mat-card-content>\n            </mat-card>\n            <mat-card class=\"mat-elevation-z4\">\n                <mat-card-header>\n                    <mat-card-title>Import/Export</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <mat-nav-list>\n                        <a (click)=\"exportInfrastructure()\" [matTooltipShowDelay]=\"1000\" mat-list-item matTooltip=\"Export infrastructure to local JSON file\">Export\n                            Infrastructure</a>\n                        <a (click)=\"importInfrastructure()\" [matTooltipShowDelay]=\"1000\" mat-list-item matTooltip=\"Import infrastructure from local JSON file\">Import\n                            Infrastructure</a>\n                        <a (click)=\"cleanInfrastructure()\" [matTooltipShowDelay]=\"1000\" mat-list-item\n                           matTooltip=\"Clean infrastructure, removes S3 objects, SQS message, etc.\">Clean Infrastructure</a>\n                        <!--a (click)=\"eraseInfrastructure()\" [matTooltipShowDelay]=\"1000\" mat-list-item\n                           matTooltip=\"Erases infrastructure complety.\">Erase Infrastructure</a-->\n                    </mat-nav-list>\n                </mat-card-content>\n            </mat-card>\n            <mat-card class=\"mat-elevation-z4\">\n                <mat-card-header>\n                    <mat-card-title>Monitoring</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <mat-nav-list>\n                        <a href=\"/sqs-charts\" mat-list-item>Simple Queueing Service</a>\n                        <a href=\"/sns-charts\" mat-list-item>Simple Notification Service</a>\n                        <a href=\"/s3-charts\" mat-list-item>S3 Storage Service</a>\n                        <a href=\"/cognito-charts\" mat-list-item>Cognito Service</a>\n                    </mat-nav-list>\n                </mat-card-content>\n            </mat-card>\n            <cpu-chart-component></cpu-chart-component>\n            <memory-chart-component></memory-chart-component>\n            <gateway-time-chart-component></gateway-time-chart-component>\n            <threads-chart-component></threads-chart-component>\n        </div>\n        <div class=\"footer\">\n            Last update: {{ lastUpdate | date: 'HH:mm:ss' }}\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {createReducer} from \"@ngrx/store\";\n\nexport const dashboardFeatureKey = 'dashboard';\n\nexport interface DashboardState {\n    loading: boolean;\n    error: unknown;\n}\n\nexport const initialState: DashboardState = {\n    loading: false,\n    error: {}\n};\n\nexport const dashboardReducer = createReducer(\n    initialState,\n\n    /*on(dashboardFeatureKey.loadQueues, (state: DashboardState, {}) =>\n        ({\n            ...state,\n            error: '',\n        })),\n\n    on(dashboardFeatureKey.loadQueuesSuccess, (state: DashboardState, {}) => ({...state, queues, loading: false})),\n\n    on(dashboardFeatureKey.loadQueuesFailure, (state: DashboardState, {error}) => ({...state, error, loading: false})),*/\n);","import {createAction, props} from '@ngrx/store';\n\nexport const dashboardActions = {\n    initialize: createAction('[dashboard] initialize'),\n    loadCpuChart: createAction('[dashboard] loadCpuChart', props<{ name: string, start: Date, end: Date, step: number }>()),\n    loadCpuChartSuccess: createAction('[dashboard] loadCpuChartSuccess', props<{ queues: number[][] }>()),\n    loadCpuChartFailure: createAction('[dashboard] loadCpuChartFailure', props<{ error: string }>()),\n}","import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {SortColumn} from \"../../../shared/sorting/sorting.component\";\nimport {dashboardActions} from \"./dashboard.actions\";\nimport {catchError, mergeMap, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {MonitoringService} from \"../../../services/monitoring.service\";\n\n@Injectable()\nexport class DashboardEffects {\n\n    sortColumns: SortColumn[] = [];\n\n    loadCpuChart$ = createEffect(() => this.actions$.pipe(\n        ofType(dashboardActions.loadCpuChart),\n        mergeMap(() =>\n            this.monitoringService.getCounters(\n                dashboardActions.loadCpuChart.arguments.name,\n                dashboardActions.loadCpuChart.arguments.start,\n                dashboardActions.loadCpuChart.arguments.end,\n                dashboardActions.loadCpuChart.arguments.step)\n                .pipe(map((counters: any) => dashboardActions.loadCpuChartSuccess(counters)),\n                    catchError((error) =>\n                        of(dashboardActions.loadCpuChartFailure({error: error.message}))\n                    )\n                )\n        ),\n    ));\n\n    constructor(private actions$: Actions, private monitoringService: MonitoringService) {\n    }\n}","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DashboardComponent} from './dashboard.component';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const KLAERFAELLE_DETAIL_PATH: string = 'detail';\n\nconst routes: Routes = [\n    {\n        path: '',\n        title: 'Dashboard',\n        component: DashboardComponent\n    },\n    // {\n    //     path: KLAERFAELLE_DETAIL_PATH,\n    //     title: 'Einzelansicht Klärfälle',\n    //     component: KlaerfaelleDetailComponent\n    // }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {AsyncPipe, DatePipe, NgIf} from '@angular/common';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatIcon, MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {DashboardComponent} from \"./dashboard.component\";\nimport {dashboardFeatureKey, dashboardReducer} from \"./state/dashboard.reducer\";\nimport {DashboardEffects} from \"./state/dashboard.effects\";\nimport {CpuChartComponent} from \"./charts/cpu-chart/cpu-chart.component\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {ChartComponent} from \"ng-apexcharts\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {DashboardRoutingModule} from \"./dashboard-routing.module\";\nimport {MonitoringService} from \"../../services/monitoring.service\";\nimport {ModuleService} from \"../../services/module.service\";\nimport {MemoryChartComponent} from \"./charts/memory-chart/memory-chart.component\";\nimport {GatewayTimeComponent} from \"./charts/gateway-time/gateway-time.component\";\nimport {ThreadsChartComponent} from \"./charts/thread-chart/threads-chart.component\";\nimport {MatGridList, MatGridTile} from \"@angular/material/grid-list\";\n\n@NgModule({\n    declarations: [DashboardComponent],\n    imports: [\n        MatCardModule,\n        MatTableModule,\n        MatIconModule,\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatOptionModule,\n        NgIf,\n        MatIcon,\n        RouterLink,\n        DatePipe,\n        ReactiveFormsModule,\n        FormsModule,\n        AsyncPipe,\n        ChartComponent,\n        DashboardRoutingModule,\n        CpuChartComponent,\n        MemoryChartComponent,\n        GatewayTimeComponent,\n        ThreadsChartComponent,\n        StoreModule.forFeature(dashboardFeatureKey, dashboardReducer),\n        EffectsModule.forFeature([DashboardEffects]),\n        MatGridList,\n        MatGridTile,\n    ],\n    exports: [DashboardComponent],\n    providers: [MonitoringService, ModuleService],\n})\nexport class DashboardModule {\n}\n"],"mappings":"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","names":["_c0","_c0","_c1","TransitionCheckState","result"],"x_google_ignoreList":[0,11,12]}