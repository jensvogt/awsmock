{"version":3,"sources":["src/app/services/awsmock-http.service.ts","src/app/modules/s3/bucket-list/state/s3-bucket-list.actions.ts","src/app/modules/s3/bucket-list/state/s3-bucket-list.reducer.ts","node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/constants.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringUnionSelector.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/types.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmForRequest.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumLocationName.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/hasHeader.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isStreaming.js","node_modules/@aws-crypto/crc32c/build/module/aws_crc32c.js","node_modules/@aws-crypto/crc32c/build/module/index.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getCrc32ChecksumAlgorithmFunction.browser.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/selectChecksumAlgorithmFunction.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringHasher.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsMiddleware.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmListForResponse.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isChecksumWithPartNumber.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/streams/create-read-stream-on-buffer.browser.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksum.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/validateChecksumFromResponse.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsResponseMiddleware.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getFlexibleChecksumsPlugin.js","node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/resolveFlexibleChecksumsConfig.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/check-content-length-header.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-endpoint-middleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-middleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-expires-middleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCache.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCacheEntry.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityProviderImpl.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/constants.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/SignatureV4S3Express.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressMiddleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/signS3Express.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressHttpSigningMiddleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/throw-200-exceptions.js","node_modules/@aws-sdk/util-arn-parser/dist-es/index.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/bucket-endpoint-middleware.js","node_modules/@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js","node_modules/@aws-sdk/signature-v4-multi-region/dist-es/signature-v4-crt-container.js","node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js","node_modules/@aws-sdk/client-s3/dist-es/endpoint/ruleset.js","node_modules/@aws-sdk/client-s3/dist-es/endpoint/endpointResolver.js","node_modules/@aws-sdk/client-s3/dist-es/auth/httpAuthSchemeProvider.js","node_modules/@aws-sdk/client-s3/dist-es/endpoint/EndpointParameters.js","node_modules/@aws-sdk/client-s3/dist-es/models/S3ServiceException.js","node_modules/@aws-sdk/client-s3/dist-es/models/models_0.js","node_modules/@aws-sdk/xml-builder/dist-es/escape-attribute.js","node_modules/@aws-sdk/xml-builder/dist-es/escape-element.js","node_modules/@aws-sdk/xml-builder/dist-es/XmlText.js","node_modules/@aws-sdk/xml-builder/dist-es/XmlNode.js","node_modules/@aws-sdk/client-s3/dist-es/models/models_1.js","node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js","node_modules/@aws-sdk/client-s3/dist-es/commands/CreateSessionCommand.js","node_modules/@aws-sdk/client-s3/package.json","node_modules/@aws-crypto/sha1-browser/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","node_modules/@aws-crypto/sha1-browser/build/module/isEmptyData.js","node_modules/@aws-crypto/sha1-browser/build/module/constants.js","node_modules/@aws-crypto/sha1-browser/build/module/webCryptoSha1.js","node_modules/@aws-crypto/sha1-browser/build/module/crossPlatformSha1.js","node_modules/@smithy/chunked-blob-reader/dist-es/index.js","node_modules/@smithy/hash-blob-browser/dist-es/index.js","node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.shared.js","node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.browser.js","node_modules/@aws-sdk/client-s3/dist-es/auth/httpAuthExtensionConfiguration.js","node_modules/@aws-sdk/client-s3/dist-es/runtimeExtensions.js","node_modules/@aws-sdk/client-s3/dist-es/S3Client.js","node_modules/@aws-sdk/middleware-ssec/dist-es/index.js","node_modules/@aws-sdk/middleware-location-constraint/dist-es/index.js","node_modules/@aws-sdk/client-s3/dist-es/commands/CreateBucketCommand.js","node_modules/@aws-sdk/client-s3/dist-es/commands/DeleteBucketCommand.js","node_modules/@aws-sdk/client-s3/dist-es/commands/DeleteObjectCommand.js","node_modules/@aws-sdk/client-s3/dist-es/commands/GetObjectCommand.js","node_modules/@aws-sdk/client-s3/dist-es/commands/ListObjectsV2Command.js","node_modules/@aws-sdk/client-s3/dist-es/commands/PutObjectCommand.js","src/app/modules/s3/service/s3-service.component.ts","src/app/modules/s3/bucket-list/state/s3-bucket-list.effects.ts","src/app/modules/s3/bucket-add/bucket-add.component.ts","src/app/modules/s3/bucket-add/bucket-add.component.html","src/app/modules/s3/bucket-list/state/s3-bucket-list.selectors.ts","src/app/modules/s3/bucket-list/bucket-list.component.ts","src/app/modules/s3/bucket-list/bucket-list.component.html","src/app/modules/s3/bucket-detail/bucket-detail.component.ts","src/app/modules/s3/bucket-detail/bucket-detail.component.html","src/app/modules/s3/object-list/state/s3-object-list.actions.ts","src/app/modules/s3/object-list/state/s3-object-list.reducer.ts","src/app/modules/s3/object-list/state/s3-object-list.selectors.ts","node_modules/@angular/material/fesm2022/progress-bar.mjs","src/app/modules/s3/object-upload/object-upload.component.ts","src/app/modules/s3/object-upload/object-upload.component.html","src/app/modules/s3/object-list/download/s3-object-download.component.ts","src/app/modules/s3/object-list/download/s3-object-download.component.html","node_modules/xml-parser-xo/dist/esm/index.js","node_modules/xml-formatter/dist/esm/index.js","src/app/modules/s3/object-list/view/object-view.component.ts","src/app/modules/s3/object-list/view/object-view.component.html","src/app/modules/s3/object-list/object-list.component.ts","src/app/modules/s3/object-list/object-list.component.html","src/app/modules/s3/s3-routing.module.ts","src/app/modules/s3/object-list/state/s3-object-list.effects.ts","src/app/modules/s3/s3.module.ts"],"sourcesContent":["// Angular Modules\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from \"../../environments/environment\";\nimport {S3Config, SnsConfig, SqsConfig} from \"./awsmock-http-config\";\n\n@Injectable()\nexport class AwsMockHttpService {\n\n    S3Config = new S3Config;\n    SqsConfig = new SqsConfig;\n    SnsConfig = new SnsConfig;\n    url: string = environment.gatewayEndpoint + '/';\n\n    constructor(private http: HttpClient) {\n    }\n}\n","import {createAction, props} from '@ngrx/store';\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3BucketCountersResponse} from \"../../model/s3-bucket-item\";\n\nexport const s3BucketListActions = {\n    initialize: createAction('[s3-bucket-list] initialize'),\n\n    // Load buckets\n    loadBuckets: createAction('[s3-bucket-list] Load Buckets', props<{ prefix: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[] }>()),\n    loadBucketsSuccess: createAction('[s3-bucket-list] Load Buckets Success', props<{ buckets: S3BucketCountersResponse }>()),\n    loadBucketsFailure: createAction('[s3-bucket-list] Load Buckets Error', props<{ error: string }>()),\n\n    // Add bucket\n    addBucket: createAction('[s3-bucket-list] Add Bucket', props<{ bucketName: string }>()),\n    addBucketSuccess: createAction('[s3-bucket-list] Add Bucket Success'),\n    addBucketFailure: createAction('[s3-bucket-list] Add Bucket Error', props<{ error: string }>()),\n\n    // Delete bucket\n    deleteBucket: createAction('[s3-bucket-list] Delete Bucket', props<{ bucketName: string }>()),\n    deleteBucketSuccess: createAction('[s3-bucket-list] Delete Bucket Success'),\n    deleteBucketFailure: createAction('[s3-bucket-list] Delete Bucket Error', props<{ error: string }>()),\n\n    // Purge bucket\n    purgeBucket: createAction('[s3-bucket-list] Purge Bucket', props<{ bucketName: string }>()),\n    purgeBucketSuccess: createAction('[s3-bucket-list] Purge Bucket Success'),\n    purgeBucketFailure: createAction('[s3-bucket-list] Purge Bucket Error', props<{ error: string }>())\n}","import {createReducer, on} from \"@ngrx/store\";\nimport {s3BucketListActions} from './s3-bucket-list.actions';\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3BucketCountersResponse} from \"../../model/s3-bucket-item\"\n\nexport const s3BucketListFeatureKey = 's3-bucket-list';\n\nexport interface S3BucketListState {\n    s3BucketCounters: S3BucketCountersResponse;\n    bucketName: string,\n    prefix: string;\n    pageSize: number;\n    pageIndex: number;\n    loading: boolean;\n    sortColumns: SortColumn[];\n    total: number;\n    error: unknown;\n}\n\nexport const initialState: S3BucketListState = {\n    s3BucketCounters: {total: 0, bucketCounters: []},\n    bucketName: '',\n    prefix: '',\n    pageSize: 10,\n    pageIndex: 0,\n    loading: false,\n    sortColumns: [{column: 'keys', sortDirection: -1}],\n    total: 0,\n    error: {}\n};\n\nexport const s3BucketListReducer = createReducer(\n    initialState,\n\n    // Initialize\n    on(s3BucketListActions.initialize, (state: S3BucketListState): S3BucketListState => ({...state, pageIndex: 0, pageSize: 10, loading: true})),\n\n    // Bucket list\n    on(s3BucketListActions.loadBuckets, (state: S3BucketListState) => ({...state, loading: true})),\n    on(s3BucketListActions.loadBucketsSuccess, (state: S3BucketListState, {buckets}) => ({...state, s3BucketCounters: buckets, loading: false})),\n    on(s3BucketListActions.loadBucketsFailure, (state: S3BucketListState, {error}) => ({...state, error: error, loading: false})),\n\n    // Add bucket\n    on(s3BucketListActions.addBucket, (state: S3BucketListState) => ({...state, loading: true})),\n    on(s3BucketListActions.addBucketSuccess, (state: S3BucketListState) => ({...state, loading: false})),\n    on(s3BucketListActions.addBucketFailure, (state: S3BucketListState, {error}) => ({...state, error: error, loading: false})),\n\n    // Purge queue\n    //on(s3ObjectListActions.purgeQueue, (state: SQSQueueListState) => ({...state, loading: true})),\n    //on(s3ObjectListActions.purgeQueueSuccess, (state: SQSQueueListState) => ({...state, loading: false})),\n    //on(s3ObjectListActions.purgeQueueFailure, (state: SQSQueueListState, {error}) => ({...state, error: error, loading: false})),\n\n    // Delete queue\n    //on(s3ObjectListActions.deleteQueue, (state: SQSQueueListState) => ({...state, loading: true})),\n    //on(s3ObjectListActions.deleteQueueSuccess, (state: SQSQueueListState) => ({...state, loading: false})),\n    //on(s3ObjectListActions.deleteQueueFailure, (state: SQSQueueListState, {error}) => ({...state, error: error, loading: false})),\n);","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n  return next => async args => {\n    const {\n      request\n    } = args;\n    if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n      if (options.requestHandler?.constructor?.name !== \"FetchHttpHandler\") {\n        request.headers = {\n          ...request.headers,\n          Expect: \"100-continue\"\n        };\n      }\n    }\n    return next({\n      ...args,\n      request\n    });\n  };\n}\nexport const addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\",\n  override: true\n};\nexport const getAddExpectContinuePlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n  }\n});","export const RequestChecksumCalculation = {\n  WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n  WHEN_REQUIRED: \"WHEN_REQUIRED\"\n};\nexport const DEFAULT_REQUEST_CHECKSUM_CALCULATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nexport const ResponseChecksumValidation = {\n  WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n  WHEN_REQUIRED: \"WHEN_REQUIRED\"\n};\nexport const DEFAULT_RESPONSE_CHECKSUM_VALIDATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nexport var ChecksumAlgorithm;\n(function (ChecksumAlgorithm) {\n  ChecksumAlgorithm[\"MD5\"] = \"MD5\";\n  ChecksumAlgorithm[\"CRC32\"] = \"CRC32\";\n  ChecksumAlgorithm[\"CRC32C\"] = \"CRC32C\";\n  ChecksumAlgorithm[\"SHA1\"] = \"SHA1\";\n  ChecksumAlgorithm[\"SHA256\"] = \"SHA256\";\n})(ChecksumAlgorithm || (ChecksumAlgorithm = {}));\nexport var ChecksumLocation;\n(function (ChecksumLocation) {\n  ChecksumLocation[\"HEADER\"] = \"header\";\n  ChecksumLocation[\"TRAILER\"] = \"trailer\";\n})(ChecksumLocation || (ChecksumLocation = {}));\nexport const DEFAULT_CHECKSUM_ALGORITHM = ChecksumAlgorithm.MD5;\nexport const S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM = ChecksumAlgorithm.CRC32;","export var SelectorType;\n(function (SelectorType) {\n  SelectorType[\"ENV\"] = \"env\";\n  SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const stringUnionSelector = (obj, key, union, type) => {\n  if (!(key in obj)) return undefined;\n  const value = obj[key].toUpperCase();\n  if (!Object.values(union).includes(value)) {\n    throw new TypeError(`Cannot load ${type} '${key}'. Expected one of ${Object.values(union)}, got '${obj[key]}'.`);\n  }\n  return value;\n};","import { ChecksumAlgorithm } from \"./constants\";\nexport const CLIENT_SUPPORTED_ALGORITHMS = [ChecksumAlgorithm.CRC32, ChecksumAlgorithm.CRC32C, ChecksumAlgorithm.SHA1, ChecksumAlgorithm.SHA256];\nexport const PRIORITY_ORDER_ALGORITHMS = [ChecksumAlgorithm.SHA256, ChecksumAlgorithm.SHA1, ChecksumAlgorithm.CRC32, ChecksumAlgorithm.CRC32C];","import { DEFAULT_CHECKSUM_ALGORITHM, S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM } from \"./constants\";\nimport { CLIENT_SUPPORTED_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmForRequest = (input, {\n  requestChecksumRequired,\n  requestAlgorithmMember\n}, isS3Express) => {\n  const defaultAlgorithm = isS3Express ? S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM : DEFAULT_CHECKSUM_ALGORITHM;\n  if (!requestAlgorithmMember || !input[requestAlgorithmMember]) {\n    return requestChecksumRequired ? defaultAlgorithm : undefined;\n  }\n  const checksumAlgorithm = input[requestAlgorithmMember];\n  if (!CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {\n    throw new Error(`The checksum algorithm \"${checksumAlgorithm}\" is not supported by the client.` + ` Select one of ${CLIENT_SUPPORTED_ALGORITHMS}.`);\n  }\n  return checksumAlgorithm;\n};","import { ChecksumAlgorithm } from \"./constants\";\nexport const getChecksumLocationName = algorithm => algorithm === ChecksumAlgorithm.MD5 ? \"content-md5\" : `x-amz-checksum-${algorithm.toLowerCase()}`;","export const hasHeader = (header, headers) => {\n  const soughtHeader = header.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n  return false;\n};","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nexport const isStreaming = body => body !== undefined && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !isArrayBuffer(body);","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { convertToBuffer, isEmptyData, numToUint8 } from \"@aws-crypto/util\";\nimport { Crc32c } from \"./index\";\nvar AwsCrc32c = /** @class */function () {\n  function AwsCrc32c() {\n    this.crc32c = new Crc32c();\n  }\n  AwsCrc32c.prototype.update = function (toHash) {\n    if (isEmptyData(toHash)) return;\n    this.crc32c.update(convertToBuffer(toHash));\n  };\n  AwsCrc32c.prototype.digest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, numToUint8(this.crc32c.digest())];\n      });\n    });\n  };\n  AwsCrc32c.prototype.reset = function () {\n    this.crc32c = new Crc32c();\n  };\n  return AwsCrc32c;\n}();\nexport { AwsCrc32c };\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __values } from \"tslib\";\nimport { uint32ArrayFrom } from \"@aws-crypto/util\";\nexport function crc32c(data) {\n  return new Crc32c().update(data).digest();\n}\nvar Crc32c = /** @class */function () {\n  function Crc32c() {\n    this.checksum = 0xffffffff;\n  }\n  Crc32c.prototype.update = function (data) {\n    var e_1, _a;\n    try {\n      for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n        var byte = data_1_1.value;\n        this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ byte) & 0xff];\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return this;\n  };\n  Crc32c.prototype.digest = function () {\n    return (this.checksum ^ 0xffffffff) >>> 0;\n  };\n  return Crc32c;\n}();\nexport { Crc32c };\n// prettier-ignore\nvar a_lookupTable = [0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB, 0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24, 0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C45070, 0x25AFD373, 0x36FF2087, 0xC494A384, 0x9A879FA0, 0x68EC1CA3, 0x7BBCEF57, 0x89D76C54, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B, 0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 0x33ED7D2A, 0xE72719C1, 0x154C9AC2, 0x061C6936, 0xF477EA35, 0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA, 0x30E349B1, 0xC288CAB2, 0xD1D83946, 0x23B3BA45, 0xF779DEAE, 0x05125DAD, 0x1642AE59, 0xE4292D5A, 0xBA3A117E, 0x4851927D, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, 0x9C9BF696, 0x6EF07595, 0x417B1DBC, 0xB3109EBF, 0xA0406D4B, 0x522BEE48, 0x86E18AA3, 0x748A09A0, 0x67DAFA54, 0x95B17957, 0xCBA24573, 0x39C9C670, 0x2A993584, 0xD8F2B687, 0x0C38D26C, 0xFE53516F, 0xED03A29B, 0x1F682198, 0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 0x42752927, 0x96BF4DCC, 0x64D4CECF, 0x77843D3B, 0x85EFBE38, 0xDBFC821C, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, 0xFD5D65F4, 0x0F36E6F7, 0x61C69362, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 0x5437877E, 0x4767748A, 0xB50CF789, 0xEB1FCBAD, 0x197448AE, 0x0A24BB5A, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46, 0x7198540D, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6, 0xFB410CC2, 0x092A8FC1, 0x1A7A7C35, 0xE811FF36, 0x3CDB9BDD, 0xCEB018DE, 0xDDE0EB2A, 0x2F8B6829, 0x82F63B78, 0x709DB87B, 0x63CD4B8F, 0x91A6C88C, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93, 0x082F63B7, 0xFA44E0B4, 0xE9141340, 0x1B7F9043, 0xCFB5F4A8, 0x3DDE77AB, 0x2E8E845F, 0xDCE5075C, 0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC, 0x1871A4D8, 0xEA1A27DB, 0xF94AD42F, 0x0B21572C, 0xDFEB33C7, 0x2D80B0C4, 0x3ED04330, 0xCCBBC033, 0xA24BB5A6, 0x502036A5, 0x4370C551, 0xB11B4652, 0x65D122B9, 0x97BAA1BA, 0x84EA524E, 0x7681D14D, 0x2892ED69, 0xDAF96E6A, 0xC9A99D9E, 0x3BC21E9D, 0xEF087A76, 0x1D63F975, 0x0E330A81, 0xFC588982, 0xB21572C9, 0x407EF1CA, 0x532E023E, 0xA145813D, 0x758FE5D6, 0x87E466D5, 0x94B49521, 0x66DF1622, 0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, 0xFF56BD19, 0x0D3D3E1A, 0x1E6DCDEE, 0xEC064EED, 0xC38D26C4, 0x31E6A5C7, 0x22B65633, 0xD0DDD530, 0x0417B1DB, 0xF67C32D8, 0xE52CC12C, 0x1747422F, 0x49547E0B, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, 0x8ECEE914, 0x7CA56A17, 0x6FF599E3, 0x9D9E1AE0, 0xD3D3E1AB, 0x21B862A8, 0x32E8915C, 0xC083125F, 0x144976B4, 0xE622F5B7, 0xF5720643, 0x07198540, 0x590AB964, 0xAB613A67, 0xB831C993, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, 0x8DC0DD8F, 0xE330A81A, 0x115B2B19, 0x020BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1, 0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, 0xAE7367CA, 0x5C18E4C9, 0x4F48173D, 0xBD23943E, 0xF36E6F75, 0x0105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 0x27A40B9E, 0x79B737BA, 0x8BDCB4B9, 0x988C474D, 0x6AE7C44E, 0xBE2DA0A5, 0x4C4623A6, 0x5F16D052, 0xAD7D5351];\nvar lookupTable = uint32ArrayFrom(a_lookupTable);\nexport { AwsCrc32c } from \"./aws_crc32c\";\n","import { AwsCrc32 } from \"@aws-crypto/crc32\";\nexport const getCrc32ChecksumAlgorithmFunction = () => AwsCrc32;","import { AwsCrc32c } from \"@aws-crypto/crc32c\";\nimport { ChecksumAlgorithm } from \"./constants\";\nimport { getCrc32ChecksumAlgorithmFunction } from \"./getCrc32ChecksumAlgorithmFunction\";\nexport const selectChecksumAlgorithmFunction = (checksumAlgorithm, config) => ({\n  [ChecksumAlgorithm.MD5]: config.md5,\n  [ChecksumAlgorithm.CRC32]: getCrc32ChecksumAlgorithmFunction(),\n  [ChecksumAlgorithm.CRC32C]: AwsCrc32c,\n  [ChecksumAlgorithm.SHA1]: config.sha1,\n  [ChecksumAlgorithm.SHA256]: config.sha256\n})[checksumAlgorithm];","import { toUint8Array } from \"@smithy/util-utf8\";\nexport const stringHasher = (checksumAlgorithmFn, body) => {\n  const hash = new checksumAlgorithmFn();\n  hash.update(toUint8Array(body || \"\"));\n  return hash.digest();\n};","import { setFeature } from \"@aws-sdk/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { ChecksumAlgorithm } from \"./constants\";\nimport { getChecksumAlgorithmForRequest } from \"./getChecksumAlgorithmForRequest\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { hasHeader } from \"./hasHeader\";\nimport { isStreaming } from \"./isStreaming\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nimport { stringHasher } from \"./stringHasher\";\nexport const flexibleChecksumsMiddlewareOptions = {\n  name: \"flexibleChecksumsMiddleware\",\n  step: \"build\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nexport const flexibleChecksumsMiddleware = (config, middlewareConfig) => (next, context) => async args => {\n  if (!HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  const {\n    request\n  } = args;\n  const {\n    body: requestBody,\n    headers\n  } = request;\n  const {\n    base64Encoder,\n    streamHasher\n  } = config;\n  const {\n    input,\n    requestChecksumRequired,\n    requestAlgorithmMember\n  } = middlewareConfig;\n  const checksumAlgorithm = getChecksumAlgorithmForRequest(input, {\n    requestChecksumRequired,\n    requestAlgorithmMember\n  }, !!context.isS3ExpressBucket);\n  let updatedBody = requestBody;\n  let updatedHeaders = headers;\n  if (checksumAlgorithm) {\n    switch (checksumAlgorithm) {\n      case ChecksumAlgorithm.CRC32:\n        setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32\", \"U\");\n        break;\n      case ChecksumAlgorithm.CRC32C:\n        setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32C\", \"V\");\n        break;\n      case ChecksumAlgorithm.SHA1:\n        setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA1\", \"X\");\n        break;\n      case ChecksumAlgorithm.SHA256:\n        setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA256\", \"Y\");\n        break;\n    }\n    const checksumLocationName = getChecksumLocationName(checksumAlgorithm);\n    const checksumAlgorithmFn = selectChecksumAlgorithmFunction(checksumAlgorithm, config);\n    if (isStreaming(requestBody)) {\n      const {\n        getAwsChunkedEncodingStream,\n        bodyLengthChecker\n      } = config;\n      updatedBody = getAwsChunkedEncodingStream(requestBody, {\n        base64Encoder,\n        bodyLengthChecker,\n        checksumLocationName,\n        checksumAlgorithmFn,\n        streamHasher\n      });\n      updatedHeaders = {\n        ...headers,\n        \"content-encoding\": headers[\"content-encoding\"] ? `${headers[\"content-encoding\"]},aws-chunked` : \"aws-chunked\",\n        \"transfer-encoding\": \"chunked\",\n        \"x-amz-decoded-content-length\": headers[\"content-length\"],\n        \"x-amz-content-sha256\": \"STREAMING-UNSIGNED-PAYLOAD-TRAILER\",\n        \"x-amz-trailer\": checksumLocationName\n      };\n      delete updatedHeaders[\"content-length\"];\n    } else if (!hasHeader(checksumLocationName, headers)) {\n      const rawChecksum = await stringHasher(checksumAlgorithmFn, requestBody);\n      updatedHeaders = {\n        ...headers,\n        [checksumLocationName]: base64Encoder(rawChecksum)\n      };\n    }\n  }\n  const result = await next({\n    ...args,\n    request: {\n      ...request,\n      headers: updatedHeaders,\n      body: updatedBody\n    }\n  });\n  return result;\n};","import { CLIENT_SUPPORTED_ALGORITHMS, PRIORITY_ORDER_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmListForResponse = (responseAlgorithms = []) => {\n  const validChecksumAlgorithms = [];\n  for (const algorithm of PRIORITY_ORDER_ALGORITHMS) {\n    if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n      continue;\n    }\n    validChecksumAlgorithms.push(algorithm);\n  }\n  return validChecksumAlgorithms;\n};","export const isChecksumWithPartNumber = checksum => {\n  const lastHyphenIndex = checksum.lastIndexOf(\"-\");\n  if (lastHyphenIndex !== -1) {\n    const numberPart = checksum.slice(lastHyphenIndex + 1);\n    if (!numberPart.startsWith(\"0\")) {\n      const number = parseInt(numberPart, 10);\n      if (!isNaN(number) && number >= 1 && number <= 10000) {\n        return true;\n      }\n    }\n  }\n  return false;\n};","export function createReadStreamOnBuffer(buffer) {\n  return new Blob([buffer]).stream();\n}","import { stringHasher } from \"./stringHasher\";\nexport const getChecksum = async (body, {\n  checksumAlgorithmFn,\n  base64Encoder\n}) => base64Encoder(await stringHasher(checksumAlgorithmFn, body));","import { createChecksumStream } from \"@smithy/util-stream\";\nimport { getChecksum } from \"./getChecksum\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { isStreaming } from \"./isStreaming\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nexport const validateChecksumFromResponse = async (response, {\n  config,\n  responseAlgorithms\n}) => {\n  const checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n  const {\n    body: responseBody,\n    headers: responseHeaders\n  } = response;\n  for (const algorithm of checksumAlgorithms) {\n    const responseHeader = getChecksumLocationName(algorithm);\n    const checksumFromResponse = responseHeaders[responseHeader];\n    if (checksumFromResponse) {\n      const checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n      const {\n        base64Encoder\n      } = config;\n      if (isStreaming(responseBody)) {\n        response.body = createChecksumStream({\n          expectedChecksum: checksumFromResponse,\n          checksumSourceLocation: responseHeader,\n          checksum: new checksumAlgorithmFn(),\n          source: responseBody,\n          base64Encoder\n        });\n        return;\n      }\n      const checksum = await getChecksum(responseBody, {\n        checksumAlgorithmFn,\n        base64Encoder\n      });\n      if (checksum === checksumFromResponse) {\n        break;\n      }\n      throw new Error(`Checksum mismatch: expected \"${checksum}\" but received \"${checksumFromResponse}\"` + ` in response header \"${responseHeader}\".`);\n    }\n  }\n};","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { isChecksumWithPartNumber } from \"./isChecksumWithPartNumber\";\nimport { isStreaming } from \"./isStreaming\";\nimport { createReadStreamOnBuffer } from \"./streams/create-read-stream-on-buffer\";\nimport { validateChecksumFromResponse } from \"./validateChecksumFromResponse\";\nexport const flexibleChecksumsResponseMiddlewareOptions = {\n  name: \"flexibleChecksumsResponseMiddleware\",\n  toMiddleware: \"deserializerMiddleware\",\n  relation: \"after\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nexport const flexibleChecksumsResponseMiddleware = (config, middlewareConfig) => (next, context) => async args => {\n  if (!HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  const input = args.input;\n  const result = await next(args);\n  const response = result.response;\n  let collectedStream = undefined;\n  const {\n    requestValidationModeMember,\n    responseAlgorithms\n  } = middlewareConfig;\n  if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n    const {\n      clientName,\n      commandName\n    } = context;\n    const isS3WholeObjectMultipartGetResponseChecksum = clientName === \"S3Client\" && commandName === \"GetObjectCommand\" && getChecksumAlgorithmListForResponse(responseAlgorithms).every(algorithm => {\n      const responseHeader = getChecksumLocationName(algorithm);\n      const checksumFromResponse = response.headers[responseHeader];\n      return !checksumFromResponse || isChecksumWithPartNumber(checksumFromResponse);\n    });\n    if (isS3WholeObjectMultipartGetResponseChecksum) {\n      return result;\n    }\n    const isStreamingBody = isStreaming(response.body);\n    if (isStreamingBody) {\n      collectedStream = await config.streamCollector(response.body);\n      response.body = createReadStreamOnBuffer(collectedStream);\n    }\n    await validateChecksumFromResponse(result.response, {\n      config,\n      responseAlgorithms\n    });\n    if (isStreamingBody && collectedStream) {\n      response.body = createReadStreamOnBuffer(collectedStream);\n    }\n  }\n  return result;\n};","import { flexibleChecksumsMiddleware, flexibleChecksumsMiddlewareOptions } from \"./flexibleChecksumsMiddleware\";\nimport { flexibleChecksumsResponseMiddleware, flexibleChecksumsResponseMiddlewareOptions } from \"./flexibleChecksumsResponseMiddleware\";\nexport const getFlexibleChecksumsPlugin = (config, middlewareConfig) => ({\n  applyToStack: clientStack => {\n    clientStack.add(flexibleChecksumsMiddleware(config, middlewareConfig), flexibleChecksumsMiddlewareOptions);\n    clientStack.addRelativeTo(flexibleChecksumsResponseMiddleware(config, middlewareConfig), flexibleChecksumsResponseMiddlewareOptions);\n  }\n});","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { DEFAULT_REQUEST_CHECKSUM_CALCULATION, DEFAULT_RESPONSE_CHECKSUM_VALIDATION } from \"./constants\";\nexport const resolveFlexibleChecksumsConfig = input => ({\n  ...input,\n  requestChecksumCalculation: normalizeProvider(input.requestChecksumCalculation ?? DEFAULT_REQUEST_CHECKSUM_CALCULATION),\n  responseChecksumValidation: normalizeProvider(input.responseChecksumValidation ?? DEFAULT_RESPONSE_CHECKSUM_VALIDATION)\n});","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function checkContentLengthHeader() {\n  return (next, context) => async args => {\n    const {\n      request\n    } = args;\n    if (HttpRequest.isInstance(request)) {\n      if (!(CONTENT_LENGTH_HEADER in request.headers)) {\n        const message = `Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.`;\n        if (typeof context?.logger?.warn === \"function\" && !(context.logger instanceof NoOpLogger)) {\n          context.logger.warn(message);\n        } else {\n          console.warn(message);\n        }\n      }\n    }\n    return next({\n      ...args\n    });\n  };\n}\nexport const checkContentLengthHeaderMiddlewareOptions = {\n  step: \"finalizeRequest\",\n  tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\n  name: \"getCheckContentLengthHeaderPlugin\",\n  override: true\n};\nexport const getCheckContentLengthHeaderPlugin = unused => ({\n  applyToStack: clientStack => {\n    clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);\n  }\n});","export const regionRedirectEndpointMiddleware = config => {\n  return (next, context) => async args => {\n    const originalRegion = await config.region();\n    const regionProviderRef = config.region;\n    let unlock = () => {};\n    if (context.__s3RegionRedirect) {\n      Object.defineProperty(config, \"region\", {\n        writable: false,\n        value: async () => {\n          return context.__s3RegionRedirect;\n        }\n      });\n      unlock = () => Object.defineProperty(config, \"region\", {\n        writable: true,\n        value: regionProviderRef\n      });\n    }\n    try {\n      const result = await next(args);\n      if (context.__s3RegionRedirect) {\n        unlock();\n        const region = await config.region();\n        if (originalRegion !== region) {\n          throw new Error(\"Region was not restored following S3 region redirect.\");\n        }\n      }\n      return result;\n    } catch (e) {\n      unlock();\n      throw e;\n    }\n  };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n  tags: [\"REGION_REDIRECT\", \"S3\"],\n  name: \"regionRedirectEndpointMiddleware\",\n  override: true,\n  relation: \"before\",\n  toMiddleware: \"endpointV2Middleware\"\n};","import { regionRedirectEndpointMiddleware, regionRedirectEndpointMiddlewareOptions } from \"./region-redirect-endpoint-middleware\";\nexport function regionRedirectMiddleware(clientConfig) {\n  return (next, context) => async args => {\n    try {\n      return await next(args);\n    } catch (err) {\n      if (clientConfig.followRegionRedirects) {\n        if (err?.$metadata?.httpStatusCode === 301 || err?.$metadata?.httpStatusCode === 400 && err?.name === \"IllegalLocationConstraintException\") {\n          try {\n            const actualRegion = err.$response.headers[\"x-amz-bucket-region\"];\n            context.logger?.debug(`Redirecting from ${await clientConfig.region()} to ${actualRegion}`);\n            context.__s3RegionRedirect = actualRegion;\n          } catch (e) {\n            throw new Error(\"Region redirect failed: \" + e);\n          }\n          return next(args);\n        }\n      }\n      throw err;\n    }\n  };\n}\nexport const regionRedirectMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"REGION_REDIRECT\", \"S3\"],\n  name: \"regionRedirectMiddleware\",\n  override: true\n};\nexport const getRegionRedirectMiddlewarePlugin = clientConfig => ({\n  applyToStack: clientStack => {\n    clientStack.add(regionRedirectMiddleware(clientConfig), regionRedirectMiddlewareOptions);\n    clientStack.addRelativeTo(regionRedirectEndpointMiddleware(clientConfig), regionRedirectEndpointMiddlewareOptions);\n  }\n});","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { parseRfc7231DateTime } from \"@smithy/smithy-client\";\nexport const s3ExpiresMiddleware = config => {\n  return (next, context) => async args => {\n    const result = await next(args);\n    const {\n      response\n    } = result;\n    if (HttpResponse.isInstance(response)) {\n      if (response.headers.expires) {\n        response.headers.expiresstring = response.headers.expires;\n        try {\n          parseRfc7231DateTime(response.headers.expires);\n        } catch (e) {\n          context.logger?.warn(`AWS SDK Warning for ${context.clientName}::${context.commandName} response parsing (${response.headers.expires}): ${e}`);\n          delete response.headers.expires;\n        }\n      }\n    }\n    return result;\n  };\n};\nexport const s3ExpiresMiddlewareOptions = {\n  tags: [\"S3\"],\n  name: \"s3ExpiresMiddleware\",\n  override: true,\n  relation: \"after\",\n  toMiddleware: \"deserializerMiddleware\"\n};\nexport const getS3ExpiresMiddlewarePlugin = clientConfig => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(s3ExpiresMiddleware(clientConfig), s3ExpiresMiddlewareOptions);\n  }\n});","export class S3ExpressIdentityCache {\n  constructor(data = {}) {\n    this.data = data;\n    this.lastPurgeTime = Date.now();\n  }\n  get(key) {\n    const entry = this.data[key];\n    if (!entry) {\n      return;\n    }\n    return entry;\n  }\n  set(key, entry) {\n    this.data[key] = entry;\n    return entry;\n  }\n  delete(key) {\n    delete this.data[key];\n  }\n  async purgeExpired() {\n    const now = Date.now();\n    if (this.lastPurgeTime + S3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS > now) {\n      return;\n    }\n    for (const key in this.data) {\n      const entry = this.data[key];\n      if (!entry.isRefreshing) {\n        const credential = await entry.identity;\n        if (credential.expiration) {\n          if (credential.expiration.getTime() < now) {\n            delete this.data[key];\n          }\n        }\n      }\n    }\n  }\n}\nS3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS = 30000;","export class S3ExpressIdentityCacheEntry {\n  constructor(_identity, isRefreshing = false, accessed = Date.now()) {\n    this._identity = _identity;\n    this.isRefreshing = isRefreshing;\n    this.accessed = accessed;\n  }\n  get identity() {\n    this.accessed = Date.now();\n    return this._identity;\n  }\n}","import { S3ExpressIdentityCache } from \"./S3ExpressIdentityCache\";\nimport { S3ExpressIdentityCacheEntry } from \"./S3ExpressIdentityCacheEntry\";\nexport class S3ExpressIdentityProviderImpl {\n  constructor(createSessionFn, cache = new S3ExpressIdentityCache()) {\n    this.createSessionFn = createSessionFn;\n    this.cache = cache;\n  }\n  async getS3ExpressIdentity(awsIdentity, identityProperties) {\n    const key = identityProperties.Bucket;\n    const {\n      cache\n    } = this;\n    const entry = cache.get(key);\n    if (entry) {\n      return entry.identity.then(identity => {\n        const isExpired = (identity.expiration?.getTime() ?? 0) < Date.now();\n        if (isExpired) {\n          return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\n        }\n        const isExpiringSoon = (identity.expiration?.getTime() ?? 0) < Date.now() + S3ExpressIdentityProviderImpl.REFRESH_WINDOW_MS;\n        if (isExpiringSoon && !entry.isRefreshing) {\n          entry.isRefreshing = true;\n          this.getIdentity(key).then(id => {\n            cache.set(key, new S3ExpressIdentityCacheEntry(Promise.resolve(id)));\n          });\n        }\n        return identity;\n      });\n    }\n    return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\n  }\n  async getIdentity(key) {\n    await this.cache.purgeExpired().catch(error => {\n      console.warn(\"Error while clearing expired entries in S3ExpressIdentityCache: \\n\" + error);\n    });\n    const session = await this.createSessionFn(key);\n    if (!session.Credentials?.AccessKeyId || !session.Credentials?.SecretAccessKey) {\n      throw new Error(\"s3#createSession response credential missing AccessKeyId or SecretAccessKey.\");\n    }\n    const identity = {\n      accessKeyId: session.Credentials.AccessKeyId,\n      secretAccessKey: session.Credentials.SecretAccessKey,\n      sessionToken: session.Credentials.SessionToken,\n      expiration: session.Credentials.Expiration ? new Date(session.Credentials.Expiration) : undefined\n    };\n    return identity;\n  }\n}\nS3ExpressIdentityProviderImpl.REFRESH_WINDOW_MS = 60000;","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const S3_EXPRESS_BUCKET_TYPE = \"Directory\";\nexport const S3_EXPRESS_BACKEND = \"S3Express\";\nexport const S3_EXPRESS_AUTH_SCHEME = \"sigv4-s3express\";\nexport const SESSION_TOKEN_QUERY_PARAM = \"X-Amz-S3session-Token\";\nexport const SESSION_TOKEN_HEADER = SESSION_TOKEN_QUERY_PARAM.toLowerCase();\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME = \"AWS_S3_DISABLE_EXPRESS_SESSION_AUTH\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME = \"s3_disable_express_session_auth\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS = {\n  environmentVariableSelector: env => booleanSelector(env, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME, SelectorType.ENV),\n  configFileSelector: profile => booleanSelector(profile, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME, SelectorType.CONFIG),\n  default: false\n};","import { SignatureV4 } from \"@smithy/signature-v4\";\nimport { SESSION_TOKEN_HEADER, SESSION_TOKEN_QUERY_PARAM } from \"../constants\";\nexport class SignatureV4S3Express extends SignatureV4 {\n  async signWithCredentials(requestToSign, credentials, options) {\n    const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n    requestToSign.headers[SESSION_TOKEN_HEADER] = credentials.sessionToken;\n    const privateAccess = this;\n    setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n    return privateAccess.signRequest(requestToSign, options ?? {});\n  }\n  async presignWithCredentials(requestToSign, credentials, options) {\n    const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n    delete requestToSign.headers[SESSION_TOKEN_HEADER];\n    requestToSign.headers[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n    requestToSign.query = requestToSign.query ?? {};\n    requestToSign.query[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n    const privateAccess = this;\n    setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n    return this.presign(requestToSign, options);\n  }\n}\nfunction getCredentialsWithoutSessionToken(credentials) {\n  const credentialsWithoutSessionToken = {\n    accessKeyId: credentials.accessKeyId,\n    secretAccessKey: credentials.secretAccessKey,\n    expiration: credentials.expiration\n  };\n  return credentialsWithoutSessionToken;\n}\nfunction setSingleOverride(privateAccess, credentialsWithoutSessionToken) {\n  const id = setTimeout(() => {\n    throw new Error(\"SignatureV4S3Express credential override was created but not called.\");\n  }, 10);\n  const currentCredentialProvider = privateAccess.credentialProvider;\n  const overrideCredentialsProviderOnce = () => {\n    clearTimeout(id);\n    privateAccess.credentialProvider = currentCredentialProvider;\n    return Promise.resolve(credentialsWithoutSessionToken);\n  };\n  privateAccess.credentialProvider = overrideCredentialsProviderOnce;\n}","import { setFeature } from \"@aws-sdk/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { S3_EXPRESS_AUTH_SCHEME, S3_EXPRESS_BACKEND, S3_EXPRESS_BUCKET_TYPE, SESSION_TOKEN_HEADER } from \"../constants\";\nexport const s3ExpressMiddleware = options => {\n  return (next, context) => async args => {\n    if (context.endpointV2) {\n      const endpoint = context.endpointV2;\n      const isS3ExpressAuth = endpoint.properties?.authSchemes?.[0]?.name === S3_EXPRESS_AUTH_SCHEME;\n      const isS3ExpressBucket = endpoint.properties?.backend === S3_EXPRESS_BACKEND || endpoint.properties?.bucketType === S3_EXPRESS_BUCKET_TYPE;\n      if (isS3ExpressBucket) {\n        setFeature(context, \"S3_EXPRESS_BUCKET\", \"J\");\n        context.isS3ExpressBucket = true;\n      }\n      if (isS3ExpressAuth) {\n        const requestBucket = args.input.Bucket;\n        if (requestBucket) {\n          const s3ExpressIdentity = await options.s3ExpressIdentityProvider.getS3ExpressIdentity(await options.credentials(), {\n            Bucket: requestBucket\n          });\n          context.s3ExpressIdentity = s3ExpressIdentity;\n          if (HttpRequest.isInstance(args.request) && s3ExpressIdentity.sessionToken) {\n            args.request.headers[SESSION_TOKEN_HEADER] = s3ExpressIdentity.sessionToken;\n          }\n        }\n      }\n    }\n    return next(args);\n  };\n};\nexport const s3ExpressMiddlewareOptions = {\n  name: \"s3ExpressMiddleware\",\n  step: \"build\",\n  tags: [\"S3\", \"S3_EXPRESS\"],\n  override: true\n};\nexport const getS3ExpressPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(s3ExpressMiddleware(options), s3ExpressMiddlewareOptions);\n  }\n});","export const signS3Express = async (s3ExpressIdentity, signingOptions, request, sigV4MultiRegionSigner) => {\n  const signedRequest = await sigV4MultiRegionSigner.signWithCredentials(request, s3ExpressIdentity, {});\n  if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\n    throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\n  }\n  return signedRequest;\n};","import { httpSigningMiddlewareOptions } from \"@smithy/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { signS3Express } from \"./signS3Express\";\nconst defaultErrorHandler = signingProperties => error => {\n  throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => {};\nexport const s3ExpressHttpSigningMiddlewareOptions = httpSigningMiddlewareOptions;\nexport const s3ExpressHttpSigningMiddleware = config => (next, context) => async args => {\n  if (!HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  const smithyContext = getSmithyContext(context);\n  const scheme = smithyContext.selectedHttpAuthScheme;\n  if (!scheme) {\n    throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n  }\n  const {\n    httpAuthOption: {\n      signingProperties = {}\n    },\n    identity,\n    signer\n  } = scheme;\n  let request;\n  if (context.s3ExpressIdentity) {\n    request = await signS3Express(context.s3ExpressIdentity, signingProperties, args.request, await config.signer());\n  } else {\n    request = await signer.sign(args.request, identity, signingProperties);\n  }\n  const output = await next({\n    ...args,\n    request\n  }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n  (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n  return output;\n};\nexport const getS3ExpressHttpSigningPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(s3ExpressHttpSigningMiddleware(config), httpSigningMiddlewareOptions);\n  }\n});","import { S3ExpressIdentityProviderImpl } from \"./s3-express\";\nexport const resolveS3Config = (input, {\n  session\n}) => {\n  const [s3ClientProvider, CreateSessionCommandCtor] = session;\n  return {\n    ...input,\n    forcePathStyle: input.forcePathStyle ?? false,\n    useAccelerateEndpoint: input.useAccelerateEndpoint ?? false,\n    disableMultiregionAccessPoints: input.disableMultiregionAccessPoints ?? false,\n    followRegionRedirects: input.followRegionRedirects ?? false,\n    s3ExpressIdentityProvider: input.s3ExpressIdentityProvider ?? new S3ExpressIdentityProviderImpl(async key => s3ClientProvider().send(new CreateSessionCommandCtor({\n      Bucket: key,\n      SessionMode: \"ReadWrite\"\n    }))),\n    bucketEndpoint: input.bucketEndpoint ?? false\n  };\n};","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { headStream, splitStream } from \"@smithy/util-stream\";\nconst THROW_IF_EMPTY_BODY = {\n  CopyObjectCommand: true,\n  UploadPartCopyCommand: true,\n  CompleteMultipartUploadCommand: true\n};\nconst MAX_BYTES_TO_INSPECT = 3000;\nexport const throw200ExceptionsMiddleware = config => (next, context) => async args => {\n  const result = await next(args);\n  const {\n    response\n  } = result;\n  if (!HttpResponse.isInstance(response)) {\n    return result;\n  }\n  const {\n    statusCode,\n    body: sourceBody\n  } = response;\n  if (statusCode < 200 || statusCode >= 300) {\n    return result;\n  }\n  const isSplittableStream = typeof sourceBody?.stream === \"function\" || typeof sourceBody?.pipe === \"function\" || typeof sourceBody?.tee === \"function\";\n  if (!isSplittableStream) {\n    return result;\n  }\n  let bodyCopy = sourceBody;\n  let body = sourceBody;\n  if (sourceBody && typeof sourceBody === \"object\" && !(sourceBody instanceof Uint8Array)) {\n    [bodyCopy, body] = await splitStream(sourceBody);\n  }\n  response.body = body;\n  const bodyBytes = await collectBody(bodyCopy, {\n    streamCollector: async stream => {\n      return headStream(stream, MAX_BYTES_TO_INSPECT);\n    }\n  });\n  if (typeof bodyCopy?.destroy === \"function\") {\n    bodyCopy.destroy();\n  }\n  const bodyStringTail = config.utf8Encoder(bodyBytes.subarray(bodyBytes.length - 16));\n  if (bodyBytes.length === 0 && THROW_IF_EMPTY_BODY[context.commandName]) {\n    const err = new Error(\"S3 aborted request\");\n    err.name = \"InternalError\";\n    throw err;\n  }\n  if (bodyStringTail && bodyStringTail.endsWith(\"</Error>\")) {\n    response.statusCode = 400;\n  }\n  return result;\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nexport const throw200ExceptionsMiddlewareOptions = {\n  relation: \"after\",\n  toMiddleware: \"deserializerMiddleware\",\n  tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n  name: \"throw200ExceptionsMiddleware\",\n  override: true\n};\nexport const getThrow200ExceptionsPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\n  }\n});","export const validate = str => typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\nexport const parse = arn => {\n  const segments = arn.split(\":\");\n  if (segments.length < 6 || segments[0] !== \"arn\") throw new Error(\"Malformed ARN\");\n  const [, partition, service, region, accountId, ...resource] = segments;\n  return {\n    partition,\n    service,\n    region,\n    accountId,\n    resource: resource.join(\":\")\n  };\n};\nexport const build = arnObject => {\n  const {\n    partition = \"aws\",\n    service,\n    region,\n    accountId,\n    resource\n  } = arnObject;\n  if ([service, region, accountId, resource].some(segment => typeof segment !== \"string\")) {\n    throw new Error(\"Input ARN object is invalid\");\n  }\n  return `arn:${partition}:${service}:${region}:${accountId}:${resource}`;\n};","export function bucketEndpointMiddleware(options) {\n  return (next, context) => async args => {\n    if (options.bucketEndpoint) {\n      const endpoint = context.endpointV2;\n      if (endpoint) {\n        const bucket = args.input.Bucket;\n        if (typeof bucket === \"string\") {\n          try {\n            const bucketEndpointUrl = new URL(bucket);\n            context.endpointV2 = {\n              ...endpoint,\n              url: bucketEndpointUrl\n            };\n          } catch (e) {\n            const warning = `@aws-sdk/middleware-sdk-s3: bucketEndpoint=true was set but Bucket=${bucket} could not be parsed as URL.`;\n            if (context.logger?.constructor?.name === \"NoOpLogger\") {\n              console.warn(warning);\n            } else {\n              context.logger?.warn?.(warning);\n            }\n            throw e;\n          }\n        }\n      }\n    }\n    return next(args);\n  };\n}\nexport const bucketEndpointMiddlewareOptions = {\n  name: \"bucketEndpointMiddleware\",\n  override: true,\n  relation: \"after\",\n  toMiddleware: \"endpointV2Middleware\"\n};","import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nimport { bucketEndpointMiddleware, bucketEndpointMiddlewareOptions } from \"./bucket-endpoint-middleware\";\nexport function validateBucketNameMiddleware({\n  bucketEndpoint\n}) {\n  return next => async args => {\n    const {\n      input: {\n        Bucket\n      }\n    } = args;\n    if (!bucketEndpoint && typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n      const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n      err.name = \"InvalidBucketName\";\n      throw err;\n    }\n    return next({\n      ...args\n    });\n  };\n}\nexport const validateBucketNameMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true\n};\nexport const getValidateBucketNamePlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(validateBucketNameMiddleware(options), validateBucketNameMiddlewareOptions);\n    clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\n  }\n});","export const signatureV4CrtContainer = {\n  CrtSignerV4: null\n};","import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n  constructor(options) {\n    this.sigv4Signer = new SignatureV4S3Express(options);\n    this.signerOptions = options;\n  }\n  async sign(requestToSign, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().sign(requestToSign, options);\n    }\n    return this.sigv4Signer.sign(requestToSign, options);\n  }\n  async signWithCredentials(requestToSign, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n    }\n    return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n  }\n  async presign(originalRequest, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().presign(originalRequest, options);\n    }\n    return this.sigv4Signer.presign(originalRequest, options);\n  }\n  async presignWithCredentials(originalRequest, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n    }\n    return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n  }\n  getSigv4aSigner() {\n    if (!this.sigv4aSigner) {\n      let CrtSignerV4 = null;\n      try {\n        CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n        if (typeof CrtSignerV4 !== \"function\") throw new Error();\n      } catch (e) {\n        e.message = `${e.message}\\n` + `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` + `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` + `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \\n` + \"For more information please go to \" + \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n        throw e;\n      }\n      this.sigv4aSigner = new CrtSignerV4({\n        ...this.signerOptions,\n        signingAlgorithm: 1\n      });\n    }\n    return this.sigv4aSigner;\n  }\n}","const ce = \"required\",\n  cf = \"type\",\n  cg = \"conditions\",\n  ch = \"fn\",\n  ci = \"argv\",\n  cj = \"ref\",\n  ck = \"assign\",\n  cl = \"url\",\n  cm = \"properties\",\n  cn = \"backend\",\n  co = \"authSchemes\",\n  cp = \"disableDoubleEncoding\",\n  cq = \"signingName\",\n  cr = \"signingRegion\",\n  cs = \"headers\",\n  ct = \"signingRegionSet\";\nconst a = false,\n  b = true,\n  c = \"isSet\",\n  d = \"booleanEquals\",\n  e = \"error\",\n  f = \"aws.partition\",\n  g = \"stringEquals\",\n  h = \"getAttr\",\n  i = \"name\",\n  j = \"substring\",\n  k = \"bucketSuffix\",\n  l = \"parseURL\",\n  m = \"{url#scheme}://{url#authority}/{uri_encoded_bucket}{url#path}\",\n  n = \"endpoint\",\n  o = \"tree\",\n  p = \"aws.isVirtualHostableS3Bucket\",\n  q = \"{url#scheme}://{Bucket}.{url#authority}{url#path}\",\n  r = \"not\",\n  s = \"{url#scheme}://{url#authority}{url#path}\",\n  t = \"hardwareType\",\n  u = \"regionPrefix\",\n  v = \"bucketAliasSuffix\",\n  w = \"outpostId\",\n  x = \"isValidHostLabel\",\n  y = \"sigv4a\",\n  z = \"s3-outposts\",\n  A = \"s3\",\n  B = \"{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}\",\n  C = \"https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}\",\n  D = \"https://{Bucket}.s3.{partitionResult#dnsSuffix}\",\n  E = \"aws.parseArn\",\n  F = \"bucketArn\",\n  G = \"arnType\",\n  H = \"\",\n  I = \"s3-object-lambda\",\n  J = \"accesspoint\",\n  K = \"accessPointName\",\n  L = \"{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}\",\n  M = \"mrapPartition\",\n  N = \"outpostType\",\n  O = \"arnPrefix\",\n  P = \"{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}\",\n  Q = \"https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n  R = \"https://s3.{partitionResult#dnsSuffix}\",\n  S = {\n    [ce]: false,\n    [cf]: \"String\"\n  },\n  T = {\n    [ce]: true,\n    \"default\": false,\n    [cf]: \"Boolean\"\n  },\n  U = {\n    [ce]: false,\n    [cf]: \"Boolean\"\n  },\n  V = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"Accelerate\"\n    }, true]\n  },\n  W = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseFIPS\"\n    }, true]\n  },\n  X = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseDualStack\"\n    }, true]\n  },\n  Y = {\n    [ch]: c,\n    [ci]: [{\n      [cj]: \"Endpoint\"\n    }]\n  },\n  Z = {\n    [ch]: f,\n    [ci]: [{\n      [cj]: \"Region\"\n    }],\n    [ck]: \"partitionResult\"\n  },\n  aa = {\n    [ch]: g,\n    [ci]: [{\n      [ch]: h,\n      [ci]: [{\n        [cj]: \"partitionResult\"\n      }, i]\n    }, \"aws-cn\"]\n  },\n  ab = {\n    [ch]: c,\n    [ci]: [{\n      [cj]: \"Bucket\"\n    }]\n  },\n  ac = {\n    [cj]: \"Bucket\"\n  },\n  ad = {\n    [ch]: l,\n    [ci]: [{\n      [cj]: \"Endpoint\"\n    }],\n    [ck]: \"url\"\n  },\n  ae = {\n    [ch]: d,\n    [ci]: [{\n      [ch]: h,\n      [ci]: [{\n        [cj]: \"url\"\n      }, \"isIp\"]\n    }, true]\n  },\n  af = {\n    [cj]: \"url\"\n  },\n  ag = {\n    [ch]: \"uriEncode\",\n    [ci]: [ac],\n    [ck]: \"uri_encoded_bucket\"\n  },\n  ah = {\n    [cn]: \"S3Express\",\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: \"s3express\",\n      [cr]: \"{Region}\"\n    }]\n  },\n  ai = {},\n  aj = {\n    [ch]: p,\n    [ci]: [ac, false]\n  },\n  ak = {\n    [e]: \"S3Express bucket name is not a valid virtual hostable name.\",\n    [cf]: e\n  },\n  al = {\n    [cn]: \"S3Express\",\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4-s3express\",\n      [cq]: \"s3express\",\n      [cr]: \"{Region}\"\n    }]\n  },\n  am = {\n    [ch]: c,\n    [ci]: [{\n      [cj]: \"UseS3ExpressControlEndpoint\"\n    }]\n  },\n  an = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseS3ExpressControlEndpoint\"\n    }, true]\n  },\n  ao = {\n    [ch]: r,\n    [ci]: [Y]\n  },\n  ap = {\n    [e]: \"Unrecognized S3Express bucket name format.\",\n    [cf]: e\n  },\n  aq = {\n    [ch]: r,\n    [ci]: [ab]\n  },\n  ar = {\n    [cj]: t\n  },\n  as = {\n    [cg]: [ao],\n    [e]: \"Expected a endpoint to be specified but no endpoint was found\",\n    [cf]: e\n  },\n  at = {\n    [co]: [{\n      [cp]: true,\n      [i]: y,\n      [cq]: z,\n      [ct]: [\"*\"]\n    }, {\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: z,\n      [cr]: \"{Region}\"\n    }]\n  },\n  au = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"ForcePathStyle\"\n    }, false]\n  },\n  av = {\n    [cj]: \"ForcePathStyle\"\n  },\n  aw = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"Accelerate\"\n    }, false]\n  },\n  ax = {\n    [ch]: g,\n    [ci]: [{\n      [cj]: \"Region\"\n    }, \"aws-global\"]\n  },\n  ay = {\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: A,\n      [cr]: \"us-east-1\"\n    }]\n  },\n  az = {\n    [ch]: r,\n    [ci]: [ax]\n  },\n  aA = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseGlobalEndpoint\"\n    }, true]\n  },\n  aB = {\n    [cl]: \"https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: {\n      [co]: [{\n        [cp]: true,\n        [i]: \"sigv4\",\n        [cq]: A,\n        [cr]: \"{Region}\"\n      }]\n    },\n    [cs]: {}\n  },\n  aC = {\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: A,\n      [cr]: \"{Region}\"\n    }]\n  },\n  aD = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseGlobalEndpoint\"\n    }, false]\n  },\n  aE = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseDualStack\"\n    }, false]\n  },\n  aF = {\n    [cl]: \"https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  aG = {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"UseFIPS\"\n    }, false]\n  },\n  aH = {\n    [cl]: \"https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  aI = {\n    [cl]: \"https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  aJ = {\n    [ch]: d,\n    [ci]: [{\n      [ch]: h,\n      [ci]: [af, \"isIp\"]\n    }, false]\n  },\n  aK = {\n    [cl]: B,\n    [cm]: aC,\n    [cs]: {}\n  },\n  aL = {\n    [cl]: q,\n    [cm]: aC,\n    [cs]: {}\n  },\n  aM = {\n    [n]: aL,\n    [cf]: n\n  },\n  aN = {\n    [cl]: C,\n    [cm]: aC,\n    [cs]: {}\n  },\n  aO = {\n    [cl]: \"https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  aP = {\n    [e]: \"Invalid region: region was not a valid DNS name.\",\n    [cf]: e\n  },\n  aQ = {\n    [cj]: F\n  },\n  aR = {\n    [cj]: G\n  },\n  aS = {\n    [ch]: h,\n    [ci]: [aQ, \"service\"]\n  },\n  aT = {\n    [cj]: K\n  },\n  aU = {\n    [cg]: [X],\n    [e]: \"S3 Object Lambda does not support Dual-stack\",\n    [cf]: e\n  },\n  aV = {\n    [cg]: [V],\n    [e]: \"S3 Object Lambda does not support S3 Accelerate\",\n    [cf]: e\n  },\n  aW = {\n    [cg]: [{\n      [ch]: c,\n      [ci]: [{\n        [cj]: \"DisableAccessPoints\"\n      }]\n    }, {\n      [ch]: d,\n      [ci]: [{\n        [cj]: \"DisableAccessPoints\"\n      }, true]\n    }],\n    [e]: \"Access points are not supported for this operation\",\n    [cf]: e\n  },\n  aX = {\n    [cg]: [{\n      [ch]: c,\n      [ci]: [{\n        [cj]: \"UseArnRegion\"\n      }]\n    }, {\n      [ch]: d,\n      [ci]: [{\n        [cj]: \"UseArnRegion\"\n      }, false]\n    }, {\n      [ch]: r,\n      [ci]: [{\n        [ch]: g,\n        [ci]: [{\n          [ch]: h,\n          [ci]: [aQ, \"region\"]\n        }, \"{Region}\"]\n      }]\n    }],\n    [e]: \"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`\",\n    [cf]: e\n  },\n  aY = {\n    [ch]: h,\n    [ci]: [{\n      [cj]: \"bucketPartition\"\n    }, i]\n  },\n  aZ = {\n    [ch]: h,\n    [ci]: [aQ, \"accountId\"]\n  },\n  ba = {\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: I,\n      [cr]: \"{bucketArn#region}\"\n    }]\n  },\n  bb = {\n    [e]: \"Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`\",\n    [cf]: e\n  },\n  bc = {\n    [e]: \"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`\",\n    [cf]: e\n  },\n  bd = {\n    [e]: \"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)\",\n    [cf]: e\n  },\n  be = {\n    [e]: \"Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`\",\n    [cf]: e\n  },\n  bf = {\n    [e]: \"Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.\",\n    [cf]: e\n  },\n  bg = {\n    [e]: \"Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided\",\n    [cf]: e\n  },\n  bh = {\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: A,\n      [cr]: \"{bucketArn#region}\"\n    }]\n  },\n  bi = {\n    [co]: [{\n      [cp]: true,\n      [i]: y,\n      [cq]: z,\n      [ct]: [\"*\"]\n    }, {\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: z,\n      [cr]: \"{bucketArn#region}\"\n    }]\n  },\n  bj = {\n    [ch]: E,\n    [ci]: [ac]\n  },\n  bk = {\n    [cl]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bl = {\n    [cl]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bm = {\n    [cl]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bn = {\n    [cl]: P,\n    [cm]: aC,\n    [cs]: {}\n  },\n  bo = {\n    [cl]: \"https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bp = {\n    [cj]: \"UseObjectLambdaEndpoint\"\n  },\n  bq = {\n    [co]: [{\n      [cp]: true,\n      [i]: \"sigv4\",\n      [cq]: I,\n      [cr]: \"{Region}\"\n    }]\n  },\n  br = {\n    [cl]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bs = {\n    [cl]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bt = {\n    [cl]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bu = {\n    [cl]: s,\n    [cm]: aC,\n    [cs]: {}\n  },\n  bv = {\n    [cl]: \"https://s3.{Region}.{partitionResult#dnsSuffix}\",\n    [cm]: aC,\n    [cs]: {}\n  },\n  bw = [{\n    [cj]: \"Region\"\n  }],\n  bx = [{\n    [cj]: \"Endpoint\"\n  }],\n  by = [ac],\n  bz = [X],\n  bA = [V],\n  bB = [Y, ad],\n  bC = [{\n    [ch]: c,\n    [ci]: [{\n      [cj]: \"DisableS3ExpressSessionAuth\"\n    }]\n  }, {\n    [ch]: d,\n    [ci]: [{\n      [cj]: \"DisableS3ExpressSessionAuth\"\n    }, true]\n  }],\n  bD = [ae],\n  bE = [ag],\n  bF = [aj],\n  bG = [W],\n  bH = [{\n    [ch]: j,\n    [ci]: [ac, 6, 14, true],\n    [ck]: \"s3expressAvailabilityZoneId\"\n  }, {\n    [ch]: j,\n    [ci]: [ac, 14, 16, true],\n    [ck]: \"s3expressAvailabilityZoneDelim\"\n  }, {\n    [ch]: g,\n    [ci]: [{\n      [cj]: \"s3expressAvailabilityZoneDelim\"\n    }, \"--\"]\n  }],\n  bI = [{\n    [cg]: [W],\n    [n]: {\n      [cl]: \"https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\",\n      [cm]: ah,\n      [cs]: {}\n    },\n    [cf]: n\n  }, {\n    [n]: {\n      [cl]: \"https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\",\n      [cm]: ah,\n      [cs]: {}\n    },\n    [cf]: n\n  }],\n  bJ = [{\n    [ch]: j,\n    [ci]: [ac, 6, 15, true],\n    [ck]: \"s3expressAvailabilityZoneId\"\n  }, {\n    [ch]: j,\n    [ci]: [ac, 15, 17, true],\n    [ck]: \"s3expressAvailabilityZoneDelim\"\n  }, {\n    [ch]: g,\n    [ci]: [{\n      [cj]: \"s3expressAvailabilityZoneDelim\"\n    }, \"--\"]\n  }],\n  bK = [{\n    [cg]: [W],\n    [n]: {\n      [cl]: \"https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\",\n      [cm]: al,\n      [cs]: {}\n    },\n    [cf]: n\n  }, {\n    [n]: {\n      [cl]: \"https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\",\n      [cm]: al,\n      [cs]: {}\n    },\n    [cf]: n\n  }],\n  bL = [ab],\n  bM = [{\n    [ch]: x,\n    [ci]: [{\n      [cj]: w\n    }, false]\n  }],\n  bN = [{\n    [ch]: g,\n    [ci]: [{\n      [cj]: u\n    }, \"beta\"]\n  }],\n  bO = [\"*\"],\n  bP = [Z],\n  bQ = [{\n    [ch]: x,\n    [ci]: [{\n      [cj]: \"Region\"\n    }, false]\n  }],\n  bR = [{\n    [ch]: g,\n    [ci]: [{\n      [cj]: \"Region\"\n    }, \"us-east-1\"]\n  }],\n  bS = [{\n    [ch]: g,\n    [ci]: [aR, J]\n  }],\n  bT = [{\n    [ch]: h,\n    [ci]: [aQ, \"resourceId[1]\"],\n    [ck]: K\n  }, {\n    [ch]: r,\n    [ci]: [{\n      [ch]: g,\n      [ci]: [aT, H]\n    }]\n  }],\n  bU = [aQ, \"resourceId[1]\"],\n  bV = [{\n    [ch]: r,\n    [ci]: [{\n      [ch]: g,\n      [ci]: [{\n        [ch]: h,\n        [ci]: [aQ, \"region\"]\n      }, H]\n    }]\n  }],\n  bW = [{\n    [ch]: r,\n    [ci]: [{\n      [ch]: c,\n      [ci]: [{\n        [ch]: h,\n        [ci]: [aQ, \"resourceId[2]\"]\n      }]\n    }]\n  }],\n  bX = [aQ, \"resourceId[2]\"],\n  bY = [{\n    [ch]: f,\n    [ci]: [{\n      [ch]: h,\n      [ci]: [aQ, \"region\"]\n    }],\n    [ck]: \"bucketPartition\"\n  }],\n  bZ = [{\n    [ch]: g,\n    [ci]: [aY, {\n      [ch]: h,\n      [ci]: [{\n        [cj]: \"partitionResult\"\n      }, i]\n    }]\n  }],\n  ca = [{\n    [ch]: x,\n    [ci]: [{\n      [ch]: h,\n      [ci]: [aQ, \"region\"]\n    }, true]\n  }],\n  cb = [{\n    [ch]: x,\n    [ci]: [aZ, false]\n  }],\n  cc = [{\n    [ch]: x,\n    [ci]: [aT, false]\n  }],\n  cd = [{\n    [ch]: x,\n    [ci]: [{\n      [cj]: \"Region\"\n    }, true]\n  }];\nconst _data = {\n  version: \"1.0\",\n  parameters: {\n    Bucket: S,\n    Region: S,\n    UseFIPS: T,\n    UseDualStack: T,\n    Endpoint: S,\n    ForcePathStyle: T,\n    Accelerate: T,\n    UseGlobalEndpoint: T,\n    UseObjectLambdaEndpoint: U,\n    Key: S,\n    Prefix: S,\n    CopySource: S,\n    DisableAccessPoints: U,\n    DisableMultiRegionAccessPoints: T,\n    UseArnRegion: U,\n    UseS3ExpressControlEndpoint: U,\n    DisableS3ExpressSessionAuth: U\n  },\n  rules: [{\n    [cg]: [{\n      [ch]: c,\n      [ci]: bw\n    }],\n    rules: [{\n      [cg]: [V, W],\n      error: \"Accelerate cannot be used with FIPS\",\n      [cf]: e\n    }, {\n      [cg]: [X, Y],\n      error: \"Cannot set dual-stack in combination with a custom endpoint.\",\n      [cf]: e\n    }, {\n      [cg]: [Y, W],\n      error: \"A custom endpoint cannot be combined with FIPS\",\n      [cf]: e\n    }, {\n      [cg]: [Y, V],\n      error: \"A custom endpoint cannot be combined with S3 Accelerate\",\n      [cf]: e\n    }, {\n      [cg]: [W, Z, aa],\n      error: \"Partition does not support FIPS\",\n      [cf]: e\n    }, {\n      [cg]: [ab, {\n        [ch]: j,\n        [ci]: [ac, 0, 6, b],\n        [ck]: k\n      }, {\n        [ch]: g,\n        [ci]: [{\n          [cj]: k\n        }, \"--x-s3\"]\n      }],\n      rules: [{\n        [cg]: bz,\n        error: \"S3Express does not support Dual-stack.\",\n        [cf]: e\n      }, {\n        [cg]: bA,\n        error: \"S3Express does not support S3 Accelerate.\",\n        [cf]: e\n      }, {\n        [cg]: bB,\n        rules: [{\n          [cg]: bC,\n          rules: [{\n            [cg]: bD,\n            rules: [{\n              [cg]: bE,\n              rules: [{\n                endpoint: {\n                  [cl]: m,\n                  [cm]: ah,\n                  [cs]: ai\n                },\n                [cf]: n\n              }],\n              [cf]: o\n            }],\n            [cf]: o\n          }, {\n            [cg]: bF,\n            rules: [{\n              endpoint: {\n                [cl]: q,\n                [cm]: ah,\n                [cs]: ai\n              },\n              [cf]: n\n            }],\n            [cf]: o\n          }, ak],\n          [cf]: o\n        }, {\n          [cg]: bD,\n          rules: [{\n            [cg]: bE,\n            rules: [{\n              endpoint: {\n                [cl]: m,\n                [cm]: al,\n                [cs]: ai\n              },\n              [cf]: n\n            }],\n            [cf]: o\n          }],\n          [cf]: o\n        }, {\n          [cg]: bF,\n          rules: [{\n            endpoint: {\n              [cl]: q,\n              [cm]: al,\n              [cs]: ai\n            },\n            [cf]: n\n          }],\n          [cf]: o\n        }, ak],\n        [cf]: o\n      }, {\n        [cg]: [am, an],\n        rules: [{\n          [cg]: [ag, ao],\n          rules: [{\n            [cg]: bG,\n            endpoint: {\n              [cl]: \"https://s3express-control-fips.{Region}.amazonaws.com/{uri_encoded_bucket}\",\n              [cm]: ah,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            endpoint: {\n              [cl]: \"https://s3express-control.{Region}.amazonaws.com/{uri_encoded_bucket}\",\n              [cm]: ah,\n              [cs]: ai\n            },\n            [cf]: n\n          }],\n          [cf]: o\n        }],\n        [cf]: o\n      }, {\n        [cg]: bF,\n        rules: [{\n          [cg]: bC,\n          rules: [{\n            [cg]: bH,\n            rules: bI,\n            [cf]: o\n          }, {\n            [cg]: bJ,\n            rules: bI,\n            [cf]: o\n          }, ap],\n          [cf]: o\n        }, {\n          [cg]: bH,\n          rules: bK,\n          [cf]: o\n        }, {\n          [cg]: bJ,\n          rules: bK,\n          [cf]: o\n        }, ap],\n        [cf]: o\n      }, ak],\n      [cf]: o\n    }, {\n      [cg]: [aq, am, an],\n      rules: [{\n        [cg]: bB,\n        endpoint: {\n          [cl]: s,\n          [cm]: ah,\n          [cs]: ai\n        },\n        [cf]: n\n      }, {\n        [cg]: bG,\n        endpoint: {\n          [cl]: \"https://s3express-control-fips.{Region}.amazonaws.com\",\n          [cm]: ah,\n          [cs]: ai\n        },\n        [cf]: n\n      }, {\n        endpoint: {\n          [cl]: \"https://s3express-control.{Region}.amazonaws.com\",\n          [cm]: ah,\n          [cs]: ai\n        },\n        [cf]: n\n      }],\n      [cf]: o\n    }, {\n      [cg]: [ab, {\n        [ch]: j,\n        [ci]: [ac, 49, 50, b],\n        [ck]: t\n      }, {\n        [ch]: j,\n        [ci]: [ac, 8, 12, b],\n        [ck]: u\n      }, {\n        [ch]: j,\n        [ci]: [ac, 0, 7, b],\n        [ck]: v\n      }, {\n        [ch]: j,\n        [ci]: [ac, 32, 49, b],\n        [ck]: w\n      }, {\n        [ch]: f,\n        [ci]: bw,\n        [ck]: \"regionPartition\"\n      }, {\n        [ch]: g,\n        [ci]: [{\n          [cj]: v\n        }, \"--op-s3\"]\n      }],\n      rules: [{\n        [cg]: bM,\n        rules: [{\n          [cg]: [{\n            [ch]: g,\n            [ci]: [ar, \"e\"]\n          }],\n          rules: [{\n            [cg]: bN,\n            rules: [as, {\n              [cg]: bB,\n              endpoint: {\n                [cl]: \"https://{Bucket}.ec2.{url#authority}\",\n                [cm]: at,\n                [cs]: ai\n              },\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            endpoint: {\n              [cl]: \"https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}\",\n              [cm]: at,\n              [cs]: ai\n            },\n            [cf]: n\n          }],\n          [cf]: o\n        }, {\n          [cg]: [{\n            [ch]: g,\n            [ci]: [ar, \"o\"]\n          }],\n          rules: [{\n            [cg]: bN,\n            rules: [as, {\n              [cg]: bB,\n              endpoint: {\n                [cl]: \"https://{Bucket}.op-{outpostId}.{url#authority}\",\n                [cm]: at,\n                [cs]: ai\n              },\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            endpoint: {\n              [cl]: \"https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}\",\n              [cm]: at,\n              [cs]: ai\n            },\n            [cf]: n\n          }],\n          [cf]: o\n        }, {\n          error: \"Unrecognized hardware type: \\\"Expected hardware type o or e but got {hardwareType}\\\"\",\n          [cf]: e\n        }],\n        [cf]: o\n      }, {\n        error: \"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`.\",\n        [cf]: e\n      }],\n      [cf]: o\n    }, {\n      [cg]: bL,\n      rules: [{\n        [cg]: [Y, {\n          [ch]: r,\n          [ci]: [{\n            [ch]: c,\n            [ci]: [{\n              [ch]: l,\n              [ci]: bx\n            }]\n          }]\n        }],\n        error: \"Custom endpoint `{Endpoint}` was not a valid URI\",\n        [cf]: e\n      }, {\n        [cg]: [au, aj],\n        rules: [{\n          [cg]: bP,\n          rules: [{\n            [cg]: bQ,\n            rules: [{\n              [cg]: [V, aa],\n              error: \"S3 Accelerate cannot be used in this region\",\n              [cf]: e\n            }, {\n              [cg]: [X, W, aw, ao, ax],\n              endpoint: {\n                [cl]: \"https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [X, W, aw, ao, az, aA],\n              rules: [{\n                endpoint: aB,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [X, W, aw, ao, az, aD],\n              endpoint: aB,\n              [cf]: n\n            }, {\n              [cg]: [aE, W, aw, ao, ax],\n              endpoint: {\n                [cl]: \"https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, W, aw, ao, az, aA],\n              rules: [{\n                endpoint: aF,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, W, aw, ao, az, aD],\n              endpoint: aF,\n              [cf]: n\n            }, {\n              [cg]: [X, aG, V, ao, ax],\n              endpoint: {\n                [cl]: \"https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [X, aG, V, ao, az, aA],\n              rules: [{\n                endpoint: aH,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [X, aG, V, ao, az, aD],\n              endpoint: aH,\n              [cf]: n\n            }, {\n              [cg]: [X, aG, aw, ao, ax],\n              endpoint: {\n                [cl]: \"https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [X, aG, aw, ao, az, aA],\n              rules: [{\n                endpoint: aI,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [X, aG, aw, ao, az, aD],\n              endpoint: aI,\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, ae, ax],\n              endpoint: {\n                [cl]: B,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, aJ, ax],\n              endpoint: {\n                [cl]: q,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, ae, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: aK,\n                [cf]: n\n              }, {\n                endpoint: aK,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, aJ, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: aL,\n                [cf]: n\n              }, aM],\n              [cf]: o\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, ae, az, aD],\n              endpoint: aK,\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, Y, ad, aJ, az, aD],\n              endpoint: aL,\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, V, ao, ax],\n              endpoint: {\n                [cl]: C,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, V, ao, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: aN,\n                [cf]: n\n              }, {\n                endpoint: aN,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, aG, V, ao, az, aD],\n              endpoint: aN,\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, ao, ax],\n              endpoint: {\n                [cl]: D,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, aG, aw, ao, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: {\n                  [cl]: D,\n                  [cm]: aC,\n                  [cs]: ai\n                },\n                [cf]: n\n              }, {\n                endpoint: aO,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, aG, aw, ao, az, aD],\n              endpoint: aO,\n              [cf]: n\n            }],\n            [cf]: o\n          }, aP],\n          [cf]: o\n        }],\n        [cf]: o\n      }, {\n        [cg]: [Y, ad, {\n          [ch]: g,\n          [ci]: [{\n            [ch]: h,\n            [ci]: [af, \"scheme\"]\n          }, \"http\"]\n        }, {\n          [ch]: p,\n          [ci]: [ac, b]\n        }, au, aG, aE, aw],\n        rules: [{\n          [cg]: bP,\n          rules: [{\n            [cg]: bQ,\n            rules: [aM],\n            [cf]: o\n          }, aP],\n          [cf]: o\n        }],\n        [cf]: o\n      }, {\n        [cg]: [au, {\n          [ch]: E,\n          [ci]: by,\n          [ck]: F\n        }],\n        rules: [{\n          [cg]: [{\n            [ch]: h,\n            [ci]: [aQ, \"resourceId[0]\"],\n            [ck]: G\n          }, {\n            [ch]: r,\n            [ci]: [{\n              [ch]: g,\n              [ci]: [aR, H]\n            }]\n          }],\n          rules: [{\n            [cg]: [{\n              [ch]: g,\n              [ci]: [aS, I]\n            }],\n            rules: [{\n              [cg]: bS,\n              rules: [{\n                [cg]: bT,\n                rules: [aU, aV, {\n                  [cg]: bV,\n                  rules: [aW, {\n                    [cg]: bW,\n                    rules: [aX, {\n                      [cg]: bY,\n                      rules: [{\n                        [cg]: bP,\n                        rules: [{\n                          [cg]: bZ,\n                          rules: [{\n                            [cg]: ca,\n                            rules: [{\n                              [cg]: [{\n                                [ch]: g,\n                                [ci]: [aZ, H]\n                              }],\n                              error: \"Invalid ARN: Missing account id\",\n                              [cf]: e\n                            }, {\n                              [cg]: cb,\n                              rules: [{\n                                [cg]: cc,\n                                rules: [{\n                                  [cg]: bB,\n                                  endpoint: {\n                                    [cl]: L,\n                                    [cm]: ba,\n                                    [cs]: ai\n                                  },\n                                  [cf]: n\n                                }, {\n                                  [cg]: bG,\n                                  endpoint: {\n                                    [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                    [cm]: ba,\n                                    [cs]: ai\n                                  },\n                                  [cf]: n\n                                }, {\n                                  endpoint: {\n                                    [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                    [cm]: ba,\n                                    [cs]: ai\n                                  },\n                                  [cf]: n\n                                }],\n                                [cf]: o\n                              }, bb],\n                              [cf]: o\n                            }, bc],\n                            [cf]: o\n                          }, bd],\n                          [cf]: o\n                        }, be],\n                        [cf]: o\n                      }],\n                      [cf]: o\n                    }],\n                    [cf]: o\n                  }, bf],\n                  [cf]: o\n                }, {\n                  error: \"Invalid ARN: bucket ARN is missing a region\",\n                  [cf]: e\n                }],\n                [cf]: o\n              }, bg],\n              [cf]: o\n            }, {\n              error: \"Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`\",\n              [cf]: e\n            }],\n            [cf]: o\n          }, {\n            [cg]: bS,\n            rules: [{\n              [cg]: bT,\n              rules: [{\n                [cg]: bV,\n                rules: [{\n                  [cg]: bS,\n                  rules: [{\n                    [cg]: bV,\n                    rules: [aW, {\n                      [cg]: bW,\n                      rules: [aX, {\n                        [cg]: bY,\n                        rules: [{\n                          [cg]: bP,\n                          rules: [{\n                            [cg]: [{\n                              [ch]: g,\n                              [ci]: [aY, \"{partitionResult#name}\"]\n                            }],\n                            rules: [{\n                              [cg]: ca,\n                              rules: [{\n                                [cg]: [{\n                                  [ch]: g,\n                                  [ci]: [aS, A]\n                                }],\n                                rules: [{\n                                  [cg]: cb,\n                                  rules: [{\n                                    [cg]: cc,\n                                    rules: [{\n                                      [cg]: bA,\n                                      error: \"Access Points do not support S3 Accelerate\",\n                                      [cf]: e\n                                    }, {\n                                      [cg]: [W, X],\n                                      endpoint: {\n                                        [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                        [cm]: bh,\n                                        [cs]: ai\n                                      },\n                                      [cf]: n\n                                    }, {\n                                      [cg]: [W, aE],\n                                      endpoint: {\n                                        [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                        [cm]: bh,\n                                        [cs]: ai\n                                      },\n                                      [cf]: n\n                                    }, {\n                                      [cg]: [aG, X],\n                                      endpoint: {\n                                        [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                        [cm]: bh,\n                                        [cs]: ai\n                                      },\n                                      [cf]: n\n                                    }, {\n                                      [cg]: [aG, aE, Y, ad],\n                                      endpoint: {\n                                        [cl]: L,\n                                        [cm]: bh,\n                                        [cs]: ai\n                                      },\n                                      [cf]: n\n                                    }, {\n                                      [cg]: [aG, aE],\n                                      endpoint: {\n                                        [cl]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                        [cm]: bh,\n                                        [cs]: ai\n                                      },\n                                      [cf]: n\n                                    }],\n                                    [cf]: o\n                                  }, bb],\n                                  [cf]: o\n                                }, bc],\n                                [cf]: o\n                              }, {\n                                error: \"Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}\",\n                                [cf]: e\n                              }],\n                              [cf]: o\n                            }, bd],\n                            [cf]: o\n                          }, be],\n                          [cf]: o\n                        }],\n                        [cf]: o\n                      }],\n                      [cf]: o\n                    }, bf],\n                    [cf]: o\n                  }],\n                  [cf]: o\n                }],\n                [cf]: o\n              }, {\n                [cg]: [{\n                  [ch]: x,\n                  [ci]: [aT, b]\n                }],\n                rules: [{\n                  [cg]: bz,\n                  error: \"S3 MRAP does not support dual-stack\",\n                  [cf]: e\n                }, {\n                  [cg]: bG,\n                  error: \"S3 MRAP does not support FIPS\",\n                  [cf]: e\n                }, {\n                  [cg]: bA,\n                  error: \"S3 MRAP does not support S3 Accelerate\",\n                  [cf]: e\n                }, {\n                  [cg]: [{\n                    [ch]: d,\n                    [ci]: [{\n                      [cj]: \"DisableMultiRegionAccessPoints\"\n                    }, b]\n                  }],\n                  error: \"Invalid configuration: Multi-Region Access Point ARNs are disabled.\",\n                  [cf]: e\n                }, {\n                  [cg]: [{\n                    [ch]: f,\n                    [ci]: bw,\n                    [ck]: M\n                  }],\n                  rules: [{\n                    [cg]: [{\n                      [ch]: g,\n                      [ci]: [{\n                        [ch]: h,\n                        [ci]: [{\n                          [cj]: M\n                        }, i]\n                      }, {\n                        [ch]: h,\n                        [ci]: [aQ, \"partition\"]\n                      }]\n                    }],\n                    rules: [{\n                      endpoint: {\n                        [cl]: \"https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}\",\n                        [cm]: {\n                          [co]: [{\n                            [cp]: b,\n                            name: y,\n                            [cq]: A,\n                            [ct]: bO\n                          }]\n                        },\n                        [cs]: ai\n                      },\n                      [cf]: n\n                    }],\n                    [cf]: o\n                  }, {\n                    error: \"Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`\",\n                    [cf]: e\n                  }],\n                  [cf]: o\n                }],\n                [cf]: o\n              }, {\n                error: \"Invalid Access Point Name\",\n                [cf]: e\n              }],\n              [cf]: o\n            }, bg],\n            [cf]: o\n          }, {\n            [cg]: [{\n              [ch]: g,\n              [ci]: [aS, z]\n            }],\n            rules: [{\n              [cg]: bz,\n              error: \"S3 Outposts does not support Dual-stack\",\n              [cf]: e\n            }, {\n              [cg]: bG,\n              error: \"S3 Outposts does not support FIPS\",\n              [cf]: e\n            }, {\n              [cg]: bA,\n              error: \"S3 Outposts does not support S3 Accelerate\",\n              [cf]: e\n            }, {\n              [cg]: [{\n                [ch]: c,\n                [ci]: [{\n                  [ch]: h,\n                  [ci]: [aQ, \"resourceId[4]\"]\n                }]\n              }],\n              error: \"Invalid Arn: Outpost Access Point ARN contains sub resources\",\n              [cf]: e\n            }, {\n              [cg]: [{\n                [ch]: h,\n                [ci]: bU,\n                [ck]: w\n              }],\n              rules: [{\n                [cg]: bM,\n                rules: [aX, {\n                  [cg]: bY,\n                  rules: [{\n                    [cg]: bP,\n                    rules: [{\n                      [cg]: bZ,\n                      rules: [{\n                        [cg]: ca,\n                        rules: [{\n                          [cg]: cb,\n                          rules: [{\n                            [cg]: [{\n                              [ch]: h,\n                              [ci]: bX,\n                              [ck]: N\n                            }],\n                            rules: [{\n                              [cg]: [{\n                                [ch]: h,\n                                [ci]: [aQ, \"resourceId[3]\"],\n                                [ck]: K\n                              }],\n                              rules: [{\n                                [cg]: [{\n                                  [ch]: g,\n                                  [ci]: [{\n                                    [cj]: N\n                                  }, J]\n                                }],\n                                rules: [{\n                                  [cg]: bB,\n                                  endpoint: {\n                                    [cl]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}\",\n                                    [cm]: bi,\n                                    [cs]: ai\n                                  },\n                                  [cf]: n\n                                }, {\n                                  endpoint: {\n                                    [cl]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}\",\n                                    [cm]: bi,\n                                    [cs]: ai\n                                  },\n                                  [cf]: n\n                                }],\n                                [cf]: o\n                              }, {\n                                error: \"Expected an outpost type `accesspoint`, found {outpostType}\",\n                                [cf]: e\n                              }],\n                              [cf]: o\n                            }, {\n                              error: \"Invalid ARN: expected an access point name\",\n                              [cf]: e\n                            }],\n                            [cf]: o\n                          }, {\n                            error: \"Invalid ARN: Expected a 4-component resource\",\n                            [cf]: e\n                          }],\n                          [cf]: o\n                        }, bc],\n                        [cf]: o\n                      }, bd],\n                      [cf]: o\n                    }, be],\n                    [cf]: o\n                  }],\n                  [cf]: o\n                }],\n                [cf]: o\n              }, {\n                error: \"Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`\",\n                [cf]: e\n              }],\n              [cf]: o\n            }, {\n              error: \"Invalid ARN: The Outpost Id was not set\",\n              [cf]: e\n            }],\n            [cf]: o\n          }, {\n            error: \"Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})\",\n            [cf]: e\n          }],\n          [cf]: o\n        }, {\n          error: \"Invalid ARN: No ARN type specified\",\n          [cf]: e\n        }],\n        [cf]: o\n      }, {\n        [cg]: [{\n          [ch]: j,\n          [ci]: [ac, 0, 4, a],\n          [ck]: O\n        }, {\n          [ch]: g,\n          [ci]: [{\n            [cj]: O\n          }, \"arn:\"]\n        }, {\n          [ch]: r,\n          [ci]: [{\n            [ch]: c,\n            [ci]: [bj]\n          }]\n        }],\n        error: \"Invalid ARN: `{Bucket}` was not a valid ARN\",\n        [cf]: e\n      }, {\n        [cg]: [{\n          [ch]: d,\n          [ci]: [av, b]\n        }, bj],\n        error: \"Path-style addressing cannot be used with ARN buckets\",\n        [cf]: e\n      }, {\n        [cg]: bE,\n        rules: [{\n          [cg]: bP,\n          rules: [{\n            [cg]: [aw],\n            rules: [{\n              [cg]: [X, ao, W, ax],\n              endpoint: {\n                [cl]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [X, ao, W, az, aA],\n              rules: [{\n                endpoint: bk,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [X, ao, W, az, aD],\n              endpoint: bk,\n              [cf]: n\n            }, {\n              [cg]: [aE, ao, W, ax],\n              endpoint: {\n                [cl]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, ao, W, az, aA],\n              rules: [{\n                endpoint: bl,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, ao, W, az, aD],\n              endpoint: bl,\n              [cf]: n\n            }, {\n              [cg]: [X, ao, aG, ax],\n              endpoint: {\n                [cl]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\",\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [X, ao, aG, az, aA],\n              rules: [{\n                endpoint: bm,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [X, ao, aG, az, aD],\n              endpoint: bm,\n              [cf]: n\n            }, {\n              [cg]: [aE, Y, ad, aG, ax],\n              endpoint: {\n                [cl]: P,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, Y, ad, aG, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: bn,\n                [cf]: n\n              }, {\n                endpoint: bn,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, Y, ad, aG, az, aD],\n              endpoint: bn,\n              [cf]: n\n            }, {\n              [cg]: [aE, ao, aG, ax],\n              endpoint: {\n                [cl]: Q,\n                [cm]: ay,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              [cg]: [aE, ao, aG, az, aA],\n              rules: [{\n                [cg]: bR,\n                endpoint: {\n                  [cl]: Q,\n                  [cm]: aC,\n                  [cs]: ai\n                },\n                [cf]: n\n              }, {\n                endpoint: bo,\n                [cf]: n\n              }],\n              [cf]: o\n            }, {\n              [cg]: [aE, ao, aG, az, aD],\n              endpoint: bo,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            error: \"Path-style addressing cannot be used with S3 Accelerate\",\n            [cf]: e\n          }],\n          [cf]: o\n        }],\n        [cf]: o\n      }],\n      [cf]: o\n    }, {\n      [cg]: [{\n        [ch]: c,\n        [ci]: [bp]\n      }, {\n        [ch]: d,\n        [ci]: [bp, b]\n      }],\n      rules: [{\n        [cg]: bP,\n        rules: [{\n          [cg]: cd,\n          rules: [aU, aV, {\n            [cg]: bB,\n            endpoint: {\n              [cl]: s,\n              [cm]: bq,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: bG,\n            endpoint: {\n              [cl]: \"https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}\",\n              [cm]: bq,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            endpoint: {\n              [cl]: \"https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}\",\n              [cm]: bq,\n              [cs]: ai\n            },\n            [cf]: n\n          }],\n          [cf]: o\n        }, aP],\n        [cf]: o\n      }],\n      [cf]: o\n    }, {\n      [cg]: [aq],\n      rules: [{\n        [cg]: bP,\n        rules: [{\n          [cg]: cd,\n          rules: [{\n            [cg]: [W, X, ao, ax],\n            endpoint: {\n              [cl]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\",\n              [cm]: ay,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: [W, X, ao, az, aA],\n            rules: [{\n              endpoint: br,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            [cg]: [W, X, ao, az, aD],\n            endpoint: br,\n            [cf]: n\n          }, {\n            [cg]: [W, aE, ao, ax],\n            endpoint: {\n              [cl]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}\",\n              [cm]: ay,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: [W, aE, ao, az, aA],\n            rules: [{\n              endpoint: bs,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            [cg]: [W, aE, ao, az, aD],\n            endpoint: bs,\n            [cf]: n\n          }, {\n            [cg]: [aG, X, ao, ax],\n            endpoint: {\n              [cl]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\",\n              [cm]: ay,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: [aG, X, ao, az, aA],\n            rules: [{\n              endpoint: bt,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            [cg]: [aG, X, ao, az, aD],\n            endpoint: bt,\n            [cf]: n\n          }, {\n            [cg]: [aG, aE, Y, ad, ax],\n            endpoint: {\n              [cl]: s,\n              [cm]: ay,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: [aG, aE, Y, ad, az, aA],\n            rules: [{\n              [cg]: bR,\n              endpoint: bu,\n              [cf]: n\n            }, {\n              endpoint: bu,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            [cg]: [aG, aE, Y, ad, az, aD],\n            endpoint: bu,\n            [cf]: n\n          }, {\n            [cg]: [aG, aE, ao, ax],\n            endpoint: {\n              [cl]: R,\n              [cm]: ay,\n              [cs]: ai\n            },\n            [cf]: n\n          }, {\n            [cg]: [aG, aE, ao, az, aA],\n            rules: [{\n              [cg]: bR,\n              endpoint: {\n                [cl]: R,\n                [cm]: aC,\n                [cs]: ai\n              },\n              [cf]: n\n            }, {\n              endpoint: bv,\n              [cf]: n\n            }],\n            [cf]: o\n          }, {\n            [cg]: [aG, aE, ao, az, aD],\n            endpoint: bv,\n            [cf]: n\n          }],\n          [cf]: o\n        }, aP],\n        [cf]: o\n      }],\n      [cf]: o\n    }],\n    [cf]: o\n  }, {\n    error: \"A region must be set when sending requests to S3.\",\n    [cf]: e\n  }]\n};\nexport const ruleSet = _data;","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n  size: 50,\n  params: [\"Accelerate\", \"Bucket\", \"DisableAccessPoints\", \"DisableMultiRegionAccessPoints\", \"DisableS3ExpressSessionAuth\", \"Endpoint\", \"ForcePathStyle\", \"Region\", \"UseArnRegion\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\", \"UseObjectLambdaEndpoint\", \"UseS3ExpressControlEndpoint\"]\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n  return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n    endpointParams: endpointParams,\n    logger: context.logger\n  }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;","import { resolveAwsSdkSigV4AConfig, resolveAwsSdkSigV4Config } from \"@aws-sdk/core\";\nimport { signatureV4CrtContainer } from \"@aws-sdk/signature-v4-multi-region\";\nimport { resolveParams } from \"@smithy/middleware-endpoint\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { defaultEndpointResolver } from \"../endpoint/endpointResolver\";\nconst createEndpointRuleSetHttpAuthSchemeParametersProvider = defaultHttpAuthSchemeParametersProvider => async (config, context, input) => {\n  if (!input) {\n    throw new Error(`Could not find \\`input\\` for \\`defaultEndpointRuleSetHttpAuthSchemeParametersProvider\\``);\n  }\n  const defaultParameters = await defaultHttpAuthSchemeParametersProvider(config, context, input);\n  const instructionsFn = getSmithyContext(context)?.commandInstance?.constructor?.getEndpointParameterInstructions;\n  if (!instructionsFn) {\n    throw new Error(`getEndpointParameterInstructions() is not defined on \\`${context.commandName}\\``);\n  }\n  const endpointParameters = await resolveParams(input, {\n    getEndpointParameterInstructions: instructionsFn\n  }, config);\n  return Object.assign(defaultParameters, endpointParameters);\n};\nconst _defaultS3HttpAuthSchemeParametersProvider = async (config, context, input) => {\n  return {\n    operation: getSmithyContext(context).operation,\n    region: (await normalizeProvider(config.region)()) || (() => {\n      throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n    })()\n  };\n};\nexport const defaultS3HttpAuthSchemeParametersProvider = createEndpointRuleSetHttpAuthSchemeParametersProvider(_defaultS3HttpAuthSchemeParametersProvider);\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n  return {\n    schemeId: \"aws.auth#sigv4\",\n    signingProperties: {\n      name: \"s3\",\n      region: authParameters.region\n    },\n    propertiesExtractor: (config, context) => ({\n      signingProperties: {\n        config,\n        context\n      }\n    })\n  };\n}\nfunction createAwsAuthSigv4aHttpAuthOption(authParameters) {\n  return {\n    schemeId: \"aws.auth#sigv4a\",\n    signingProperties: {\n      name: \"s3\",\n      region: authParameters.region\n    },\n    propertiesExtractor: (config, context) => ({\n      signingProperties: {\n        config,\n        context\n      }\n    })\n  };\n}\nconst createEndpointRuleSetHttpAuthSchemeProvider = (defaultEndpointResolver, defaultHttpAuthSchemeResolver, createHttpAuthOptionFunctions) => {\n  const endpointRuleSetHttpAuthSchemeProvider = authParameters => {\n    const endpoint = defaultEndpointResolver(authParameters);\n    const authSchemes = endpoint.properties?.authSchemes;\n    if (!authSchemes) {\n      return defaultHttpAuthSchemeResolver(authParameters);\n    }\n    const options = [];\n    for (const scheme of authSchemes) {\n      const {\n        name: resolvedName,\n        properties = {},\n        ...rest\n      } = scheme;\n      const name = resolvedName.toLowerCase();\n      if (resolvedName !== name) {\n        console.warn(`HttpAuthScheme has been normalized with lowercasing: \\`${resolvedName}\\` to \\`${name}\\``);\n      }\n      let schemeId;\n      if (name === \"sigv4a\") {\n        schemeId = \"aws.auth#sigv4a\";\n        const sigv4Present = authSchemes.find(s => {\n          const name = s.name.toLowerCase();\n          return name !== \"sigv4a\" && name.startsWith(\"sigv4\");\n        });\n        if (!signatureV4CrtContainer.CrtSignerV4 && sigv4Present) {\n          continue;\n        }\n      } else if (name.startsWith(\"sigv4\")) {\n        schemeId = \"aws.auth#sigv4\";\n      } else {\n        throw new Error(`Unknown HttpAuthScheme found in \\`@smithy.rules#endpointRuleSet\\`: \\`${name}\\``);\n      }\n      const createOption = createHttpAuthOptionFunctions[schemeId];\n      if (!createOption) {\n        throw new Error(`Could not find HttpAuthOption create function for \\`${schemeId}\\``);\n      }\n      const option = createOption(authParameters);\n      option.schemeId = schemeId;\n      option.signingProperties = {\n        ...(option.signingProperties || {}),\n        ...rest,\n        ...properties\n      };\n      options.push(option);\n    }\n    return options;\n  };\n  return endpointRuleSetHttpAuthSchemeProvider;\n};\nconst _defaultS3HttpAuthSchemeProvider = authParameters => {\n  const options = [];\n  switch (authParameters.operation) {\n    default:\n      {\n        options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        options.push(createAwsAuthSigv4aHttpAuthOption(authParameters));\n      }\n  }\n  return options;\n};\nexport const defaultS3HttpAuthSchemeProvider = createEndpointRuleSetHttpAuthSchemeProvider(defaultEndpointResolver, _defaultS3HttpAuthSchemeProvider, {\n  \"aws.auth#sigv4\": createAwsAuthSigv4HttpAuthOption,\n  \"aws.auth#sigv4a\": createAwsAuthSigv4aHttpAuthOption\n});\nexport const resolveHttpAuthSchemeConfig = config => {\n  const config_0 = resolveAwsSdkSigV4Config(config);\n  const config_1 = resolveAwsSdkSigV4AConfig(config_0);\n  return {\n    ...config_1\n  };\n};","export const resolveClientEndpointParameters = options => {\n  return {\n    ...options,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    forcePathStyle: options.forcePathStyle ?? false,\n    useAccelerateEndpoint: options.useAccelerateEndpoint ?? false,\n    useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n    disableMultiregionAccessPoints: options.disableMultiregionAccessPoints ?? false,\n    defaultSigningName: \"s3\"\n  };\n};\nexport const commonParams = {\n  ForcePathStyle: {\n    type: \"clientContextParams\",\n    name: \"forcePathStyle\"\n  },\n  UseArnRegion: {\n    type: \"clientContextParams\",\n    name: \"useArnRegion\"\n  },\n  DisableMultiRegionAccessPoints: {\n    type: \"clientContextParams\",\n    name: \"disableMultiregionAccessPoints\"\n  },\n  Accelerate: {\n    type: \"clientContextParams\",\n    name: \"useAccelerateEndpoint\"\n  },\n  DisableS3ExpressSessionAuth: {\n    type: \"clientContextParams\",\n    name: \"disableS3ExpressSessionAuth\"\n  },\n  UseGlobalEndpoint: {\n    type: \"builtInParams\",\n    name: \"useGlobalEndpoint\"\n  },\n  UseFIPS: {\n    type: \"builtInParams\",\n    name: \"useFipsEndpoint\"\n  },\n  Endpoint: {\n    type: \"builtInParams\",\n    name: \"endpoint\"\n  },\n  Region: {\n    type: \"builtInParams\",\n    name: \"region\"\n  },\n  UseDualStack: {\n    type: \"builtInParams\",\n    name: \"useDualstackEndpoint\"\n  }\n};","import { ServiceException as __ServiceException } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class S3ServiceException extends __ServiceException {\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, S3ServiceException.prototype);\n  }\n}","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { S3ServiceException as __BaseException } from \"./S3ServiceException\";\nexport const RequestCharged = {\n  requester: \"requester\"\n};\nexport const RequestPayer = {\n  requester: \"requester\"\n};\nexport class NoSuchUpload extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"NoSuchUpload\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NoSuchUpload\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, NoSuchUpload.prototype);\n  }\n}\nexport const BucketAccelerateStatus = {\n  Enabled: \"Enabled\",\n  Suspended: \"Suspended\"\n};\nexport const Type = {\n  AmazonCustomerByEmail: \"AmazonCustomerByEmail\",\n  CanonicalUser: \"CanonicalUser\",\n  Group: \"Group\"\n};\nexport const Permission = {\n  FULL_CONTROL: \"FULL_CONTROL\",\n  READ: \"READ\",\n  READ_ACP: \"READ_ACP\",\n  WRITE: \"WRITE\",\n  WRITE_ACP: \"WRITE_ACP\"\n};\nexport const OwnerOverride = {\n  Destination: \"Destination\"\n};\nexport const ServerSideEncryption = {\n  AES256: \"AES256\",\n  aws_kms: \"aws:kms\",\n  aws_kms_dsse: \"aws:kms:dsse\"\n};\nexport const ObjectCannedACL = {\n  authenticated_read: \"authenticated-read\",\n  aws_exec_read: \"aws-exec-read\",\n  bucket_owner_full_control: \"bucket-owner-full-control\",\n  bucket_owner_read: \"bucket-owner-read\",\n  private: \"private\",\n  public_read: \"public-read\",\n  public_read_write: \"public-read-write\"\n};\nexport const ChecksumAlgorithm = {\n  CRC32: \"CRC32\",\n  CRC32C: \"CRC32C\",\n  SHA1: \"SHA1\",\n  SHA256: \"SHA256\"\n};\nexport const MetadataDirective = {\n  COPY: \"COPY\",\n  REPLACE: \"REPLACE\"\n};\nexport const ObjectLockLegalHoldStatus = {\n  OFF: \"OFF\",\n  ON: \"ON\"\n};\nexport const ObjectLockMode = {\n  COMPLIANCE: \"COMPLIANCE\",\n  GOVERNANCE: \"GOVERNANCE\"\n};\nexport const StorageClass = {\n  DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n  EXPRESS_ONEZONE: \"EXPRESS_ONEZONE\",\n  GLACIER: \"GLACIER\",\n  GLACIER_IR: \"GLACIER_IR\",\n  INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n  ONEZONE_IA: \"ONEZONE_IA\",\n  OUTPOSTS: \"OUTPOSTS\",\n  REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n  SNOW: \"SNOW\",\n  STANDARD: \"STANDARD\",\n  STANDARD_IA: \"STANDARD_IA\"\n};\nexport const TaggingDirective = {\n  COPY: \"COPY\",\n  REPLACE: \"REPLACE\"\n};\nexport class ObjectNotInActiveTierError extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"ObjectNotInActiveTierError\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ObjectNotInActiveTierError\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, ObjectNotInActiveTierError.prototype);\n  }\n}\nexport class BucketAlreadyExists extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"BucketAlreadyExists\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BucketAlreadyExists\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, BucketAlreadyExists.prototype);\n  }\n}\nexport class BucketAlreadyOwnedByYou extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"BucketAlreadyOwnedByYou\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BucketAlreadyOwnedByYou\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, BucketAlreadyOwnedByYou.prototype);\n  }\n}\nexport const BucketCannedACL = {\n  authenticated_read: \"authenticated-read\",\n  private: \"private\",\n  public_read: \"public-read\",\n  public_read_write: \"public-read-write\"\n};\nexport const DataRedundancy = {\n  SingleAvailabilityZone: \"SingleAvailabilityZone\"\n};\nexport const BucketType = {\n  Directory: \"Directory\"\n};\nexport const LocationType = {\n  AvailabilityZone: \"AvailabilityZone\"\n};\nexport const BucketLocationConstraint = {\n  EU: \"EU\",\n  af_south_1: \"af-south-1\",\n  ap_east_1: \"ap-east-1\",\n  ap_northeast_1: \"ap-northeast-1\",\n  ap_northeast_2: \"ap-northeast-2\",\n  ap_northeast_3: \"ap-northeast-3\",\n  ap_south_1: \"ap-south-1\",\n  ap_south_2: \"ap-south-2\",\n  ap_southeast_1: \"ap-southeast-1\",\n  ap_southeast_2: \"ap-southeast-2\",\n  ap_southeast_3: \"ap-southeast-3\",\n  ca_central_1: \"ca-central-1\",\n  cn_north_1: \"cn-north-1\",\n  cn_northwest_1: \"cn-northwest-1\",\n  eu_central_1: \"eu-central-1\",\n  eu_north_1: \"eu-north-1\",\n  eu_south_1: \"eu-south-1\",\n  eu_south_2: \"eu-south-2\",\n  eu_west_1: \"eu-west-1\",\n  eu_west_2: \"eu-west-2\",\n  eu_west_3: \"eu-west-3\",\n  me_south_1: \"me-south-1\",\n  sa_east_1: \"sa-east-1\",\n  us_east_2: \"us-east-2\",\n  us_gov_east_1: \"us-gov-east-1\",\n  us_gov_west_1: \"us-gov-west-1\",\n  us_west_1: \"us-west-1\",\n  us_west_2: \"us-west-2\"\n};\nexport const ObjectOwnership = {\n  BucketOwnerEnforced: \"BucketOwnerEnforced\",\n  BucketOwnerPreferred: \"BucketOwnerPreferred\",\n  ObjectWriter: \"ObjectWriter\"\n};\nexport const SessionMode = {\n  ReadOnly: \"ReadOnly\",\n  ReadWrite: \"ReadWrite\"\n};\nexport class NoSuchBucket extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"NoSuchBucket\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NoSuchBucket\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, NoSuchBucket.prototype);\n  }\n}\nexport var AnalyticsFilter;\n(function (AnalyticsFilter) {\n  AnalyticsFilter.visit = (value, visitor) => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n})(AnalyticsFilter || (AnalyticsFilter = {}));\nexport const AnalyticsS3ExportFileFormat = {\n  CSV: \"CSV\"\n};\nexport const StorageClassAnalysisSchemaVersion = {\n  V_1: \"V_1\"\n};\nexport const IntelligentTieringStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const IntelligentTieringAccessTier = {\n  ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n  DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\"\n};\nexport const InventoryFormat = {\n  CSV: \"CSV\",\n  ORC: \"ORC\",\n  Parquet: \"Parquet\"\n};\nexport const InventoryIncludedObjectVersions = {\n  All: \"All\",\n  Current: \"Current\"\n};\nexport const InventoryOptionalField = {\n  BucketKeyStatus: \"BucketKeyStatus\",\n  ChecksumAlgorithm: \"ChecksumAlgorithm\",\n  ETag: \"ETag\",\n  EncryptionStatus: \"EncryptionStatus\",\n  IntelligentTieringAccessTier: \"IntelligentTieringAccessTier\",\n  IsMultipartUploaded: \"IsMultipartUploaded\",\n  LastModifiedDate: \"LastModifiedDate\",\n  ObjectAccessControlList: \"ObjectAccessControlList\",\n  ObjectLockLegalHoldStatus: \"ObjectLockLegalHoldStatus\",\n  ObjectLockMode: \"ObjectLockMode\",\n  ObjectLockRetainUntilDate: \"ObjectLockRetainUntilDate\",\n  ObjectOwner: \"ObjectOwner\",\n  ReplicationStatus: \"ReplicationStatus\",\n  Size: \"Size\",\n  StorageClass: \"StorageClass\"\n};\nexport const InventoryFrequency = {\n  Daily: \"Daily\",\n  Weekly: \"Weekly\"\n};\nexport const TransitionStorageClass = {\n  DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n  GLACIER: \"GLACIER\",\n  GLACIER_IR: \"GLACIER_IR\",\n  INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n  ONEZONE_IA: \"ONEZONE_IA\",\n  STANDARD_IA: \"STANDARD_IA\"\n};\nexport const ExpirationStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const TransitionDefaultMinimumObjectSize = {\n  all_storage_classes_128K: \"all_storage_classes_128K\",\n  varies_by_storage_class: \"varies_by_storage_class\"\n};\nexport const BucketLogsPermission = {\n  FULL_CONTROL: \"FULL_CONTROL\",\n  READ: \"READ\",\n  WRITE: \"WRITE\"\n};\nexport const PartitionDateSource = {\n  DeliveryTime: \"DeliveryTime\",\n  EventTime: \"EventTime\"\n};\nexport var MetricsFilter;\n(function (MetricsFilter) {\n  MetricsFilter.visit = (value, visitor) => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.AccessPointArn !== undefined) return visitor.AccessPointArn(value.AccessPointArn);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n})(MetricsFilter || (MetricsFilter = {}));\nexport const Event = {\n  s3_IntelligentTiering: \"s3:IntelligentTiering\",\n  s3_LifecycleExpiration_: \"s3:LifecycleExpiration:*\",\n  s3_LifecycleExpiration_Delete: \"s3:LifecycleExpiration:Delete\",\n  s3_LifecycleExpiration_DeleteMarkerCreated: \"s3:LifecycleExpiration:DeleteMarkerCreated\",\n  s3_LifecycleTransition: \"s3:LifecycleTransition\",\n  s3_ObjectAcl_Put: \"s3:ObjectAcl:Put\",\n  s3_ObjectCreated_: \"s3:ObjectCreated:*\",\n  s3_ObjectCreated_CompleteMultipartUpload: \"s3:ObjectCreated:CompleteMultipartUpload\",\n  s3_ObjectCreated_Copy: \"s3:ObjectCreated:Copy\",\n  s3_ObjectCreated_Post: \"s3:ObjectCreated:Post\",\n  s3_ObjectCreated_Put: \"s3:ObjectCreated:Put\",\n  s3_ObjectRemoved_: \"s3:ObjectRemoved:*\",\n  s3_ObjectRemoved_Delete: \"s3:ObjectRemoved:Delete\",\n  s3_ObjectRemoved_DeleteMarkerCreated: \"s3:ObjectRemoved:DeleteMarkerCreated\",\n  s3_ObjectRestore_: \"s3:ObjectRestore:*\",\n  s3_ObjectRestore_Completed: \"s3:ObjectRestore:Completed\",\n  s3_ObjectRestore_Delete: \"s3:ObjectRestore:Delete\",\n  s3_ObjectRestore_Post: \"s3:ObjectRestore:Post\",\n  s3_ObjectTagging_: \"s3:ObjectTagging:*\",\n  s3_ObjectTagging_Delete: \"s3:ObjectTagging:Delete\",\n  s3_ObjectTagging_Put: \"s3:ObjectTagging:Put\",\n  s3_ReducedRedundancyLostObject: \"s3:ReducedRedundancyLostObject\",\n  s3_Replication_: \"s3:Replication:*\",\n  s3_Replication_OperationFailedReplication: \"s3:Replication:OperationFailedReplication\",\n  s3_Replication_OperationMissedThreshold: \"s3:Replication:OperationMissedThreshold\",\n  s3_Replication_OperationNotTracked: \"s3:Replication:OperationNotTracked\",\n  s3_Replication_OperationReplicatedAfterThreshold: \"s3:Replication:OperationReplicatedAfterThreshold\"\n};\nexport const FilterRuleName = {\n  prefix: \"prefix\",\n  suffix: \"suffix\"\n};\nexport const DeleteMarkerReplicationStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const MetricsStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const ReplicationTimeStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const ExistingObjectReplicationStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const ReplicaModificationsStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const SseKmsEncryptedObjectsStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const ReplicationRuleStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const Payer = {\n  BucketOwner: \"BucketOwner\",\n  Requester: \"Requester\"\n};\nexport const MFADeleteStatus = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport const BucketVersioningStatus = {\n  Enabled: \"Enabled\",\n  Suspended: \"Suspended\"\n};\nexport const Protocol = {\n  http: \"http\",\n  https: \"https\"\n};\nexport const ReplicationStatus = {\n  COMPLETE: \"COMPLETE\",\n  COMPLETED: \"COMPLETED\",\n  FAILED: \"FAILED\",\n  PENDING: \"PENDING\",\n  REPLICA: \"REPLICA\"\n};\nexport const ChecksumMode = {\n  ENABLED: \"ENABLED\"\n};\nexport class InvalidObjectState extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidObjectState\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidObjectState\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidObjectState.prototype);\n    this.StorageClass = opts.StorageClass;\n    this.AccessTier = opts.AccessTier;\n  }\n}\nexport class NoSuchKey extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"NoSuchKey\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NoSuchKey\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, NoSuchKey.prototype);\n  }\n}\nexport const ObjectAttributes = {\n  CHECKSUM: \"Checksum\",\n  ETAG: \"ETag\",\n  OBJECT_PARTS: \"ObjectParts\",\n  OBJECT_SIZE: \"ObjectSize\",\n  STORAGE_CLASS: \"StorageClass\"\n};\nexport const ObjectLockEnabled = {\n  Enabled: \"Enabled\"\n};\nexport const ObjectLockRetentionMode = {\n  COMPLIANCE: \"COMPLIANCE\",\n  GOVERNANCE: \"GOVERNANCE\"\n};\nexport class NotFound extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"NotFound\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NotFound\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, NotFound.prototype);\n  }\n}\nexport const ArchiveStatus = {\n  ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n  DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\"\n};\nexport const EncodingType = {\n  url: \"url\"\n};\nexport const ObjectStorageClass = {\n  DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n  EXPRESS_ONEZONE: \"EXPRESS_ONEZONE\",\n  GLACIER: \"GLACIER\",\n  GLACIER_IR: \"GLACIER_IR\",\n  INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n  ONEZONE_IA: \"ONEZONE_IA\",\n  OUTPOSTS: \"OUTPOSTS\",\n  REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n  SNOW: \"SNOW\",\n  STANDARD: \"STANDARD\",\n  STANDARD_IA: \"STANDARD_IA\"\n};\nexport const OptionalObjectAttributes = {\n  RESTORE_STATUS: \"RestoreStatus\"\n};\nexport const ObjectVersionStorageClass = {\n  STANDARD: \"STANDARD\"\n};\nexport const CompleteMultipartUploadOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const CompleteMultipartUploadRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const CopyObjectOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const CopyObjectRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  }),\n  ...(obj.CopySourceSSECustomerKey && {\n    CopySourceSSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const CreateMultipartUploadOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const CreateMultipartUploadRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const SessionCredentialsFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SecretAccessKey && {\n    SecretAccessKey: SENSITIVE_STRING\n  }),\n  ...(obj.SessionToken && {\n    SessionToken: SENSITIVE_STRING\n  })\n});\nexport const CreateSessionOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  }),\n  ...(obj.Credentials && {\n    Credentials: SessionCredentialsFilterSensitiveLog(obj.Credentials)\n  })\n});\nexport const CreateSessionRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const ServerSideEncryptionByDefaultFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.KMSMasterKeyID && {\n    KMSMasterKeyID: SENSITIVE_STRING\n  })\n});\nexport const ServerSideEncryptionRuleFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.ApplyServerSideEncryptionByDefault && {\n    ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefaultFilterSensitiveLog(obj.ApplyServerSideEncryptionByDefault)\n  })\n});\nexport const ServerSideEncryptionConfigurationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.Rules && {\n    Rules: obj.Rules.map(item => ServerSideEncryptionRuleFilterSensitiveLog(item))\n  })\n});\nexport const GetBucketEncryptionOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.ServerSideEncryptionConfiguration && {\n    ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n  })\n});\nexport const SSEKMSFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.KeyId && {\n    KeyId: SENSITIVE_STRING\n  })\n});\nexport const InventoryEncryptionFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMS && {\n    SSEKMS: SSEKMSFilterSensitiveLog(obj.SSEKMS)\n  })\n});\nexport const InventoryS3BucketDestinationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.Encryption && {\n    Encryption: InventoryEncryptionFilterSensitiveLog(obj.Encryption)\n  })\n});\nexport const InventoryDestinationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.S3BucketDestination && {\n    S3BucketDestination: InventoryS3BucketDestinationFilterSensitiveLog(obj.S3BucketDestination)\n  })\n});\nexport const InventoryConfigurationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.Destination && {\n    Destination: InventoryDestinationFilterSensitiveLog(obj.Destination)\n  })\n});\nexport const GetBucketInventoryConfigurationOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.InventoryConfiguration && {\n    InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration)\n  })\n});\nexport const GetObjectOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const GetObjectRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const GetObjectAttributesRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const GetObjectTorrentOutputFilterSensitiveLog = obj => ({\n  ...obj\n});\nexport const HeadObjectOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const HeadObjectRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const ListBucketInventoryConfigurationsOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.InventoryConfigurationList && {\n    InventoryConfigurationList: obj.InventoryConfigurationList.map(item => InventoryConfigurationFilterSensitiveLog(item))\n  })\n});\nexport const ListPartsRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const PutBucketEncryptionRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.ServerSideEncryptionConfiguration && {\n    ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n  })\n});\nexport const PutBucketInventoryConfigurationRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.InventoryConfiguration && {\n    InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration)\n  })\n});","export function escapeAttribute(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}","export function escapeElement(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\r/g, \"&#x0D;\").replace(/\\n/g, \"&#x0A;\").replace(/\\u0085/g, \"&#x85;\").replace(/\\u2028/, \"&#x2028;\");\n}","import { escapeElement } from \"./escape-element\";\nexport class XmlText {\n  constructor(value) {\n    this.value = value;\n  }\n  toString() {\n    return escapeElement(\"\" + this.value);\n  }\n}","import { escapeAttribute } from \"./escape-attribute\";\nimport { XmlText } from \"./XmlText\";\nexport class XmlNode {\n  static of(name, childText, withName) {\n    const node = new XmlNode(name);\n    if (childText !== undefined) {\n      node.addChildNode(new XmlText(childText));\n    }\n    if (withName !== undefined) {\n      node.withName(withName);\n    }\n    return node;\n  }\n  constructor(name, children = []) {\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n  }\n  withName(name) {\n    this.name = name;\n    return this;\n  }\n  addAttribute(name, value) {\n    this.attributes[name] = value;\n    return this;\n  }\n  addChildNode(child) {\n    this.children.push(child);\n    return this;\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  }\n  n(name) {\n    this.name = name;\n    return this;\n  }\n  c(child) {\n    this.children.push(child);\n    return this;\n  }\n  a(name, value) {\n    if (value != null) {\n      this.attributes[name] = value;\n    }\n    return this;\n  }\n  cc(input, field, withName = field) {\n    if (input[field] != null) {\n      const node = XmlNode.of(field, input[field]).withName(withName);\n      this.c(node);\n    }\n  }\n  l(input, listName, memberName, valueProvider) {\n    if (input[listName] != null) {\n      const nodes = valueProvider();\n      nodes.map(node => {\n        node.withName(memberName);\n        this.c(node);\n      });\n    }\n  }\n  lc(input, listName, memberName, valueProvider) {\n    if (input[listName] != null) {\n      const nodes = valueProvider();\n      const containerNode = new XmlNode(memberName);\n      nodes.map(node => {\n        containerNode.c(node);\n      });\n      this.c(containerNode);\n    }\n  }\n  toString() {\n    const hasChildren = Boolean(this.children.length);\n    let xmlText = `<${this.name}`;\n    const attributes = this.attributes;\n    for (const attributeName of Object.keys(attributes)) {\n      const attribute = attributes[attributeName];\n      if (attribute != null) {\n        xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\n      }\n    }\n    return xmlText += !hasChildren ? \"/>\" : `>${this.children.map(c => c.toString()).join(\"\")}</${this.name}>`;\n  }\n}","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { S3ServiceException as __BaseException } from \"./S3ServiceException\";\nexport const MFADelete = {\n  Disabled: \"Disabled\",\n  Enabled: \"Enabled\"\n};\nexport class ObjectAlreadyInActiveTierError extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"ObjectAlreadyInActiveTierError\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ObjectAlreadyInActiveTierError\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, ObjectAlreadyInActiveTierError.prototype);\n  }\n}\nexport const Tier = {\n  Bulk: \"Bulk\",\n  Expedited: \"Expedited\",\n  Standard: \"Standard\"\n};\nexport const ExpressionType = {\n  SQL: \"SQL\"\n};\nexport const CompressionType = {\n  BZIP2: \"BZIP2\",\n  GZIP: \"GZIP\",\n  NONE: \"NONE\"\n};\nexport const FileHeaderInfo = {\n  IGNORE: \"IGNORE\",\n  NONE: \"NONE\",\n  USE: \"USE\"\n};\nexport const JSONType = {\n  DOCUMENT: \"DOCUMENT\",\n  LINES: \"LINES\"\n};\nexport const QuoteFields = {\n  ALWAYS: \"ALWAYS\",\n  ASNEEDED: \"ASNEEDED\"\n};\nexport const RestoreRequestType = {\n  SELECT: \"SELECT\"\n};\nexport var SelectObjectContentEventStream;\n(function (SelectObjectContentEventStream) {\n  SelectObjectContentEventStream.visit = (value, visitor) => {\n    if (value.Records !== undefined) return visitor.Records(value.Records);\n    if (value.Stats !== undefined) return visitor.Stats(value.Stats);\n    if (value.Progress !== undefined) return visitor.Progress(value.Progress);\n    if (value.Cont !== undefined) return visitor.Cont(value.Cont);\n    if (value.End !== undefined) return visitor.End(value.End);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n})(SelectObjectContentEventStream || (SelectObjectContentEventStream = {}));\nexport const PutObjectOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const PutObjectRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  }),\n  ...(obj.SSEKMSEncryptionContext && {\n    SSEKMSEncryptionContext: SENSITIVE_STRING\n  })\n});\nexport const EncryptionFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.KMSKeyId && {\n    KMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const S3LocationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.Encryption && {\n    Encryption: EncryptionFilterSensitiveLog(obj.Encryption)\n  })\n});\nexport const OutputLocationFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.S3 && {\n    S3: S3LocationFilterSensitiveLog(obj.S3)\n  })\n});\nexport const RestoreRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.OutputLocation && {\n    OutputLocation: OutputLocationFilterSensitiveLog(obj.OutputLocation)\n  })\n});\nexport const RestoreObjectRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.RestoreRequest && {\n    RestoreRequest: RestoreRequestFilterSensitiveLog(obj.RestoreRequest)\n  })\n});\nexport const SelectObjectContentEventStreamFilterSensitiveLog = obj => {\n  if (obj.Records !== undefined) return {\n    Records: obj.Records\n  };\n  if (obj.Stats !== undefined) return {\n    Stats: obj.Stats\n  };\n  if (obj.Progress !== undefined) return {\n    Progress: obj.Progress\n  };\n  if (obj.Cont !== undefined) return {\n    Cont: obj.Cont\n  };\n  if (obj.End !== undefined) return {\n    End: obj.End\n  };\n  if (obj.$unknown !== undefined) return {\n    [obj.$unknown[0]]: \"UNKNOWN\"\n  };\n};\nexport const SelectObjectContentOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.Payload && {\n    Payload: \"STREAMING_CONTENT\"\n  })\n});\nexport const SelectObjectContentRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const UploadPartOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const UploadPartRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const UploadPartCopyOutputFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});\nexport const UploadPartCopyRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSECustomerKey && {\n    SSECustomerKey: SENSITIVE_STRING\n  }),\n  ...(obj.CopySourceSSECustomerKey && {\n    CopySourceSSECustomerKey: SENSITIVE_STRING\n  })\n});\nexport const WriteGetObjectResponseRequestFilterSensitiveLog = obj => ({\n  ...obj,\n  ...(obj.SSEKMSKeyId && {\n    SSEKMSKeyId: SENSITIVE_STRING\n  })\n});","import { loadRestXmlErrorCode, parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { isValidHostname as __isValidHostname } from \"@smithy/protocol-http\";\nimport { collectBody, dateToUtcString as __dateToUtcString, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, getArrayIfSingleItem as __getArrayIfSingleItem, isSerializableHeaderValue, map, parseBoolean as __parseBoolean, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, parseRfc7231DateTime as __parseRfc7231DateTime, quoteHeader as __quoteHeader, serializeDateTime as __serializeDateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong, withBaseException } from \"@smithy/smithy-client\";\nimport { AnalyticsFilter, BucketAlreadyExists, BucketAlreadyOwnedByYou, InvalidObjectState, MetricsFilter, NoSuchBucket, NoSuchKey, NoSuchUpload, NotFound, ObjectNotInActiveTierError } from \"../models/models_0\";\nimport { ObjectAlreadyInActiveTierError } from \"../models/models_1\";\nimport { S3ServiceException as __BaseException } from \"../models/S3ServiceException\";\nexport const se_AbortMultipartUploadCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"AbortMultipartUpload\"],\n    [_uI]: [, __expectNonNull(input[_UI], `UploadId`)]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_CompleteMultipartUploadCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xacc]: input[_CCRC],\n    [_xacc_]: input[_CCRCC],\n    [_xacs]: input[_CSHA],\n    [_xacs_]: input[_CSHAh],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_inm]: input[_INM],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_uI]: [, __expectNonNull(input[_UI], `UploadId`)]\n  });\n  let body;\n  let contents;\n  if (input.MultipartUpload !== undefined) {\n    contents = se_CompletedMultipartUpload(input.MultipartUpload, context);\n    contents = contents.n(\"CompleteMultipartUpload\");\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_CopyObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaa]: input[_ACL],\n    [_cc]: input[_CC],\n    [_xaca]: input[_CA],\n    [_cd]: input[_CD],\n    [_ce]: input[_CE],\n    [_cl]: input[_CL],\n    [_ct]: input[_CT],\n    [_xacs__]: input[_CS],\n    [_xacsim]: input[_CSIM],\n    [_xacsims]: [() => isSerializableHeaderValue(input[_CSIMS]), () => __dateToUtcString(input[_CSIMS]).toString()],\n    [_xacsinm]: input[_CSINM],\n    [_xacsius]: [() => isSerializableHeaderValue(input[_CSIUS]), () => __dateToUtcString(input[_CSIUS]).toString()],\n    [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagwa]: input[_GWACP],\n    [_xamd]: input[_MD],\n    [_xatd]: input[_TD],\n    [_xasse]: input[_SSE],\n    [_xasc]: input[_SC],\n    [_xawrl]: input[_WRL],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xasseakki]: input[_SSEKMSKI],\n    [_xassec]: input[_SSEKMSEC],\n    [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n    [_xacssseca]: input[_CSSSECA],\n    [_xacssseck]: input[_CSSSECK],\n    [_xacssseckm]: input[_CSSSECKMD],\n    [_xarp]: input[_RP],\n    [_xat]: input[_T],\n    [_xaolm]: input[_OLM],\n    [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n    [_xaollh]: input[_OLLHS],\n    [_xaebo]: input[_EBO],\n    [_xasebo]: input[_ESBO],\n    ...(input.Metadata !== undefined && Object.keys(input.Metadata).reduce((acc, suffix) => {\n      acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n      return acc;\n    }, {}))\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"CopyObject\"]\n  });\n  let body;\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_CreateBucketCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaa]: input[_ACL],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagw]: input[_GW],\n    [_xagwa]: input[_GWACP],\n    [_xabole]: [() => isSerializableHeaderValue(input[_OLEFB]), () => input[_OLEFB].toString()],\n    [_xaoo]: input[_OO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  let body;\n  let contents;\n  if (input.CreateBucketConfiguration !== undefined) {\n    contents = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).b(body);\n  return b.build();\n};\nexport const se_CreateMultipartUploadCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaa]: input[_ACL],\n    [_cc]: input[_CC],\n    [_cd]: input[_CD],\n    [_ce]: input[_CE],\n    [_cl]: input[_CL],\n    [_ct]: input[_CT],\n    [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagwa]: input[_GWACP],\n    [_xasse]: input[_SSE],\n    [_xasc]: input[_SC],\n    [_xawrl]: input[_WRL],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xasseakki]: input[_SSEKMSKI],\n    [_xassec]: input[_SSEKMSEC],\n    [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n    [_xarp]: input[_RP],\n    [_xat]: input[_T],\n    [_xaolm]: input[_OLM],\n    [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n    [_xaollh]: input[_OLLHS],\n    [_xaebo]: input[_EBO],\n    [_xaca]: input[_CA],\n    ...(input.Metadata !== undefined && Object.keys(input.Metadata).reduce((acc, suffix) => {\n      acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n      return acc;\n    }, {}))\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_u]: [, \"\"]\n  });\n  let body;\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_CreateSessionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xacsm]: input[_SM],\n    [_xasse]: input[_SSE],\n    [_xasseakki]: input[_SSEKMSKI],\n    [_xassec]: input[_SSEKMSEC],\n    [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_s]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  let body;\n  b.m(\"DELETE\").h(headers).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketAnalyticsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_a]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketCorsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_c]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketEncryptionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_en]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_it]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketInventoryConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_in]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketLifecycleCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_l]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketMetricsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_m]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketOwnershipControlsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_oC]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketPolicyCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_p]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketReplicationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_r]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_t]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteBucketWebsiteCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_w]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xam]: input[_MFA],\n    [_xarp]: input[_RP],\n    [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"DeleteObject\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteObjectsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xam]: input[_MFA],\n    [_xarp]: input[_RP],\n    [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n    [_xaebo]: input[_EBO],\n    [_xasca]: input[_CA]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_d]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.Delete !== undefined) {\n    contents = se_Delete(input.Delete, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeleteObjectTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_t]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_DeletePublicAccessBlockCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_pAB]: [, \"\"]\n  });\n  let body;\n  b.m(\"DELETE\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketAccelerateConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO],\n    [_xarp]: input[_RP]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_ac]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketAclCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_acl]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketAnalyticsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_a]: [, \"\"],\n    [_xi]: [, \"GetBucketAnalyticsConfiguration\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketCorsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_c]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketEncryptionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_en]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_it]: [, \"\"],\n    [_xi]: [, \"GetBucketIntelligentTieringConfiguration\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketInventoryConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_in]: [, \"\"],\n    [_xi]: [, \"GetBucketInventoryConfiguration\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketLifecycleConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_l]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketLocationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_lo]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketLoggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_log]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketMetricsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_m]: [, \"\"],\n    [_xi]: [, \"GetBucketMetricsConfiguration\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketNotificationConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_n]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketOwnershipControlsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_oC]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketPolicyCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_p]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketPolicyStatusCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_pS]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketReplicationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_r]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketRequestPaymentCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_rP]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_t]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketVersioningCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_v]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetBucketWebsiteCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_w]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_im]: input[_IM],\n    [_ims]: [() => isSerializableHeaderValue(input[_IMS]), () => __dateToUtcString(input[_IMS]).toString()],\n    [_inm]: input[_INM],\n    [_ius]: [() => isSerializableHeaderValue(input[_IUS]), () => __dateToUtcString(input[_IUS]).toString()],\n    [_ra]: input[_R],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xacm]: input[_CM]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"GetObject\"],\n    [_rcc]: [, input[_RCC]],\n    [_rcd]: [, input[_RCD]],\n    [_rce]: [, input[_RCE]],\n    [_rcl]: [, input[_RCL]],\n    [_rct]: [, input[_RCT]],\n    [_re]: [() => input.ResponseExpires !== void 0, () => __dateToUtcString(input[_RE]).toString()],\n    [_vI]: [, input[_VI]],\n    [_pN]: [() => input.PartNumber !== void 0, () => input[_PN].toString()]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectAclCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_acl]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectAttributesCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xamp]: [() => isSerializableHeaderValue(input[_MP]), () => input[_MP].toString()],\n    [_xapnm]: input[_PNM],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xaoa]: [() => isSerializableHeaderValue(input[_OA]), () => (input[_OA] || []).map(__quoteHeader).join(\", \")]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_at]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectLegalHoldCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_lh]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectLockConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_ol]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectRetentionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_ret]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO],\n    [_xarp]: input[_RP]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_t]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetObjectTorrentCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_to]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_GetPublicAccessBlockCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_pAB]: [, \"\"]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_HeadBucketCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  let body;\n  b.m(\"HEAD\").h(headers).b(body);\n  return b.build();\n};\nexport const se_HeadObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_im]: input[_IM],\n    [_ims]: [() => isSerializableHeaderValue(input[_IMS]), () => __dateToUtcString(input[_IMS]).toString()],\n    [_inm]: input[_INM],\n    [_ius]: [() => isSerializableHeaderValue(input[_IUS]), () => __dateToUtcString(input[_IUS]).toString()],\n    [_ra]: input[_R],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xacm]: input[_CM]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_rcc]: [, input[_RCC]],\n    [_rcd]: [, input[_RCD]],\n    [_rce]: [, input[_RCE]],\n    [_rcl]: [, input[_RCL]],\n    [_rct]: [, input[_RCT]],\n    [_re]: [() => input.ResponseExpires !== void 0, () => __dateToUtcString(input[_RE]).toString()],\n    [_vI]: [, input[_VI]],\n    [_pN]: [() => input.PartNumber !== void 0, () => input[_PN].toString()]\n  });\n  let body;\n  b.m(\"HEAD\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListBucketAnalyticsConfigurationsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_a]: [, \"\"],\n    [_xi]: [, \"ListBucketAnalyticsConfigurations\"],\n    [_ct_]: [, input[_CTo]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListBucketIntelligentTieringConfigurationsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_it]: [, \"\"],\n    [_xi]: [, \"ListBucketIntelligentTieringConfigurations\"],\n    [_ct_]: [, input[_CTo]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListBucketInventoryConfigurationsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_in]: [, \"\"],\n    [_xi]: [, \"ListBucketInventoryConfigurations\"],\n    [_ct_]: [, input[_CTo]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListBucketMetricsConfigurationsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_m]: [, \"\"],\n    [_xi]: [, \"ListBucketMetricsConfigurations\"],\n    [_ct_]: [, input[_CTo]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListBucketsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/\");\n  const query = map({\n    [_xi]: [, \"ListBuckets\"],\n    [_mb]: [() => input.MaxBuckets !== void 0, () => input[_MB].toString()],\n    [_ct_]: [, input[_CTo]],\n    [_pr]: [, input[_P]],\n    [_br]: [, input[_BR]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListDirectoryBucketsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/\");\n  const query = map({\n    [_xi]: [, \"ListDirectoryBuckets\"],\n    [_ct_]: [, input[_CTo]],\n    [_mdb]: [() => input.MaxDirectoryBuckets !== void 0, () => input[_MDB].toString()]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListMultipartUploadsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO],\n    [_xarp]: input[_RP]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_u]: [, \"\"],\n    [_de]: [, input[_D]],\n    [_et]: [, input[_ET]],\n    [_km]: [, input[_KM]],\n    [_mu]: [() => input.MaxUploads !== void 0, () => input[_MU].toString()],\n    [_pr]: [, input[_P]],\n    [_uim]: [, input[_UIM]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListObjectsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_de]: [, input[_D]],\n    [_et]: [, input[_ET]],\n    [_ma]: [, input[_M]],\n    [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n    [_pr]: [, input[_P]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListObjectsV2Command = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_lt]: [, \"2\"],\n    [_de]: [, input[_D]],\n    [_et]: [, input[_ET]],\n    [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n    [_pr]: [, input[_P]],\n    [_ct_]: [, input[_CTo]],\n    [_fo]: [() => input.FetchOwner !== void 0, () => input[_FO].toString()],\n    [_sa]: [, input[_SA]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListObjectVersionsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xaebo]: input[_EBO],\n    [_xarp]: input[_RP],\n    [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_ver]: [, \"\"],\n    [_de]: [, input[_D]],\n    [_et]: [, input[_ET]],\n    [_km]: [, input[_KM]],\n    [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n    [_pr]: [, input[_P]],\n    [_vim]: [, input[_VIM]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_ListPartsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"ListParts\"],\n    [_mp]: [() => input.MaxParts !== void 0, () => input[_MP].toString()],\n    [_pnm]: [, input[_PNM]],\n    [_uI]: [, __expectNonNull(input[_UI], `UploadId`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketAccelerateConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaebo]: input[_EBO],\n    [_xasca]: input[_CA]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_ac]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.AccelerateConfiguration !== undefined) {\n    contents = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketAclCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaa]: input[_ACL],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagw]: input[_GW],\n    [_xagwa]: input[_GWACP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_acl]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.AccessControlPolicy !== undefined) {\n    contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketAnalyticsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_a]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  let contents;\n  if (input.AnalyticsConfiguration !== undefined) {\n    contents = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketCorsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_c]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.CORSConfiguration !== undefined) {\n    contents = se_CORSConfiguration(input.CORSConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketEncryptionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_en]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.ServerSideEncryptionConfiguration !== undefined) {\n    contents = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/xml\"\n  };\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_it]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  let contents;\n  if (input.IntelligentTieringConfiguration !== undefined) {\n    contents = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketInventoryConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_in]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  let contents;\n  if (input.InventoryConfiguration !== undefined) {\n    contents = se_InventoryConfiguration(input.InventoryConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketLifecycleConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO],\n    [_xatdmos]: input[_TDMOS]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_l]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.LifecycleConfiguration !== undefined) {\n    contents = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n    contents = contents.n(\"LifecycleConfiguration\");\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketLoggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_log]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.BucketLoggingStatus !== undefined) {\n    contents = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketMetricsConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_m]: [, \"\"],\n    [_i]: [, __expectNonNull(input[_I], `Id`)]\n  });\n  let body;\n  let contents;\n  if (input.MetricsConfiguration !== undefined) {\n    contents = se_MetricsConfiguration(input.MetricsConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketNotificationConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaebo]: input[_EBO],\n    [_xasdv]: [() => isSerializableHeaderValue(input[_SDV]), () => input[_SDV].toString()]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_n]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.NotificationConfiguration !== undefined) {\n    contents = se_NotificationConfiguration(input.NotificationConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketOwnershipControlsCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_oC]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.OwnershipControls !== undefined) {\n    contents = se_OwnershipControls(input.OwnershipControls, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketPolicyCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"text/plain\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xacrsba]: [() => isSerializableHeaderValue(input[_CRSBA]), () => input[_CRSBA].toString()],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_p]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.Policy !== undefined) {\n    contents = input.Policy;\n    body = contents;\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketReplicationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xabolt]: input[_To],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_r]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.ReplicationConfiguration !== undefined) {\n    contents = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketRequestPaymentCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_rP]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.RequestPaymentConfiguration !== undefined) {\n    contents = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_t]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.Tagging !== undefined) {\n    contents = se_Tagging(input.Tagging, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketVersioningCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xam]: input[_MFA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_v]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.VersioningConfiguration !== undefined) {\n    contents = se_VersioningConfiguration(input.VersioningConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutBucketWebsiteCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_w]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.WebsiteConfiguration !== undefined) {\n    contents = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_ct]: input[_CT] || \"application/octet-stream\",\n    [_xaa]: input[_ACL],\n    [_cc]: input[_CC],\n    [_cd]: input[_CD],\n    [_ce]: input[_CE],\n    [_cl]: input[_CL],\n    [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xacc]: input[_CCRC],\n    [_xacc_]: input[_CCRCC],\n    [_xacs]: input[_CSHA],\n    [_xacs_]: input[_CSHAh],\n    [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n    [_inm]: input[_INM],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagwa]: input[_GWACP],\n    [_xasse]: input[_SSE],\n    [_xasc]: input[_SC],\n    [_xawrl]: input[_WRL],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xasseakki]: input[_SSEKMSKI],\n    [_xassec]: input[_SSEKMSEC],\n    [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n    [_xarp]: input[_RP],\n    [_xat]: input[_T],\n    [_xaolm]: input[_OLM],\n    [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n    [_xaollh]: input[_OLLHS],\n    [_xaebo]: input[_EBO],\n    ...(input.Metadata !== undefined && Object.keys(input.Metadata).reduce((acc, suffix) => {\n      acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n      return acc;\n    }, {}))\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"PutObject\"]\n  });\n  let body;\n  let contents;\n  if (input.Body !== undefined) {\n    contents = input.Body;\n    body = contents;\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectAclCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xaa]: input[_ACL],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xagfc]: input[_GFC],\n    [_xagr]: input[_GR],\n    [_xagra]: input[_GRACP],\n    [_xagw]: input[_GW],\n    [_xagwa]: input[_GWACP],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_acl]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  let contents;\n  if (input.AccessControlPolicy !== undefined) {\n    contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectLegalHoldCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xarp]: input[_RP],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_lh]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  let contents;\n  if (input.LegalHold !== undefined) {\n    contents = se_ObjectLockLegalHold(input.LegalHold, context);\n    contents = contents.n(\"LegalHold\");\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectLockConfigurationCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xarp]: input[_RP],\n    [_xabolt]: input[_To],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_ol]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.ObjectLockConfiguration !== undefined) {\n    contents = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectRetentionCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xarp]: input[_RP],\n    [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_ret]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  let contents;\n  if (input.Retention !== undefined) {\n    contents = se_ObjectLockRetention(input.Retention, context);\n    contents = contents.n(\"Retention\");\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutObjectTaggingCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO],\n    [_xarp]: input[_RP]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_t]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  let contents;\n  if (input.Tagging !== undefined) {\n    contents = se_Tagging(input.Tagging, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_PutPublicAccessBlockCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  const query = map({\n    [_pAB]: [, \"\"]\n  });\n  let body;\n  let contents;\n  if (input.PublicAccessBlockConfiguration !== undefined) {\n    contents = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_RestoreObjectCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xarp]: input[_RP],\n    [_xasca]: input[_CA],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_res]: [, \"\"],\n    [_vI]: [, input[_VI]]\n  });\n  let body;\n  let contents;\n  if (input.RestoreRequest !== undefined) {\n    contents = se_RestoreRequest(input.RestoreRequest, context);\n    body = _ve;\n    contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_SelectObjectContentCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/xml\",\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_se]: [, \"\"],\n    [_st]: [, \"2\"]\n  });\n  let body;\n  body = _ve;\n  const bn = new __XmlNode(_SOCR);\n  bn.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n  bn.cc(input, _Ex);\n  bn.cc(input, _ETx);\n  if (input[_IS] != null) {\n    bn.c(se_InputSerialization(input[_IS], context).n(_IS));\n  }\n  if (input[_OS] != null) {\n    bn.c(se_OutputSerialization(input[_OS], context).n(_OS));\n  }\n  if (input[_RPe] != null) {\n    bn.c(se_RequestProgress(input[_RPe], context).n(_RPe));\n  }\n  if (input[_SR] != null) {\n    bn.c(se_ScanRange(input[_SR], context).n(_SR));\n  }\n  body += bn.toString();\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_UploadPartCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"content-type\": \"application/octet-stream\",\n    [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n    [_cm]: input[_CMD],\n    [_xasca]: input[_CA],\n    [_xacc]: input[_CCRC],\n    [_xacc_]: input[_CCRCC],\n    [_xacs]: input[_CSHA],\n    [_xacs_]: input[_CSHAh],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"UploadPart\"],\n    [_pN]: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input[_PN].toString()],\n    [_uI]: [, __expectNonNull(input[_UI], `UploadId`)]\n  });\n  let body;\n  let contents;\n  if (input.Body !== undefined) {\n    contents = input.Body;\n    body = contents;\n  }\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_UploadPartCopyCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_xacs__]: input[_CS],\n    [_xacsim]: input[_CSIM],\n    [_xacsims]: [() => isSerializableHeaderValue(input[_CSIMS]), () => __dateToUtcString(input[_CSIMS]).toString()],\n    [_xacsinm]: input[_CSINM],\n    [_xacsius]: [() => isSerializableHeaderValue(input[_CSIUS]), () => __dateToUtcString(input[_CSIUS]).toString()],\n    [_xacsr]: input[_CSR],\n    [_xasseca]: input[_SSECA],\n    [_xasseck]: input[_SSECK],\n    [_xasseckm]: input[_SSECKMD],\n    [_xacssseca]: input[_CSSSECA],\n    [_xacssseck]: input[_CSSSECK],\n    [_xacssseckm]: input[_CSSSECKMD],\n    [_xarp]: input[_RP],\n    [_xaebo]: input[_EBO],\n    [_xasebo]: input[_ESBO]\n  });\n  b.bp(\"/{Key+}\");\n  b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n  b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n  const query = map({\n    [_xi]: [, \"UploadPartCopy\"],\n    [_pN]: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input[_PN].toString()],\n    [_uI]: [, __expectNonNull(input[_UI], `UploadId`)]\n  });\n  let body;\n  b.m(\"PUT\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_WriteGetObjectResponseCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n    \"content-type\": \"application/octet-stream\",\n    [_xarr]: input[_RR],\n    [_xart]: input[_RT],\n    [_xafs]: [() => isSerializableHeaderValue(input[_SCt]), () => input[_SCt].toString()],\n    [_xafec]: input[_EC],\n    [_xafem]: input[_EM],\n    [_xafhar]: input[_AR],\n    [_xafhcc]: input[_CC],\n    [_xafhcd]: input[_CD],\n    [_xafhce]: input[_CE],\n    [_xafhcl]: input[_CL],\n    [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n    [_xafhcr]: input[_CR],\n    [_xafhct]: input[_CT],\n    [_xafhxacc]: input[_CCRC],\n    [_xafhxacc_]: input[_CCRCC],\n    [_xafhxacs]: input[_CSHA],\n    [_xafhxacs_]: input[_CSHAh],\n    [_xafhxadm]: [() => isSerializableHeaderValue(input[_DM]), () => input[_DM].toString()],\n    [_xafhe]: input[_ETa],\n    [_xafhe_]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n    [_xafhxae]: input[_Exp],\n    [_xafhlm]: [() => isSerializableHeaderValue(input[_LM]), () => __dateToUtcString(input[_LM]).toString()],\n    [_xafhxamm]: [() => isSerializableHeaderValue(input[_MM]), () => input[_MM].toString()],\n    [_xafhxaolm]: input[_OLM],\n    [_xafhxaollh]: input[_OLLHS],\n    [_xafhxaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n    [_xafhxampc]: [() => isSerializableHeaderValue(input[_PC]), () => input[_PC].toString()],\n    [_xafhxars]: input[_RS],\n    [_xafhxarc]: input[_RC],\n    [_xafhxar]: input[_Re],\n    [_xafhxasse]: input[_SSE],\n    [_xafhxasseca]: input[_SSECA],\n    [_xafhxasseakki]: input[_SSEKMSKI],\n    [_xafhxasseckm]: input[_SSECKMD],\n    [_xafhxasc]: input[_SC],\n    [_xafhxatc]: [() => isSerializableHeaderValue(input[_TC]), () => input[_TC].toString()],\n    [_xafhxavi]: input[_VI],\n    [_xafhxassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n    ...(input.Metadata !== undefined && Object.keys(input.Metadata).reduce((acc, suffix) => {\n      acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n      return acc;\n    }, {}))\n  });\n  b.bp(\"/WriteGetObjectResponse\");\n  let body;\n  let contents;\n  if (input.Body !== undefined) {\n    contents = input.Body;\n    body = contents;\n  }\n  let {\n    hostname: resolvedHostname\n  } = await context.endpoint();\n  if (context.disableHostPrefix !== true) {\n    resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n    if (input.RequestRoute === undefined) {\n      throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n    }\n    resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n    if (!__isValidHostname(resolvedHostname)) {\n      throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n    }\n  }\n  b.hn(resolvedHostname);\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const de_AbortMultipartUploadCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_CompleteMultipartUploadCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_Exp]: [, output.headers[_xae]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_VI]: [, output.headers[_xavi]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_B] != null) {\n    contents[_B] = __expectString(data[_B]);\n  }\n  if (data[_CCRC] != null) {\n    contents[_CCRC] = __expectString(data[_CCRC]);\n  }\n  if (data[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(data[_CCRCC]);\n  }\n  if (data[_CSHA] != null) {\n    contents[_CSHA] = __expectString(data[_CSHA]);\n  }\n  if (data[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(data[_CSHAh]);\n  }\n  if (data[_ETa] != null) {\n    contents[_ETa] = __expectString(data[_ETa]);\n  }\n  if (data[_K] != null) {\n    contents[_K] = __expectString(data[_K]);\n  }\n  if (data[_L] != null) {\n    contents[_L] = __expectString(data[_L]);\n  }\n  return contents;\n};\nexport const de_CopyObjectCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_Exp]: [, output.headers[_xae]],\n    [_CSVI]: [, output.headers[_xacsvi]],\n    [_VI]: [, output.headers[_xavi]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_SSEKMSEC]: [, output.headers[_xassec]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.CopyObjectResult = de_CopyObjectResult(data, context);\n  return contents;\n};\nexport const de_CreateBucketCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_L]: [, output.headers[_lo]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_CreateMultipartUploadCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_AD]: [() => void 0 !== output.headers[_xaad], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_xaad]))],\n    [_ARI]: [, output.headers[_xaari]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_SSEKMSEC]: [, output.headers[_xassec]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]],\n    [_CA]: [, output.headers[_xaca]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_B] != null) {\n    contents[_B] = __expectString(data[_B]);\n  }\n  if (data[_K] != null) {\n    contents[_K] = __expectString(data[_K]);\n  }\n  if (data[_UI] != null) {\n    contents[_UI] = __expectString(data[_UI]);\n  }\n  return contents;\n};\nexport const de_CreateSessionCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_SSEKMSEC]: [, output.headers[_xassec]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_C] != null) {\n    contents[_C] = de_SessionCredentials(data[_C], context);\n  }\n  return contents;\n};\nexport const de_DeleteBucketCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketAnalyticsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketCorsCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketEncryptionCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketInventoryConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketLifecycleCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketMetricsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketOwnershipControlsCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketPolicyCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketReplicationCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteBucketWebsiteCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteObjectCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n    [_VI]: [, output.headers[_xavi]],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeleteObjectsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.Deleted === \"\") {\n    contents[_De] = [];\n  } else if (data[_De] != null) {\n    contents[_De] = de_DeletedObjects(__getArrayIfSingleItem(data[_De]), context);\n  }\n  if (data.Error === \"\") {\n    contents[_Err] = [];\n  } else if (data[_Er] != null) {\n    contents[_Err] = de_Errors(__getArrayIfSingleItem(data[_Er]), context);\n  }\n  return contents;\n};\nexport const de_DeleteObjectTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_VI]: [, output.headers[_xavi]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_DeletePublicAccessBlockCommand = async (output, context) => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_GetBucketAccelerateConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_S] != null) {\n    contents[_S] = __expectString(data[_S]);\n  }\n  return contents;\n};\nexport const de_GetBucketAclCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.AccessControlList === \"\") {\n    contents[_Gr] = [];\n  } else if (data[_ACLc] != null && data[_ACLc][_G] != null) {\n    contents[_Gr] = de_Grants(__getArrayIfSingleItem(data[_ACLc][_G]), context);\n  }\n  if (data[_O] != null) {\n    contents[_O] = de_Owner(data[_O], context);\n  }\n  return contents;\n};\nexport const de_GetBucketAnalyticsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.AnalyticsConfiguration = de_AnalyticsConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketCorsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.CORSRule === \"\") {\n    contents[_CORSRu] = [];\n  } else if (data[_CORSR] != null) {\n    contents[_CORSRu] = de_CORSRules(__getArrayIfSingleItem(data[_CORSR]), context);\n  }\n  return contents;\n};\nexport const de_GetBucketEncryptionCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.ServerSideEncryptionConfiguration = de_ServerSideEncryptionConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.IntelligentTieringConfiguration = de_IntelligentTieringConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketInventoryConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.InventoryConfiguration = de_InventoryConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketLifecycleConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_TDMOS]: [, output.headers[_xatdmos]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.Rule === \"\") {\n    contents[_Rul] = [];\n  } else if (data[_Ru] != null) {\n    contents[_Rul] = de_LifecycleRules(__getArrayIfSingleItem(data[_Ru]), context);\n  }\n  return contents;\n};\nexport const de_GetBucketLocationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_LC] != null) {\n    contents[_LC] = __expectString(data[_LC]);\n  }\n  return contents;\n};\nexport const de_GetBucketLoggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_LE] != null) {\n    contents[_LE] = de_LoggingEnabled(data[_LE], context);\n  }\n  return contents;\n};\nexport const de_GetBucketMetricsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.MetricsConfiguration = de_MetricsConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketNotificationConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_EBC] != null) {\n    contents[_EBC] = de_EventBridgeConfiguration(data[_EBC], context);\n  }\n  if (data.CloudFunctionConfiguration === \"\") {\n    contents[_LFC] = [];\n  } else if (data[_CFC] != null) {\n    contents[_LFC] = de_LambdaFunctionConfigurationList(__getArrayIfSingleItem(data[_CFC]), context);\n  }\n  if (data.QueueConfiguration === \"\") {\n    contents[_QCu] = [];\n  } else if (data[_QC] != null) {\n    contents[_QCu] = de_QueueConfigurationList(__getArrayIfSingleItem(data[_QC]), context);\n  }\n  if (data.TopicConfiguration === \"\") {\n    contents[_TCop] = [];\n  } else if (data[_TCo] != null) {\n    contents[_TCop] = de_TopicConfigurationList(__getArrayIfSingleItem(data[_TCo]), context);\n  }\n  return contents;\n};\nexport const de_GetBucketOwnershipControlsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.OwnershipControls = de_OwnershipControls(data, context);\n  return contents;\n};\nexport const de_GetBucketPolicyCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = await collectBodyString(output.body, context);\n  contents.Policy = __expectString(data);\n  return contents;\n};\nexport const de_GetBucketPolicyStatusCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.PolicyStatus = de_PolicyStatus(data, context);\n  return contents;\n};\nexport const de_GetBucketReplicationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.ReplicationConfiguration = de_ReplicationConfiguration(data, context);\n  return contents;\n};\nexport const de_GetBucketRequestPaymentCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_Pa] != null) {\n    contents[_Pa] = __expectString(data[_Pa]);\n  }\n  return contents;\n};\nexport const de_GetBucketTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.TagSet === \"\") {\n    contents[_TS] = [];\n  } else if (data[_TS] != null && data[_TS][_Ta] != null) {\n    contents[_TS] = de_TagSet(__getArrayIfSingleItem(data[_TS][_Ta]), context);\n  }\n  return contents;\n};\nexport const de_GetBucketVersioningCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_MDf] != null) {\n    contents[_MFAD] = __expectString(data[_MDf]);\n  }\n  if (data[_S] != null) {\n    contents[_S] = __expectString(data[_S]);\n  }\n  return contents;\n};\nexport const de_GetBucketWebsiteCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_ED] != null) {\n    contents[_ED] = de_ErrorDocument(data[_ED], context);\n  }\n  if (data[_ID] != null) {\n    contents[_ID] = de_IndexDocument(data[_ID], context);\n  }\n  if (data[_RART] != null) {\n    contents[_RART] = de_RedirectAllRequestsTo(data[_RART], context);\n  }\n  if (data.RoutingRules === \"\") {\n    contents[_RRo] = [];\n  } else if (data[_RRo] != null && data[_RRo][_RRou] != null) {\n    contents[_RRo] = de_RoutingRules(__getArrayIfSingleItem(data[_RRo][_RRou]), context);\n  }\n  return contents;\n};\nexport const de_GetObjectCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n    [_AR]: [, output.headers[_ar]],\n    [_Exp]: [, output.headers[_xae]],\n    [_Re]: [, output.headers[_xar]],\n    [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n    [_CLo]: [() => void 0 !== output.headers[_cl_], () => __strictParseLong(output.headers[_cl_])],\n    [_ETa]: [, output.headers[_eta]],\n    [_CCRC]: [, output.headers[_xacc]],\n    [_CCRCC]: [, output.headers[_xacc_]],\n    [_CSHA]: [, output.headers[_xacs]],\n    [_CSHAh]: [, output.headers[_xacs_]],\n    [_MM]: [() => void 0 !== output.headers[_xamm], () => __strictParseInt32(output.headers[_xamm])],\n    [_VI]: [, output.headers[_xavi]],\n    [_CC]: [, output.headers[_cc]],\n    [_CD]: [, output.headers[_cd]],\n    [_CE]: [, output.headers[_ce]],\n    [_CL]: [, output.headers[_cl]],\n    [_CR]: [, output.headers[_cr]],\n    [_CT]: [, output.headers[_ct]],\n    [_E]: [() => void 0 !== output.headers[_e], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_e]))],\n    [_ES]: [, output.headers[_ex]],\n    [_WRL]: [, output.headers[_xawrl]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_SC]: [, output.headers[_xasc]],\n    [_RC]: [, output.headers[_xarc]],\n    [_RS]: [, output.headers[_xars]],\n    [_PC]: [() => void 0 !== output.headers[_xampc], () => __strictParseInt32(output.headers[_xampc])],\n    [_TC]: [() => void 0 !== output.headers[_xatc], () => __strictParseInt32(output.headers[_xatc])],\n    [_OLM]: [, output.headers[_xaolm]],\n    [_OLRUD]: [() => void 0 !== output.headers[_xaolrud], () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[_xaolrud]))],\n    [_OLLHS]: [, output.headers[_xaollh]],\n    Metadata: [, Object.keys(output.headers).filter(header => header.startsWith(\"x-amz-meta-\")).reduce((acc, header) => {\n      acc[header.substring(11)] = output.headers[header];\n      return acc;\n    }, {})]\n  });\n  const data = output.body;\n  context.sdkStreamMixin(data);\n  contents.Body = data;\n  return contents;\n};\nexport const de_GetObjectAclCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.AccessControlList === \"\") {\n    contents[_Gr] = [];\n  } else if (data[_ACLc] != null && data[_ACLc][_G] != null) {\n    contents[_Gr] = de_Grants(__getArrayIfSingleItem(data[_ACLc][_G]), context);\n  }\n  if (data[_O] != null) {\n    contents[_O] = de_Owner(data[_O], context);\n  }\n  return contents;\n};\nexport const de_GetObjectAttributesCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n    [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n    [_VI]: [, output.headers[_xavi]],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_Ch] != null) {\n    contents[_Ch] = de_Checksum(data[_Ch], context);\n  }\n  if (data[_ETa] != null) {\n    contents[_ETa] = __expectString(data[_ETa]);\n  }\n  if (data[_OP] != null) {\n    contents[_OP] = de_GetObjectAttributesParts(data[_OP], context);\n  }\n  if (data[_OSb] != null) {\n    contents[_OSb] = __strictParseLong(data[_OSb]);\n  }\n  if (data[_SC] != null) {\n    contents[_SC] = __expectString(data[_SC]);\n  }\n  return contents;\n};\nexport const de_GetObjectLegalHoldCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.LegalHold = de_ObjectLockLegalHold(data, context);\n  return contents;\n};\nexport const de_GetObjectLockConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.ObjectLockConfiguration = de_ObjectLockConfiguration(data, context);\n  return contents;\n};\nexport const de_GetObjectRetentionCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.Retention = de_ObjectLockRetention(data, context);\n  return contents;\n};\nexport const de_GetObjectTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_VI]: [, output.headers[_xavi]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.TagSet === \"\") {\n    contents[_TS] = [];\n  } else if (data[_TS] != null && data[_TS][_Ta] != null) {\n    contents[_TS] = de_TagSet(__getArrayIfSingleItem(data[_TS][_Ta]), context);\n  }\n  return contents;\n};\nexport const de_GetObjectTorrentCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = output.body;\n  context.sdkStreamMixin(data);\n  contents.Body = data;\n  return contents;\n};\nexport const de_GetPublicAccessBlockCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.PublicAccessBlockConfiguration = de_PublicAccessBlockConfiguration(data, context);\n  return contents;\n};\nexport const de_HeadBucketCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_BLT]: [, output.headers[_xablt]],\n    [_BLN]: [, output.headers[_xabln]],\n    [_BR]: [, output.headers[_xabr]],\n    [_APA]: [() => void 0 !== output.headers[_xaapa], () => __parseBoolean(output.headers[_xaapa])]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_HeadObjectCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n    [_AR]: [, output.headers[_ar]],\n    [_Exp]: [, output.headers[_xae]],\n    [_Re]: [, output.headers[_xar]],\n    [_AS]: [, output.headers[_xaas]],\n    [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n    [_CLo]: [() => void 0 !== output.headers[_cl_], () => __strictParseLong(output.headers[_cl_])],\n    [_CCRC]: [, output.headers[_xacc]],\n    [_CCRCC]: [, output.headers[_xacc_]],\n    [_CSHA]: [, output.headers[_xacs]],\n    [_CSHAh]: [, output.headers[_xacs_]],\n    [_ETa]: [, output.headers[_eta]],\n    [_MM]: [() => void 0 !== output.headers[_xamm], () => __strictParseInt32(output.headers[_xamm])],\n    [_VI]: [, output.headers[_xavi]],\n    [_CC]: [, output.headers[_cc]],\n    [_CD]: [, output.headers[_cd]],\n    [_CE]: [, output.headers[_ce]],\n    [_CL]: [, output.headers[_cl]],\n    [_CT]: [, output.headers[_ct]],\n    [_E]: [() => void 0 !== output.headers[_e], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_e]))],\n    [_ES]: [, output.headers[_ex]],\n    [_WRL]: [, output.headers[_xawrl]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_SC]: [, output.headers[_xasc]],\n    [_RC]: [, output.headers[_xarc]],\n    [_RS]: [, output.headers[_xars]],\n    [_PC]: [() => void 0 !== output.headers[_xampc], () => __strictParseInt32(output.headers[_xampc])],\n    [_OLM]: [, output.headers[_xaolm]],\n    [_OLRUD]: [() => void 0 !== output.headers[_xaolrud], () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[_xaolrud]))],\n    [_OLLHS]: [, output.headers[_xaollh]],\n    Metadata: [, Object.keys(output.headers).filter(header => header.startsWith(\"x-amz-meta-\")).reduce((acc, header) => {\n      acc[header.substring(11)] = output.headers[header];\n      return acc;\n    }, {})]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_ListBucketAnalyticsConfigurationsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.AnalyticsConfiguration === \"\") {\n    contents[_ACLn] = [];\n  } else if (data[_AC] != null) {\n    contents[_ACLn] = de_AnalyticsConfigurationList(__getArrayIfSingleItem(data[_AC]), context);\n  }\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_NCT] != null) {\n    contents[_NCT] = __expectString(data[_NCT]);\n  }\n  return contents;\n};\nexport const de_ListBucketIntelligentTieringConfigurationsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data.IntelligentTieringConfiguration === \"\") {\n    contents[_ITCL] = [];\n  } else if (data[_ITC] != null) {\n    contents[_ITCL] = de_IntelligentTieringConfigurationList(__getArrayIfSingleItem(data[_ITC]), context);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_NCT] != null) {\n    contents[_NCT] = __expectString(data[_NCT]);\n  }\n  return contents;\n};\nexport const de_ListBucketInventoryConfigurationsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data.InventoryConfiguration === \"\") {\n    contents[_ICL] = [];\n  } else if (data[_IC] != null) {\n    contents[_ICL] = de_InventoryConfigurationList(__getArrayIfSingleItem(data[_IC]), context);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_NCT] != null) {\n    contents[_NCT] = __expectString(data[_NCT]);\n  }\n  return contents;\n};\nexport const de_ListBucketMetricsConfigurationsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data.MetricsConfiguration === \"\") {\n    contents[_MCL] = [];\n  } else if (data[_MC] != null) {\n    contents[_MCL] = de_MetricsConfigurationList(__getArrayIfSingleItem(data[_MC]), context);\n  }\n  if (data[_NCT] != null) {\n    contents[_NCT] = __expectString(data[_NCT]);\n  }\n  return contents;\n};\nexport const de_ListBucketsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.Buckets === \"\") {\n    contents[_Bu] = [];\n  } else if (data[_Bu] != null && data[_Bu][_B] != null) {\n    contents[_Bu] = de_Buckets(__getArrayIfSingleItem(data[_Bu][_B]), context);\n  }\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data[_O] != null) {\n    contents[_O] = de_Owner(data[_O], context);\n  }\n  if (data[_P] != null) {\n    contents[_P] = __expectString(data[_P]);\n  }\n  return contents;\n};\nexport const de_ListDirectoryBucketsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.Buckets === \"\") {\n    contents[_Bu] = [];\n  } else if (data[_Bu] != null && data[_Bu][_B] != null) {\n    contents[_Bu] = de_Buckets(__getArrayIfSingleItem(data[_Bu][_B]), context);\n  }\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  return contents;\n};\nexport const de_ListMultipartUploadsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_B] != null) {\n    contents[_B] = __expectString(data[_B]);\n  }\n  if (data.CommonPrefixes === \"\") {\n    contents[_CP] = [];\n  } else if (data[_CP] != null) {\n    contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n  }\n  if (data[_D] != null) {\n    contents[_D] = __expectString(data[_D]);\n  }\n  if (data[_ET] != null) {\n    contents[_ET] = __expectString(data[_ET]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_KM] != null) {\n    contents[_KM] = __expectString(data[_KM]);\n  }\n  if (data[_MU] != null) {\n    contents[_MU] = __strictParseInt32(data[_MU]);\n  }\n  if (data[_NKM] != null) {\n    contents[_NKM] = __expectString(data[_NKM]);\n  }\n  if (data[_NUIM] != null) {\n    contents[_NUIM] = __expectString(data[_NUIM]);\n  }\n  if (data[_P] != null) {\n    contents[_P] = __expectString(data[_P]);\n  }\n  if (data[_UIM] != null) {\n    contents[_UIM] = __expectString(data[_UIM]);\n  }\n  if (data.Upload === \"\") {\n    contents[_Up] = [];\n  } else if (data[_U] != null) {\n    contents[_Up] = de_MultipartUploadList(__getArrayIfSingleItem(data[_U]), context);\n  }\n  return contents;\n};\nexport const de_ListObjectsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.CommonPrefixes === \"\") {\n    contents[_CP] = [];\n  } else if (data[_CP] != null) {\n    contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n  }\n  if (data.Contents === \"\") {\n    contents[_Co] = [];\n  } else if (data[_Co] != null) {\n    contents[_Co] = de_ObjectList(__getArrayIfSingleItem(data[_Co]), context);\n  }\n  if (data[_D] != null) {\n    contents[_D] = __expectString(data[_D]);\n  }\n  if (data[_ET] != null) {\n    contents[_ET] = __expectString(data[_ET]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_M] != null) {\n    contents[_M] = __expectString(data[_M]);\n  }\n  if (data[_MK] != null) {\n    contents[_MK] = __strictParseInt32(data[_MK]);\n  }\n  if (data[_N] != null) {\n    contents[_N] = __expectString(data[_N]);\n  }\n  if (data[_NM] != null) {\n    contents[_NM] = __expectString(data[_NM]);\n  }\n  if (data[_P] != null) {\n    contents[_P] = __expectString(data[_P]);\n  }\n  return contents;\n};\nexport const de_ListObjectsV2Command = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.CommonPrefixes === \"\") {\n    contents[_CP] = [];\n  } else if (data[_CP] != null) {\n    contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n  }\n  if (data.Contents === \"\") {\n    contents[_Co] = [];\n  } else if (data[_Co] != null) {\n    contents[_Co] = de_ObjectList(__getArrayIfSingleItem(data[_Co]), context);\n  }\n  if (data[_CTo] != null) {\n    contents[_CTo] = __expectString(data[_CTo]);\n  }\n  if (data[_D] != null) {\n    contents[_D] = __expectString(data[_D]);\n  }\n  if (data[_ET] != null) {\n    contents[_ET] = __expectString(data[_ET]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_KC] != null) {\n    contents[_KC] = __strictParseInt32(data[_KC]);\n  }\n  if (data[_MK] != null) {\n    contents[_MK] = __strictParseInt32(data[_MK]);\n  }\n  if (data[_N] != null) {\n    contents[_N] = __expectString(data[_N]);\n  }\n  if (data[_NCT] != null) {\n    contents[_NCT] = __expectString(data[_NCT]);\n  }\n  if (data[_P] != null) {\n    contents[_P] = __expectString(data[_P]);\n  }\n  if (data[_SA] != null) {\n    contents[_SA] = __expectString(data[_SA]);\n  }\n  return contents;\n};\nexport const de_ListObjectVersionsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.CommonPrefixes === \"\") {\n    contents[_CP] = [];\n  } else if (data[_CP] != null) {\n    contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n  }\n  if (data.DeleteMarker === \"\") {\n    contents[_DMe] = [];\n  } else if (data[_DM] != null) {\n    contents[_DMe] = de_DeleteMarkers(__getArrayIfSingleItem(data[_DM]), context);\n  }\n  if (data[_D] != null) {\n    contents[_D] = __expectString(data[_D]);\n  }\n  if (data[_ET] != null) {\n    contents[_ET] = __expectString(data[_ET]);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_KM] != null) {\n    contents[_KM] = __expectString(data[_KM]);\n  }\n  if (data[_MK] != null) {\n    contents[_MK] = __strictParseInt32(data[_MK]);\n  }\n  if (data[_N] != null) {\n    contents[_N] = __expectString(data[_N]);\n  }\n  if (data[_NKM] != null) {\n    contents[_NKM] = __expectString(data[_NKM]);\n  }\n  if (data[_NVIM] != null) {\n    contents[_NVIM] = __expectString(data[_NVIM]);\n  }\n  if (data[_P] != null) {\n    contents[_P] = __expectString(data[_P]);\n  }\n  if (data[_VIM] != null) {\n    contents[_VIM] = __expectString(data[_VIM]);\n  }\n  if (data.Version === \"\") {\n    contents[_Ve] = [];\n  } else if (data[_V] != null) {\n    contents[_Ve] = de_ObjectVersionList(__getArrayIfSingleItem(data[_V]), context);\n  }\n  return contents;\n};\nexport const de_ListPartsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_AD]: [() => void 0 !== output.headers[_xaad], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_xaad]))],\n    [_ARI]: [, output.headers[_xaari]],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data[_B] != null) {\n    contents[_B] = __expectString(data[_B]);\n  }\n  if (data[_CA] != null) {\n    contents[_CA] = __expectString(data[_CA]);\n  }\n  if (data[_In] != null) {\n    contents[_In] = de_Initiator(data[_In], context);\n  }\n  if (data[_IT] != null) {\n    contents[_IT] = __parseBoolean(data[_IT]);\n  }\n  if (data[_K] != null) {\n    contents[_K] = __expectString(data[_K]);\n  }\n  if (data[_MP] != null) {\n    contents[_MP] = __strictParseInt32(data[_MP]);\n  }\n  if (data[_NPNM] != null) {\n    contents[_NPNM] = __expectString(data[_NPNM]);\n  }\n  if (data[_O] != null) {\n    contents[_O] = de_Owner(data[_O], context);\n  }\n  if (data[_PNM] != null) {\n    contents[_PNM] = __expectString(data[_PNM]);\n  }\n  if (data.Part === \"\") {\n    contents[_Part] = [];\n  } else if (data[_Par] != null) {\n    contents[_Part] = de_Parts(__getArrayIfSingleItem(data[_Par]), context);\n  }\n  if (data[_SC] != null) {\n    contents[_SC] = __expectString(data[_SC]);\n  }\n  if (data[_UI] != null) {\n    contents[_UI] = __expectString(data[_UI]);\n  }\n  return contents;\n};\nexport const de_PutBucketAccelerateConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketAclCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketAnalyticsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketCorsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketEncryptionCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketInventoryConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketLifecycleConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_TDMOS]: [, output.headers[_xatdmos]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketLoggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketMetricsConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketNotificationConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketOwnershipControlsCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketPolicyCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketReplicationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketRequestPaymentCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketVersioningCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutBucketWebsiteCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_Exp]: [, output.headers[_xae]],\n    [_ETa]: [, output.headers[_eta]],\n    [_CCRC]: [, output.headers[_xacc]],\n    [_CCRCC]: [, output.headers[_xacc_]],\n    [_CSHA]: [, output.headers[_xacs]],\n    [_CSHAh]: [, output.headers[_xacs_]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_VI]: [, output.headers[_xavi]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_SSEKMSEC]: [, output.headers[_xassec]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectAclCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectLegalHoldCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectLockConfigurationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectRetentionCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutObjectTaggingCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_VI]: [, output.headers[_xavi]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_PutPublicAccessBlockCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_RestoreObjectCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_RC]: [, output.headers[_xarc]],\n    [_ROP]: [, output.headers[_xarop]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_SelectObjectContentCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = output.body;\n  contents.Payload = de_SelectObjectContentEventStream(data, context);\n  return contents;\n};\nexport const de_UploadPartCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_SSE]: [, output.headers[_xasse]],\n    [_ETa]: [, output.headers[_eta]],\n    [_CCRC]: [, output.headers[_xacc]],\n    [_CCRCC]: [, output.headers[_xacc_]],\n    [_CSHA]: [, output.headers[_xacs]],\n    [_CSHAh]: [, output.headers[_xacs_]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nexport const de_UploadPartCopyCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_CSVI]: [, output.headers[_xacsvi]],\n    [_SSE]: [, output.headers[_xasse]],\n    [_SSECA]: [, output.headers[_xasseca]],\n    [_SSECKMD]: [, output.headers[_xasseckm]],\n    [_SSEKMSKI]: [, output.headers[_xasseakki]],\n    [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    [_RC]: [, output.headers[_xarc]]\n  });\n  const data = __expectObject(await parseBody(output.body, context));\n  contents.CopyPartResult = de_CopyPartResult(data, context);\n  return contents;\n};\nexport const de_WriteGetObjectResponseCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  await collectBody(output.body, context);\n  return contents;\n};\nconst de_CommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchUpload\":\n    case \"com.amazonaws.s3#NoSuchUpload\":\n      throw await de_NoSuchUploadRes(parsedOutput, context);\n    case \"ObjectNotInActiveTierError\":\n    case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n      throw await de_ObjectNotInActiveTierErrorRes(parsedOutput, context);\n    case \"BucketAlreadyExists\":\n    case \"com.amazonaws.s3#BucketAlreadyExists\":\n      throw await de_BucketAlreadyExistsRes(parsedOutput, context);\n    case \"BucketAlreadyOwnedByYou\":\n    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n      throw await de_BucketAlreadyOwnedByYouRes(parsedOutput, context);\n    case \"NoSuchBucket\":\n    case \"com.amazonaws.s3#NoSuchBucket\":\n      throw await de_NoSuchBucketRes(parsedOutput, context);\n    case \"InvalidObjectState\":\n    case \"com.amazonaws.s3#InvalidObjectState\":\n      throw await de_InvalidObjectStateRes(parsedOutput, context);\n    case \"NoSuchKey\":\n    case \"com.amazonaws.s3#NoSuchKey\":\n      throw await de_NoSuchKeyRes(parsedOutput, context);\n    case \"NotFound\":\n    case \"com.amazonaws.s3#NotFound\":\n      throw await de_NotFoundRes(parsedOutput, context);\n    case \"ObjectAlreadyInActiveTierError\":\n    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n      throw await de_ObjectAlreadyInActiveTierErrorRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_BucketAlreadyExistsRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new BucketAlreadyExists({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_BucketAlreadyOwnedByYouRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new BucketAlreadyOwnedByYou({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidObjectStateRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data[_AT] != null) {\n    contents[_AT] = __expectString(data[_AT]);\n  }\n  if (data[_SC] != null) {\n    contents[_SC] = __expectString(data[_SC]);\n  }\n  const exception = new InvalidObjectState({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchBucketRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new NoSuchBucket({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchKeyRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new NoSuchKey({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchUploadRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new NoSuchUpload({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NotFoundRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new NotFound({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectAlreadyInActiveTierErrorRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new ObjectAlreadyInActiveTierError({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectNotInActiveTierErrorRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const exception = new ObjectNotInActiveTierError({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SelectObjectContentEventStream = (output, context) => {\n  return context.eventStreamMarshaller.deserialize(output, async event => {\n    if (event[\"Records\"] != null) {\n      return {\n        Records: await de_RecordsEvent_event(event[\"Records\"], context)\n      };\n    }\n    if (event[\"Stats\"] != null) {\n      return {\n        Stats: await de_StatsEvent_event(event[\"Stats\"], context)\n      };\n    }\n    if (event[\"Progress\"] != null) {\n      return {\n        Progress: await de_ProgressEvent_event(event[\"Progress\"], context)\n      };\n    }\n    if (event[\"Cont\"] != null) {\n      return {\n        Cont: await de_ContinuationEvent_event(event[\"Cont\"], context)\n      };\n    }\n    if (event[\"End\"] != null) {\n      return {\n        End: await de_EndEvent_event(event[\"End\"], context)\n      };\n    }\n    return {\n      $unknown: output\n    };\n  });\n};\nconst de_ContinuationEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_ContinuationEvent(data, context));\n  return contents;\n};\nconst de_EndEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_EndEvent(data, context));\n  return contents;\n};\nconst de_ProgressEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  contents.Details = de_Progress(data, context);\n  return contents;\n};\nconst de_RecordsEvent_event = async (output, context) => {\n  const contents = {};\n  contents.Payload = output.body;\n  return contents;\n};\nconst de_StatsEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  contents.Details = de_Stats(data, context);\n  return contents;\n};\nconst se_AbortIncompleteMultipartUpload = (input, context) => {\n  const bn = new __XmlNode(_AIMU);\n  if (input[_DAI] != null) {\n    bn.c(__XmlNode.of(_DAI, String(input[_DAI])).n(_DAI));\n  }\n  return bn;\n};\nconst se_AccelerateConfiguration = (input, context) => {\n  const bn = new __XmlNode(_ACc);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_BAS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_AccessControlPolicy = (input, context) => {\n  const bn = new __XmlNode(_ACP);\n  bn.lc(input, \"Grants\", \"AccessControlList\", () => se_Grants(input[_Gr], context));\n  if (input[_O] != null) {\n    bn.c(se_Owner(input[_O], context).n(_O));\n  }\n  return bn;\n};\nconst se_AccessControlTranslation = (input, context) => {\n  const bn = new __XmlNode(_ACT);\n  if (input[_O] != null) {\n    bn.c(__XmlNode.of(_OOw, input[_O]).n(_O));\n  }\n  return bn;\n};\nconst se_AllowedHeaders = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_AH, entry);\n    return n.n(_me);\n  });\n};\nconst se_AllowedMethods = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_AM, entry);\n    return n.n(_me);\n  });\n};\nconst se_AllowedOrigins = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_AO, entry);\n    return n.n(_me);\n  });\n};\nconst se_AnalyticsAndOperator = (input, context) => {\n  const bn = new __XmlNode(_AAO);\n  bn.cc(input, _P);\n  bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n  return bn;\n};\nconst se_AnalyticsConfiguration = (input, context) => {\n  const bn = new __XmlNode(_AC);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_AI, input[_I]).n(_I));\n  }\n  if (input[_F] != null) {\n    bn.c(se_AnalyticsFilter(input[_F], context).n(_F));\n  }\n  if (input[_SCA] != null) {\n    bn.c(se_StorageClassAnalysis(input[_SCA], context).n(_SCA));\n  }\n  return bn;\n};\nconst se_AnalyticsExportDestination = (input, context) => {\n  const bn = new __XmlNode(_AED);\n  if (input[_SBD] != null) {\n    bn.c(se_AnalyticsS3BucketDestination(input[_SBD], context).n(_SBD));\n  }\n  return bn;\n};\nconst se_AnalyticsFilter = (input, context) => {\n  const bn = new __XmlNode(_AF);\n  AnalyticsFilter.visit(input, {\n    Prefix: value => {\n      if (input[_P] != null) {\n        bn.c(__XmlNode.of(_P, value).n(_P));\n      }\n    },\n    Tag: value => {\n      if (input[_Ta] != null) {\n        bn.c(se_Tag(value, context).n(_Ta));\n      }\n    },\n    And: value => {\n      if (input[_A] != null) {\n        bn.c(se_AnalyticsAndOperator(value, context).n(_A));\n      }\n    },\n    _: (name, value) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bn.c(new __XmlNode(name).c(value));\n    }\n  });\n  return bn;\n};\nconst se_AnalyticsS3BucketDestination = (input, context) => {\n  const bn = new __XmlNode(_ASBD);\n  if (input[_Fo] != null) {\n    bn.c(__XmlNode.of(_ASEFF, input[_Fo]).n(_Fo));\n  }\n  if (input[_BAI] != null) {\n    bn.c(__XmlNode.of(_AIc, input[_BAI]).n(_BAI));\n  }\n  if (input[_B] != null) {\n    bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n  }\n  bn.cc(input, _P);\n  return bn;\n};\nconst se_BucketInfo = (input, context) => {\n  const bn = new __XmlNode(_BI);\n  bn.cc(input, _DR);\n  if (input[_Ty] != null) {\n    bn.c(__XmlNode.of(_BT, input[_Ty]).n(_Ty));\n  }\n  return bn;\n};\nconst se_BucketLifecycleConfiguration = (input, context) => {\n  const bn = new __XmlNode(_BLC);\n  bn.l(input, \"Rules\", \"Rule\", () => se_LifecycleRules(input[_Rul], context));\n  return bn;\n};\nconst se_BucketLoggingStatus = (input, context) => {\n  const bn = new __XmlNode(_BLS);\n  if (input[_LE] != null) {\n    bn.c(se_LoggingEnabled(input[_LE], context).n(_LE));\n  }\n  return bn;\n};\nconst se_CompletedMultipartUpload = (input, context) => {\n  const bn = new __XmlNode(_CMU);\n  bn.l(input, \"Parts\", \"Part\", () => se_CompletedPartList(input[_Part], context));\n  return bn;\n};\nconst se_CompletedPart = (input, context) => {\n  const bn = new __XmlNode(_CPo);\n  bn.cc(input, _ETa);\n  bn.cc(input, _CCRC);\n  bn.cc(input, _CCRCC);\n  bn.cc(input, _CSHA);\n  bn.cc(input, _CSHAh);\n  if (input[_PN] != null) {\n    bn.c(__XmlNode.of(_PN, String(input[_PN])).n(_PN));\n  }\n  return bn;\n};\nconst se_CompletedPartList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_CompletedPart(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_Condition = (input, context) => {\n  const bn = new __XmlNode(_Con);\n  bn.cc(input, _HECRE);\n  bn.cc(input, _KPE);\n  return bn;\n};\nconst se_CORSConfiguration = (input, context) => {\n  const bn = new __XmlNode(_CORSC);\n  bn.l(input, \"CORSRules\", \"CORSRule\", () => se_CORSRules(input[_CORSRu], context));\n  return bn;\n};\nconst se_CORSRule = (input, context) => {\n  const bn = new __XmlNode(_CORSR);\n  bn.cc(input, _ID_);\n  bn.l(input, \"AllowedHeaders\", \"AllowedHeader\", () => se_AllowedHeaders(input[_AHl], context));\n  bn.l(input, \"AllowedMethods\", \"AllowedMethod\", () => se_AllowedMethods(input[_AMl], context));\n  bn.l(input, \"AllowedOrigins\", \"AllowedOrigin\", () => se_AllowedOrigins(input[_AOl], context));\n  bn.l(input, \"ExposeHeaders\", \"ExposeHeader\", () => se_ExposeHeaders(input[_EH], context));\n  if (input[_MAS] != null) {\n    bn.c(__XmlNode.of(_MAS, String(input[_MAS])).n(_MAS));\n  }\n  return bn;\n};\nconst se_CORSRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_CORSRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_CreateBucketConfiguration = (input, context) => {\n  const bn = new __XmlNode(_CBC);\n  if (input[_LC] != null) {\n    bn.c(__XmlNode.of(_BLCu, input[_LC]).n(_LC));\n  }\n  if (input[_L] != null) {\n    bn.c(se_LocationInfo(input[_L], context).n(_L));\n  }\n  if (input[_B] != null) {\n    bn.c(se_BucketInfo(input[_B], context).n(_B));\n  }\n  return bn;\n};\nconst se_CSVInput = (input, context) => {\n  const bn = new __XmlNode(_CSVIn);\n  bn.cc(input, _FHI);\n  bn.cc(input, _Com);\n  bn.cc(input, _QEC);\n  bn.cc(input, _RD);\n  bn.cc(input, _FD);\n  bn.cc(input, _QCuo);\n  if (input[_AQRD] != null) {\n    bn.c(__XmlNode.of(_AQRD, String(input[_AQRD])).n(_AQRD));\n  }\n  return bn;\n};\nconst se_CSVOutput = (input, context) => {\n  const bn = new __XmlNode(_CSVO);\n  bn.cc(input, _QF);\n  bn.cc(input, _QEC);\n  bn.cc(input, _RD);\n  bn.cc(input, _FD);\n  bn.cc(input, _QCuo);\n  return bn;\n};\nconst se_DefaultRetention = (input, context) => {\n  const bn = new __XmlNode(_DRe);\n  if (input[_Mo] != null) {\n    bn.c(__XmlNode.of(_OLRM, input[_Mo]).n(_Mo));\n  }\n  if (input[_Da] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n  }\n  if (input[_Y] != null) {\n    bn.c(__XmlNode.of(_Y, String(input[_Y])).n(_Y));\n  }\n  return bn;\n};\nconst se_Delete = (input, context) => {\n  const bn = new __XmlNode(_Del);\n  bn.l(input, \"Objects\", \"Object\", () => se_ObjectIdentifierList(input[_Ob], context));\n  if (input[_Q] != null) {\n    bn.c(__XmlNode.of(_Q, String(input[_Q])).n(_Q));\n  }\n  return bn;\n};\nconst se_DeleteMarkerReplication = (input, context) => {\n  const bn = new __XmlNode(_DMR);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_DMRS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_Destination = (input, context) => {\n  const bn = new __XmlNode(_Des);\n  if (input[_B] != null) {\n    bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n  }\n  if (input[_Ac] != null) {\n    bn.c(__XmlNode.of(_AIc, input[_Ac]).n(_Ac));\n  }\n  bn.cc(input, _SC);\n  if (input[_ACT] != null) {\n    bn.c(se_AccessControlTranslation(input[_ACT], context).n(_ACT));\n  }\n  if (input[_ECn] != null) {\n    bn.c(se_EncryptionConfiguration(input[_ECn], context).n(_ECn));\n  }\n  if (input[_RTe] != null) {\n    bn.c(se_ReplicationTime(input[_RTe], context).n(_RTe));\n  }\n  if (input[_Me] != null) {\n    bn.c(se_Metrics(input[_Me], context).n(_Me));\n  }\n  return bn;\n};\nconst se_Encryption = (input, context) => {\n  const bn = new __XmlNode(_En);\n  if (input[_ETn] != null) {\n    bn.c(__XmlNode.of(_SSE, input[_ETn]).n(_ETn));\n  }\n  if (input[_KMSKI] != null) {\n    bn.c(__XmlNode.of(_SSEKMSKI, input[_KMSKI]).n(_KMSKI));\n  }\n  bn.cc(input, _KMSC);\n  return bn;\n};\nconst se_EncryptionConfiguration = (input, context) => {\n  const bn = new __XmlNode(_ECn);\n  bn.cc(input, _RKKID);\n  return bn;\n};\nconst se_ErrorDocument = (input, context) => {\n  const bn = new __XmlNode(_ED);\n  if (input[_K] != null) {\n    bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n  }\n  return bn;\n};\nconst se_EventBridgeConfiguration = (input, context) => {\n  const bn = new __XmlNode(_EBC);\n  return bn;\n};\nconst se_EventList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_Ev, entry);\n    return n.n(_me);\n  });\n};\nconst se_ExistingObjectReplication = (input, context) => {\n  const bn = new __XmlNode(_EOR);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_EORS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_ExposeHeaders = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_EHx, entry);\n    return n.n(_me);\n  });\n};\nconst se_FilterRule = (input, context) => {\n  const bn = new __XmlNode(_FR);\n  if (input[_N] != null) {\n    bn.c(__XmlNode.of(_FRN, input[_N]).n(_N));\n  }\n  if (input[_Va] != null) {\n    bn.c(__XmlNode.of(_FRV, input[_Va]).n(_Va));\n  }\n  return bn;\n};\nconst se_FilterRuleList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_FilterRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_GlacierJobParameters = (input, context) => {\n  const bn = new __XmlNode(_GJP);\n  bn.cc(input, _Ti);\n  return bn;\n};\nconst se_Grant = (input, context) => {\n  const bn = new __XmlNode(_G);\n  if (input[_Gra] != null) {\n    const n = se_Grantee(input[_Gra], context).n(_Gra);\n    n.a(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bn.c(n);\n  }\n  bn.cc(input, _Pe);\n  return bn;\n};\nconst se_Grantee = (input, context) => {\n  const bn = new __XmlNode(_Gra);\n  bn.cc(input, _DN);\n  bn.cc(input, _EA);\n  bn.cc(input, _ID_);\n  bn.cc(input, _URI);\n  bn.a(\"xsi:type\", input[_Ty]);\n  return bn;\n};\nconst se_Grants = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_Grant(entry, context);\n    return n.n(_G);\n  });\n};\nconst se_IndexDocument = (input, context) => {\n  const bn = new __XmlNode(_ID);\n  bn.cc(input, _Su);\n  return bn;\n};\nconst se_InputSerialization = (input, context) => {\n  const bn = new __XmlNode(_IS);\n  if (input[_CSV] != null) {\n    bn.c(se_CSVInput(input[_CSV], context).n(_CSV));\n  }\n  bn.cc(input, _CTom);\n  if (input[_JSON] != null) {\n    bn.c(se_JSONInput(input[_JSON], context).n(_JSON));\n  }\n  if (input[_Parq] != null) {\n    bn.c(se_ParquetInput(input[_Parq], context).n(_Parq));\n  }\n  return bn;\n};\nconst se_IntelligentTieringAndOperator = (input, context) => {\n  const bn = new __XmlNode(_ITAO);\n  bn.cc(input, _P);\n  bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n  return bn;\n};\nconst se_IntelligentTieringConfiguration = (input, context) => {\n  const bn = new __XmlNode(_ITC);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_ITI, input[_I]).n(_I));\n  }\n  if (input[_F] != null) {\n    bn.c(se_IntelligentTieringFilter(input[_F], context).n(_F));\n  }\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_ITS, input[_S]).n(_S));\n  }\n  bn.l(input, \"Tierings\", \"Tiering\", () => se_TieringList(input[_Tie], context));\n  return bn;\n};\nconst se_IntelligentTieringFilter = (input, context) => {\n  const bn = new __XmlNode(_ITF);\n  bn.cc(input, _P);\n  if (input[_Ta] != null) {\n    bn.c(se_Tag(input[_Ta], context).n(_Ta));\n  }\n  if (input[_A] != null) {\n    bn.c(se_IntelligentTieringAndOperator(input[_A], context).n(_A));\n  }\n  return bn;\n};\nconst se_InventoryConfiguration = (input, context) => {\n  const bn = new __XmlNode(_IC);\n  if (input[_Des] != null) {\n    bn.c(se_InventoryDestination(input[_Des], context).n(_Des));\n  }\n  if (input[_IE] != null) {\n    bn.c(__XmlNode.of(_IE, String(input[_IE])).n(_IE));\n  }\n  if (input[_F] != null) {\n    bn.c(se_InventoryFilter(input[_F], context).n(_F));\n  }\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_II, input[_I]).n(_I));\n  }\n  if (input[_IOV] != null) {\n    bn.c(__XmlNode.of(_IIOV, input[_IOV]).n(_IOV));\n  }\n  bn.lc(input, \"OptionalFields\", \"OptionalFields\", () => se_InventoryOptionalFields(input[_OF], context));\n  if (input[_Sc] != null) {\n    bn.c(se_InventorySchedule(input[_Sc], context).n(_Sc));\n  }\n  return bn;\n};\nconst se_InventoryDestination = (input, context) => {\n  const bn = new __XmlNode(_IDn);\n  if (input[_SBD] != null) {\n    bn.c(se_InventoryS3BucketDestination(input[_SBD], context).n(_SBD));\n  }\n  return bn;\n};\nconst se_InventoryEncryption = (input, context) => {\n  const bn = new __XmlNode(_IEn);\n  if (input[_SSES] != null) {\n    bn.c(se_SSES3(input[_SSES], context).n(_SS));\n  }\n  if (input[_SSEKMS] != null) {\n    bn.c(se_SSEKMS(input[_SSEKMS], context).n(_SK));\n  }\n  return bn;\n};\nconst se_InventoryFilter = (input, context) => {\n  const bn = new __XmlNode(_IF);\n  bn.cc(input, _P);\n  return bn;\n};\nconst se_InventoryOptionalFields = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = __XmlNode.of(_IOF, entry);\n    return n.n(_Fi);\n  });\n};\nconst se_InventoryS3BucketDestination = (input, context) => {\n  const bn = new __XmlNode(_ISBD);\n  bn.cc(input, _AIc);\n  if (input[_B] != null) {\n    bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n  }\n  if (input[_Fo] != null) {\n    bn.c(__XmlNode.of(_IFn, input[_Fo]).n(_Fo));\n  }\n  bn.cc(input, _P);\n  if (input[_En] != null) {\n    bn.c(se_InventoryEncryption(input[_En], context).n(_En));\n  }\n  return bn;\n};\nconst se_InventorySchedule = (input, context) => {\n  const bn = new __XmlNode(_ISn);\n  if (input[_Fr] != null) {\n    bn.c(__XmlNode.of(_IFnv, input[_Fr]).n(_Fr));\n  }\n  return bn;\n};\nconst se_JSONInput = (input, context) => {\n  const bn = new __XmlNode(_JSONI);\n  if (input[_Ty] != null) {\n    bn.c(__XmlNode.of(_JSONT, input[_Ty]).n(_Ty));\n  }\n  return bn;\n};\nconst se_JSONOutput = (input, context) => {\n  const bn = new __XmlNode(_JSONO);\n  bn.cc(input, _RD);\n  return bn;\n};\nconst se_LambdaFunctionConfiguration = (input, context) => {\n  const bn = new __XmlNode(_LFCa);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n  }\n  if (input[_LFA] != null) {\n    bn.c(__XmlNode.of(_LFA, input[_LFA]).n(_CF));\n  }\n  bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n  if (input[_F] != null) {\n    bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n  }\n  return bn;\n};\nconst se_LambdaFunctionConfigurationList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_LambdaFunctionConfiguration(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_LifecycleExpiration = (input, context) => {\n  const bn = new __XmlNode(_LEi);\n  if (input[_Dat] != null) {\n    bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_Dat]).toString()).n(_Dat));\n  }\n  if (input[_Da] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n  }\n  if (input[_EODM] != null) {\n    bn.c(__XmlNode.of(_EODM, String(input[_EODM])).n(_EODM));\n  }\n  return bn;\n};\nconst se_LifecycleRule = (input, context) => {\n  const bn = new __XmlNode(_LR);\n  if (input[_Exp] != null) {\n    bn.c(se_LifecycleExpiration(input[_Exp], context).n(_Exp));\n  }\n  bn.cc(input, _ID_);\n  bn.cc(input, _P);\n  if (input[_F] != null) {\n    bn.c(se_LifecycleRuleFilter(input[_F], context).n(_F));\n  }\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_ESx, input[_S]).n(_S));\n  }\n  bn.l(input, \"Transitions\", \"Transition\", () => se_TransitionList(input[_Tr], context));\n  bn.l(input, \"NoncurrentVersionTransitions\", \"NoncurrentVersionTransition\", () => se_NoncurrentVersionTransitionList(input[_NVT], context));\n  if (input[_NVE] != null) {\n    bn.c(se_NoncurrentVersionExpiration(input[_NVE], context).n(_NVE));\n  }\n  if (input[_AIMU] != null) {\n    bn.c(se_AbortIncompleteMultipartUpload(input[_AIMU], context).n(_AIMU));\n  }\n  return bn;\n};\nconst se_LifecycleRuleAndOperator = (input, context) => {\n  const bn = new __XmlNode(_LRAO);\n  bn.cc(input, _P);\n  bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n  if (input[_OSGT] != null) {\n    bn.c(__XmlNode.of(_OSGTB, String(input[_OSGT])).n(_OSGT));\n  }\n  if (input[_OSLT] != null) {\n    bn.c(__XmlNode.of(_OSLTB, String(input[_OSLT])).n(_OSLT));\n  }\n  return bn;\n};\nconst se_LifecycleRuleFilter = (input, context) => {\n  const bn = new __XmlNode(_LRF);\n  bn.cc(input, _P);\n  if (input[_Ta] != null) {\n    bn.c(se_Tag(input[_Ta], context).n(_Ta));\n  }\n  if (input[_OSGT] != null) {\n    bn.c(__XmlNode.of(_OSGTB, String(input[_OSGT])).n(_OSGT));\n  }\n  if (input[_OSLT] != null) {\n    bn.c(__XmlNode.of(_OSLTB, String(input[_OSLT])).n(_OSLT));\n  }\n  if (input[_A] != null) {\n    bn.c(se_LifecycleRuleAndOperator(input[_A], context).n(_A));\n  }\n  return bn;\n};\nconst se_LifecycleRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_LifecycleRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_LocationInfo = (input, context) => {\n  const bn = new __XmlNode(_LI);\n  if (input[_Ty] != null) {\n    bn.c(__XmlNode.of(_LT, input[_Ty]).n(_Ty));\n  }\n  if (input[_N] != null) {\n    bn.c(__XmlNode.of(_LNAS, input[_N]).n(_N));\n  }\n  return bn;\n};\nconst se_LoggingEnabled = (input, context) => {\n  const bn = new __XmlNode(_LE);\n  bn.cc(input, _TB);\n  bn.lc(input, \"TargetGrants\", \"TargetGrants\", () => se_TargetGrants(input[_TG], context));\n  bn.cc(input, _TP);\n  if (input[_TOKF] != null) {\n    bn.c(se_TargetObjectKeyFormat(input[_TOKF], context).n(_TOKF));\n  }\n  return bn;\n};\nconst se_MetadataEntry = (input, context) => {\n  const bn = new __XmlNode(_ME);\n  if (input[_N] != null) {\n    bn.c(__XmlNode.of(_MKe, input[_N]).n(_N));\n  }\n  if (input[_Va] != null) {\n    bn.c(__XmlNode.of(_MV, input[_Va]).n(_Va));\n  }\n  return bn;\n};\nconst se_Metrics = (input, context) => {\n  const bn = new __XmlNode(_Me);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_MS, input[_S]).n(_S));\n  }\n  if (input[_ETv] != null) {\n    bn.c(se_ReplicationTimeValue(input[_ETv], context).n(_ETv));\n  }\n  return bn;\n};\nconst se_MetricsAndOperator = (input, context) => {\n  const bn = new __XmlNode(_MAO);\n  bn.cc(input, _P);\n  bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n  bn.cc(input, _APAc);\n  return bn;\n};\nconst se_MetricsConfiguration = (input, context) => {\n  const bn = new __XmlNode(_MC);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_MI, input[_I]).n(_I));\n  }\n  if (input[_F] != null) {\n    bn.c(se_MetricsFilter(input[_F], context).n(_F));\n  }\n  return bn;\n};\nconst se_MetricsFilter = (input, context) => {\n  const bn = new __XmlNode(_MF);\n  MetricsFilter.visit(input, {\n    Prefix: value => {\n      if (input[_P] != null) {\n        bn.c(__XmlNode.of(_P, value).n(_P));\n      }\n    },\n    Tag: value => {\n      if (input[_Ta] != null) {\n        bn.c(se_Tag(value, context).n(_Ta));\n      }\n    },\n    AccessPointArn: value => {\n      if (input[_APAc] != null) {\n        bn.c(__XmlNode.of(_APAc, value).n(_APAc));\n      }\n    },\n    And: value => {\n      if (input[_A] != null) {\n        bn.c(se_MetricsAndOperator(value, context).n(_A));\n      }\n    },\n    _: (name, value) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bn.c(new __XmlNode(name).c(value));\n    }\n  });\n  return bn;\n};\nconst se_NoncurrentVersionExpiration = (input, context) => {\n  const bn = new __XmlNode(_NVE);\n  if (input[_ND] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_ND])).n(_ND));\n  }\n  if (input[_NNV] != null) {\n    bn.c(__XmlNode.of(_VC, String(input[_NNV])).n(_NNV));\n  }\n  return bn;\n};\nconst se_NoncurrentVersionTransition = (input, context) => {\n  const bn = new __XmlNode(_NVTo);\n  if (input[_ND] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_ND])).n(_ND));\n  }\n  if (input[_SC] != null) {\n    bn.c(__XmlNode.of(_TSC, input[_SC]).n(_SC));\n  }\n  if (input[_NNV] != null) {\n    bn.c(__XmlNode.of(_VC, String(input[_NNV])).n(_NNV));\n  }\n  return bn;\n};\nconst se_NoncurrentVersionTransitionList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_NoncurrentVersionTransition(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_NotificationConfiguration = (input, context) => {\n  const bn = new __XmlNode(_NC);\n  bn.l(input, \"TopicConfigurations\", \"TopicConfiguration\", () => se_TopicConfigurationList(input[_TCop], context));\n  bn.l(input, \"QueueConfigurations\", \"QueueConfiguration\", () => se_QueueConfigurationList(input[_QCu], context));\n  bn.l(input, \"LambdaFunctionConfigurations\", \"CloudFunctionConfiguration\", () => se_LambdaFunctionConfigurationList(input[_LFC], context));\n  if (input[_EBC] != null) {\n    bn.c(se_EventBridgeConfiguration(input[_EBC], context).n(_EBC));\n  }\n  return bn;\n};\nconst se_NotificationConfigurationFilter = (input, context) => {\n  const bn = new __XmlNode(_NCF);\n  if (input[_K] != null) {\n    bn.c(se_S3KeyFilter(input[_K], context).n(_SKe));\n  }\n  return bn;\n};\nconst se_ObjectIdentifier = (input, context) => {\n  const bn = new __XmlNode(_OI);\n  if (input[_K] != null) {\n    bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n  }\n  if (input[_VI] != null) {\n    bn.c(__XmlNode.of(_OVI, input[_VI]).n(_VI));\n  }\n  return bn;\n};\nconst se_ObjectIdentifierList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_ObjectIdentifier(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_ObjectLockConfiguration = (input, context) => {\n  const bn = new __XmlNode(_OLC);\n  bn.cc(input, _OLE);\n  if (input[_Ru] != null) {\n    bn.c(se_ObjectLockRule(input[_Ru], context).n(_Ru));\n  }\n  return bn;\n};\nconst se_ObjectLockLegalHold = (input, context) => {\n  const bn = new __XmlNode(_OLLH);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_OLLHS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_ObjectLockRetention = (input, context) => {\n  const bn = new __XmlNode(_OLR);\n  if (input[_Mo] != null) {\n    bn.c(__XmlNode.of(_OLRM, input[_Mo]).n(_Mo));\n  }\n  if (input[_RUD] != null) {\n    bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_RUD]).toString()).n(_RUD));\n  }\n  return bn;\n};\nconst se_ObjectLockRule = (input, context) => {\n  const bn = new __XmlNode(_OLRb);\n  if (input[_DRe] != null) {\n    bn.c(se_DefaultRetention(input[_DRe], context).n(_DRe));\n  }\n  return bn;\n};\nconst se_OutputLocation = (input, context) => {\n  const bn = new __XmlNode(_OL);\n  if (input[_S_] != null) {\n    bn.c(se_S3Location(input[_S_], context).n(_S_));\n  }\n  return bn;\n};\nconst se_OutputSerialization = (input, context) => {\n  const bn = new __XmlNode(_OS);\n  if (input[_CSV] != null) {\n    bn.c(se_CSVOutput(input[_CSV], context).n(_CSV));\n  }\n  if (input[_JSON] != null) {\n    bn.c(se_JSONOutput(input[_JSON], context).n(_JSON));\n  }\n  return bn;\n};\nconst se_Owner = (input, context) => {\n  const bn = new __XmlNode(_O);\n  bn.cc(input, _DN);\n  bn.cc(input, _ID_);\n  return bn;\n};\nconst se_OwnershipControls = (input, context) => {\n  const bn = new __XmlNode(_OC);\n  bn.l(input, \"Rules\", \"Rule\", () => se_OwnershipControlsRules(input[_Rul], context));\n  return bn;\n};\nconst se_OwnershipControlsRule = (input, context) => {\n  const bn = new __XmlNode(_OCR);\n  bn.cc(input, _OO);\n  return bn;\n};\nconst se_OwnershipControlsRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_OwnershipControlsRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_ParquetInput = (input, context) => {\n  const bn = new __XmlNode(_PI);\n  return bn;\n};\nconst se_PartitionedPrefix = (input, context) => {\n  const bn = new __XmlNode(_PP);\n  bn.cc(input, _PDS);\n  return bn;\n};\nconst se_PublicAccessBlockConfiguration = (input, context) => {\n  const bn = new __XmlNode(_PABC);\n  if (input[_BPA] != null) {\n    bn.c(__XmlNode.of(_Se, String(input[_BPA])).n(_BPA));\n  }\n  if (input[_IPA] != null) {\n    bn.c(__XmlNode.of(_Se, String(input[_IPA])).n(_IPA));\n  }\n  if (input[_BPP] != null) {\n    bn.c(__XmlNode.of(_Se, String(input[_BPP])).n(_BPP));\n  }\n  if (input[_RPB] != null) {\n    bn.c(__XmlNode.of(_Se, String(input[_RPB])).n(_RPB));\n  }\n  return bn;\n};\nconst se_QueueConfiguration = (input, context) => {\n  const bn = new __XmlNode(_QC);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n  }\n  if (input[_QA] != null) {\n    bn.c(__XmlNode.of(_QA, input[_QA]).n(_Qu));\n  }\n  bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n  if (input[_F] != null) {\n    bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n  }\n  return bn;\n};\nconst se_QueueConfigurationList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_QueueConfiguration(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_Redirect = (input, context) => {\n  const bn = new __XmlNode(_Red);\n  bn.cc(input, _HN);\n  bn.cc(input, _HRC);\n  bn.cc(input, _Pr);\n  bn.cc(input, _RKPW);\n  bn.cc(input, _RKW);\n  return bn;\n};\nconst se_RedirectAllRequestsTo = (input, context) => {\n  const bn = new __XmlNode(_RART);\n  bn.cc(input, _HN);\n  bn.cc(input, _Pr);\n  return bn;\n};\nconst se_ReplicaModifications = (input, context) => {\n  const bn = new __XmlNode(_RM);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_RMS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_ReplicationConfiguration = (input, context) => {\n  const bn = new __XmlNode(_RCe);\n  bn.cc(input, _Ro);\n  bn.l(input, \"Rules\", \"Rule\", () => se_ReplicationRules(input[_Rul], context));\n  return bn;\n};\nconst se_ReplicationRule = (input, context) => {\n  const bn = new __XmlNode(_RRe);\n  bn.cc(input, _ID_);\n  if (input[_Pri] != null) {\n    bn.c(__XmlNode.of(_Pri, String(input[_Pri])).n(_Pri));\n  }\n  bn.cc(input, _P);\n  if (input[_F] != null) {\n    bn.c(se_ReplicationRuleFilter(input[_F], context).n(_F));\n  }\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_RRS, input[_S]).n(_S));\n  }\n  if (input[_SSC] != null) {\n    bn.c(se_SourceSelectionCriteria(input[_SSC], context).n(_SSC));\n  }\n  if (input[_EOR] != null) {\n    bn.c(se_ExistingObjectReplication(input[_EOR], context).n(_EOR));\n  }\n  if (input[_Des] != null) {\n    bn.c(se_Destination(input[_Des], context).n(_Des));\n  }\n  if (input[_DMR] != null) {\n    bn.c(se_DeleteMarkerReplication(input[_DMR], context).n(_DMR));\n  }\n  return bn;\n};\nconst se_ReplicationRuleAndOperator = (input, context) => {\n  const bn = new __XmlNode(_RRAO);\n  bn.cc(input, _P);\n  bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n  return bn;\n};\nconst se_ReplicationRuleFilter = (input, context) => {\n  const bn = new __XmlNode(_RRF);\n  bn.cc(input, _P);\n  if (input[_Ta] != null) {\n    bn.c(se_Tag(input[_Ta], context).n(_Ta));\n  }\n  if (input[_A] != null) {\n    bn.c(se_ReplicationRuleAndOperator(input[_A], context).n(_A));\n  }\n  return bn;\n};\nconst se_ReplicationRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_ReplicationRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_ReplicationTime = (input, context) => {\n  const bn = new __XmlNode(_RTe);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_RTS, input[_S]).n(_S));\n  }\n  if (input[_Tim] != null) {\n    bn.c(se_ReplicationTimeValue(input[_Tim], context).n(_Tim));\n  }\n  return bn;\n};\nconst se_ReplicationTimeValue = (input, context) => {\n  const bn = new __XmlNode(_RTV);\n  if (input[_Mi] != null) {\n    bn.c(__XmlNode.of(_Mi, String(input[_Mi])).n(_Mi));\n  }\n  return bn;\n};\nconst se_RequestPaymentConfiguration = (input, context) => {\n  const bn = new __XmlNode(_RPC);\n  bn.cc(input, _Pa);\n  return bn;\n};\nconst se_RequestProgress = (input, context) => {\n  const bn = new __XmlNode(_RPe);\n  if (input[_Ena] != null) {\n    bn.c(__XmlNode.of(_ERP, String(input[_Ena])).n(_Ena));\n  }\n  return bn;\n};\nconst se_RestoreRequest = (input, context) => {\n  const bn = new __XmlNode(_RRes);\n  if (input[_Da] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n  }\n  if (input[_GJP] != null) {\n    bn.c(se_GlacierJobParameters(input[_GJP], context).n(_GJP));\n  }\n  if (input[_Ty] != null) {\n    bn.c(__XmlNode.of(_RRT, input[_Ty]).n(_Ty));\n  }\n  bn.cc(input, _Ti);\n  bn.cc(input, _Desc);\n  if (input[_SP] != null) {\n    bn.c(se_SelectParameters(input[_SP], context).n(_SP));\n  }\n  if (input[_OL] != null) {\n    bn.c(se_OutputLocation(input[_OL], context).n(_OL));\n  }\n  return bn;\n};\nconst se_RoutingRule = (input, context) => {\n  const bn = new __XmlNode(_RRou);\n  if (input[_Con] != null) {\n    bn.c(se_Condition(input[_Con], context).n(_Con));\n  }\n  if (input[_Red] != null) {\n    bn.c(se_Redirect(input[_Red], context).n(_Red));\n  }\n  return bn;\n};\nconst se_RoutingRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_RoutingRule(entry, context);\n    return n.n(_RRou);\n  });\n};\nconst se_S3KeyFilter = (input, context) => {\n  const bn = new __XmlNode(_SKF);\n  bn.l(input, \"FilterRules\", \"FilterRule\", () => se_FilterRuleList(input[_FRi], context));\n  return bn;\n};\nconst se_S3Location = (input, context) => {\n  const bn = new __XmlNode(_SL);\n  bn.cc(input, _BN);\n  if (input[_P] != null) {\n    bn.c(__XmlNode.of(_LP, input[_P]).n(_P));\n  }\n  if (input[_En] != null) {\n    bn.c(se_Encryption(input[_En], context).n(_En));\n  }\n  if (input[_CACL] != null) {\n    bn.c(__XmlNode.of(_OCACL, input[_CACL]).n(_CACL));\n  }\n  bn.lc(input, \"AccessControlList\", \"AccessControlList\", () => se_Grants(input[_ACLc], context));\n  if (input[_T] != null) {\n    bn.c(se_Tagging(input[_T], context).n(_T));\n  }\n  bn.lc(input, \"UserMetadata\", \"UserMetadata\", () => se_UserMetadata(input[_UM], context));\n  bn.cc(input, _SC);\n  return bn;\n};\nconst se_ScanRange = (input, context) => {\n  const bn = new __XmlNode(_SR);\n  if (input[_St] != null) {\n    bn.c(__XmlNode.of(_St, String(input[_St])).n(_St));\n  }\n  if (input[_End] != null) {\n    bn.c(__XmlNode.of(_End, String(input[_End])).n(_End));\n  }\n  return bn;\n};\nconst se_SelectParameters = (input, context) => {\n  const bn = new __XmlNode(_SP);\n  if (input[_IS] != null) {\n    bn.c(se_InputSerialization(input[_IS], context).n(_IS));\n  }\n  bn.cc(input, _ETx);\n  bn.cc(input, _Ex);\n  if (input[_OS] != null) {\n    bn.c(se_OutputSerialization(input[_OS], context).n(_OS));\n  }\n  return bn;\n};\nconst se_ServerSideEncryptionByDefault = (input, context) => {\n  const bn = new __XmlNode(_SSEBD);\n  if (input[_SSEA] != null) {\n    bn.c(__XmlNode.of(_SSE, input[_SSEA]).n(_SSEA));\n  }\n  if (input[_KMSMKID] != null) {\n    bn.c(__XmlNode.of(_SSEKMSKI, input[_KMSMKID]).n(_KMSMKID));\n  }\n  return bn;\n};\nconst se_ServerSideEncryptionConfiguration = (input, context) => {\n  const bn = new __XmlNode(_SSEC);\n  bn.l(input, \"Rules\", \"Rule\", () => se_ServerSideEncryptionRules(input[_Rul], context));\n  return bn;\n};\nconst se_ServerSideEncryptionRule = (input, context) => {\n  const bn = new __XmlNode(_SSER);\n  if (input[_ASSEBD] != null) {\n    bn.c(se_ServerSideEncryptionByDefault(input[_ASSEBD], context).n(_ASSEBD));\n  }\n  if (input[_BKE] != null) {\n    bn.c(__XmlNode.of(_BKE, String(input[_BKE])).n(_BKE));\n  }\n  return bn;\n};\nconst se_ServerSideEncryptionRules = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_ServerSideEncryptionRule(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_SimplePrefix = (input, context) => {\n  const bn = new __XmlNode(_SPi);\n  return bn;\n};\nconst se_SourceSelectionCriteria = (input, context) => {\n  const bn = new __XmlNode(_SSC);\n  if (input[_SKEO] != null) {\n    bn.c(se_SseKmsEncryptedObjects(input[_SKEO], context).n(_SKEO));\n  }\n  if (input[_RM] != null) {\n    bn.c(se_ReplicaModifications(input[_RM], context).n(_RM));\n  }\n  return bn;\n};\nconst se_SSEKMS = (input, context) => {\n  const bn = new __XmlNode(_SK);\n  if (input[_KI] != null) {\n    bn.c(__XmlNode.of(_SSEKMSKI, input[_KI]).n(_KI));\n  }\n  return bn;\n};\nconst se_SseKmsEncryptedObjects = (input, context) => {\n  const bn = new __XmlNode(_SKEO);\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_SKEOS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_SSES3 = (input, context) => {\n  const bn = new __XmlNode(_SS);\n  return bn;\n};\nconst se_StorageClassAnalysis = (input, context) => {\n  const bn = new __XmlNode(_SCA);\n  if (input[_DE] != null) {\n    bn.c(se_StorageClassAnalysisDataExport(input[_DE], context).n(_DE));\n  }\n  return bn;\n};\nconst se_StorageClassAnalysisDataExport = (input, context) => {\n  const bn = new __XmlNode(_SCADE);\n  if (input[_OSV] != null) {\n    bn.c(__XmlNode.of(_SCASV, input[_OSV]).n(_OSV));\n  }\n  if (input[_Des] != null) {\n    bn.c(se_AnalyticsExportDestination(input[_Des], context).n(_Des));\n  }\n  return bn;\n};\nconst se_Tag = (input, context) => {\n  const bn = new __XmlNode(_Ta);\n  if (input[_K] != null) {\n    bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n  }\n  bn.cc(input, _Va);\n  return bn;\n};\nconst se_Tagging = (input, context) => {\n  const bn = new __XmlNode(_T);\n  bn.lc(input, \"TagSet\", \"TagSet\", () => se_TagSet(input[_TS], context));\n  return bn;\n};\nconst se_TagSet = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_Tag(entry, context);\n    return n.n(_Ta);\n  });\n};\nconst se_TargetGrant = (input, context) => {\n  const bn = new __XmlNode(_TGa);\n  if (input[_Gra] != null) {\n    const n = se_Grantee(input[_Gra], context).n(_Gra);\n    n.a(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    bn.c(n);\n  }\n  if (input[_Pe] != null) {\n    bn.c(__XmlNode.of(_BLP, input[_Pe]).n(_Pe));\n  }\n  return bn;\n};\nconst se_TargetGrants = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_TargetGrant(entry, context);\n    return n.n(_G);\n  });\n};\nconst se_TargetObjectKeyFormat = (input, context) => {\n  const bn = new __XmlNode(_TOKF);\n  if (input[_SPi] != null) {\n    bn.c(se_SimplePrefix(input[_SPi], context).n(_SPi));\n  }\n  if (input[_PP] != null) {\n    bn.c(se_PartitionedPrefix(input[_PP], context).n(_PP));\n  }\n  return bn;\n};\nconst se_Tiering = (input, context) => {\n  const bn = new __XmlNode(_Tier);\n  if (input[_Da] != null) {\n    bn.c(__XmlNode.of(_ITD, String(input[_Da])).n(_Da));\n  }\n  if (input[_AT] != null) {\n    bn.c(__XmlNode.of(_ITAT, input[_AT]).n(_AT));\n  }\n  return bn;\n};\nconst se_TieringList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_Tiering(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_TopicConfiguration = (input, context) => {\n  const bn = new __XmlNode(_TCo);\n  if (input[_I] != null) {\n    bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n  }\n  if (input[_TA] != null) {\n    bn.c(__XmlNode.of(_TA, input[_TA]).n(_Top));\n  }\n  bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n  if (input[_F] != null) {\n    bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n  }\n  return bn;\n};\nconst se_TopicConfigurationList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_TopicConfiguration(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_Transition = (input, context) => {\n  const bn = new __XmlNode(_Tra);\n  if (input[_Dat] != null) {\n    bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_Dat]).toString()).n(_Dat));\n  }\n  if (input[_Da] != null) {\n    bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n  }\n  if (input[_SC] != null) {\n    bn.c(__XmlNode.of(_TSC, input[_SC]).n(_SC));\n  }\n  return bn;\n};\nconst se_TransitionList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_Transition(entry, context);\n    return n.n(_me);\n  });\n};\nconst se_UserMetadata = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    const n = se_MetadataEntry(entry, context);\n    return n.n(_ME);\n  });\n};\nconst se_VersioningConfiguration = (input, context) => {\n  const bn = new __XmlNode(_VCe);\n  if (input[_MFAD] != null) {\n    bn.c(__XmlNode.of(_MFAD, input[_MFAD]).n(_MDf));\n  }\n  if (input[_S] != null) {\n    bn.c(__XmlNode.of(_BVS, input[_S]).n(_S));\n  }\n  return bn;\n};\nconst se_WebsiteConfiguration = (input, context) => {\n  const bn = new __XmlNode(_WC);\n  if (input[_ED] != null) {\n    bn.c(se_ErrorDocument(input[_ED], context).n(_ED));\n  }\n  if (input[_ID] != null) {\n    bn.c(se_IndexDocument(input[_ID], context).n(_ID));\n  }\n  if (input[_RART] != null) {\n    bn.c(se_RedirectAllRequestsTo(input[_RART], context).n(_RART));\n  }\n  bn.lc(input, \"RoutingRules\", \"RoutingRules\", () => se_RoutingRules(input[_RRo], context));\n  return bn;\n};\nconst de_AbortIncompleteMultipartUpload = (output, context) => {\n  const contents = {};\n  if (output[_DAI] != null) {\n    contents[_DAI] = __strictParseInt32(output[_DAI]);\n  }\n  return contents;\n};\nconst de_AccessControlTranslation = (output, context) => {\n  const contents = {};\n  if (output[_O] != null) {\n    contents[_O] = __expectString(output[_O]);\n  }\n  return contents;\n};\nconst de_AllowedHeaders = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_AllowedMethods = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_AllowedOrigins = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_AnalyticsAndOperator = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output.Tag === \"\") {\n    contents[_Tag] = [];\n  } else if (output[_Ta] != null) {\n    contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n  }\n  return contents;\n};\nconst de_AnalyticsConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output.Filter === \"\") {} else if (output[_F] != null) {\n    contents[_F] = de_AnalyticsFilter(__expectUnion(output[_F]), context);\n  }\n  if (output[_SCA] != null) {\n    contents[_SCA] = de_StorageClassAnalysis(output[_SCA], context);\n  }\n  return contents;\n};\nconst de_AnalyticsConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_AnalyticsConfiguration(entry, context);\n  });\n};\nconst de_AnalyticsExportDestination = (output, context) => {\n  const contents = {};\n  if (output[_SBD] != null) {\n    contents[_SBD] = de_AnalyticsS3BucketDestination(output[_SBD], context);\n  }\n  return contents;\n};\nconst de_AnalyticsFilter = (output, context) => {\n  if (output[_P] != null) {\n    return {\n      Prefix: __expectString(output[_P])\n    };\n  }\n  if (output[_Ta] != null) {\n    return {\n      Tag: de_Tag(output[_Ta], context)\n    };\n  }\n  if (output[_A] != null) {\n    return {\n      And: de_AnalyticsAndOperator(output[_A], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_AnalyticsS3BucketDestination = (output, context) => {\n  const contents = {};\n  if (output[_Fo] != null) {\n    contents[_Fo] = __expectString(output[_Fo]);\n  }\n  if (output[_BAI] != null) {\n    contents[_BAI] = __expectString(output[_BAI]);\n  }\n  if (output[_B] != null) {\n    contents[_B] = __expectString(output[_B]);\n  }\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  return contents;\n};\nconst de_Bucket = (output, context) => {\n  const contents = {};\n  if (output[_N] != null) {\n    contents[_N] = __expectString(output[_N]);\n  }\n  if (output[_CDr] != null) {\n    contents[_CDr] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_CDr]));\n  }\n  if (output[_BR] != null) {\n    contents[_BR] = __expectString(output[_BR]);\n  }\n  return contents;\n};\nconst de_Buckets = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Bucket(entry, context);\n  });\n};\nconst de_Checksum = (output, context) => {\n  const contents = {};\n  if (output[_CCRC] != null) {\n    contents[_CCRC] = __expectString(output[_CCRC]);\n  }\n  if (output[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(output[_CCRCC]);\n  }\n  if (output[_CSHA] != null) {\n    contents[_CSHA] = __expectString(output[_CSHA]);\n  }\n  if (output[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(output[_CSHAh]);\n  }\n  return contents;\n};\nconst de_ChecksumAlgorithmList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_CommonPrefix = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  return contents;\n};\nconst de_CommonPrefixList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_CommonPrefix(entry, context);\n  });\n};\nconst de_Condition = (output, context) => {\n  const contents = {};\n  if (output[_HECRE] != null) {\n    contents[_HECRE] = __expectString(output[_HECRE]);\n  }\n  if (output[_KPE] != null) {\n    contents[_KPE] = __expectString(output[_KPE]);\n  }\n  return contents;\n};\nconst de_ContinuationEvent = (output, context) => {\n  const contents = {};\n  return contents;\n};\nconst de_CopyObjectResult = (output, context) => {\n  const contents = {};\n  if (output[_ETa] != null) {\n    contents[_ETa] = __expectString(output[_ETa]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  if (output[_CCRC] != null) {\n    contents[_CCRC] = __expectString(output[_CCRC]);\n  }\n  if (output[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(output[_CCRCC]);\n  }\n  if (output[_CSHA] != null) {\n    contents[_CSHA] = __expectString(output[_CSHA]);\n  }\n  if (output[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(output[_CSHAh]);\n  }\n  return contents;\n};\nconst de_CopyPartResult = (output, context) => {\n  const contents = {};\n  if (output[_ETa] != null) {\n    contents[_ETa] = __expectString(output[_ETa]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  if (output[_CCRC] != null) {\n    contents[_CCRC] = __expectString(output[_CCRC]);\n  }\n  if (output[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(output[_CCRCC]);\n  }\n  if (output[_CSHA] != null) {\n    contents[_CSHA] = __expectString(output[_CSHA]);\n  }\n  if (output[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(output[_CSHAh]);\n  }\n  return contents;\n};\nconst de_CORSRule = (output, context) => {\n  const contents = {};\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  if (output.AllowedHeader === \"\") {\n    contents[_AHl] = [];\n  } else if (output[_AH] != null) {\n    contents[_AHl] = de_AllowedHeaders(__getArrayIfSingleItem(output[_AH]), context);\n  }\n  if (output.AllowedMethod === \"\") {\n    contents[_AMl] = [];\n  } else if (output[_AM] != null) {\n    contents[_AMl] = de_AllowedMethods(__getArrayIfSingleItem(output[_AM]), context);\n  }\n  if (output.AllowedOrigin === \"\") {\n    contents[_AOl] = [];\n  } else if (output[_AO] != null) {\n    contents[_AOl] = de_AllowedOrigins(__getArrayIfSingleItem(output[_AO]), context);\n  }\n  if (output.ExposeHeader === \"\") {\n    contents[_EH] = [];\n  } else if (output[_EHx] != null) {\n    contents[_EH] = de_ExposeHeaders(__getArrayIfSingleItem(output[_EHx]), context);\n  }\n  if (output[_MAS] != null) {\n    contents[_MAS] = __strictParseInt32(output[_MAS]);\n  }\n  return contents;\n};\nconst de_CORSRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_CORSRule(entry, context);\n  });\n};\nconst de_DefaultRetention = (output, context) => {\n  const contents = {};\n  if (output[_Mo] != null) {\n    contents[_Mo] = __expectString(output[_Mo]);\n  }\n  if (output[_Da] != null) {\n    contents[_Da] = __strictParseInt32(output[_Da]);\n  }\n  if (output[_Y] != null) {\n    contents[_Y] = __strictParseInt32(output[_Y]);\n  }\n  return contents;\n};\nconst de_DeletedObject = (output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_VI] != null) {\n    contents[_VI] = __expectString(output[_VI]);\n  }\n  if (output[_DM] != null) {\n    contents[_DM] = __parseBoolean(output[_DM]);\n  }\n  if (output[_DMVI] != null) {\n    contents[_DMVI] = __expectString(output[_DMVI]);\n  }\n  return contents;\n};\nconst de_DeletedObjects = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_DeletedObject(entry, context);\n  });\n};\nconst de_DeleteMarkerEntry = (output, context) => {\n  const contents = {};\n  if (output[_O] != null) {\n    contents[_O] = de_Owner(output[_O], context);\n  }\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_VI] != null) {\n    contents[_VI] = __expectString(output[_VI]);\n  }\n  if (output[_IL] != null) {\n    contents[_IL] = __parseBoolean(output[_IL]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  return contents;\n};\nconst de_DeleteMarkerReplication = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  return contents;\n};\nconst de_DeleteMarkers = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_DeleteMarkerEntry(entry, context);\n  });\n};\nconst de_Destination = (output, context) => {\n  const contents = {};\n  if (output[_B] != null) {\n    contents[_B] = __expectString(output[_B]);\n  }\n  if (output[_Ac] != null) {\n    contents[_Ac] = __expectString(output[_Ac]);\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  if (output[_ACT] != null) {\n    contents[_ACT] = de_AccessControlTranslation(output[_ACT], context);\n  }\n  if (output[_ECn] != null) {\n    contents[_ECn] = de_EncryptionConfiguration(output[_ECn], context);\n  }\n  if (output[_RTe] != null) {\n    contents[_RTe] = de_ReplicationTime(output[_RTe], context);\n  }\n  if (output[_Me] != null) {\n    contents[_Me] = de_Metrics(output[_Me], context);\n  }\n  return contents;\n};\nconst de_EncryptionConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_RKKID] != null) {\n    contents[_RKKID] = __expectString(output[_RKKID]);\n  }\n  return contents;\n};\nconst de_EndEvent = (output, context) => {\n  const contents = {};\n  return contents;\n};\nconst de__Error = (output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_VI] != null) {\n    contents[_VI] = __expectString(output[_VI]);\n  }\n  if (output[_Cod] != null) {\n    contents[_Cod] = __expectString(output[_Cod]);\n  }\n  if (output[_Mes] != null) {\n    contents[_Mes] = __expectString(output[_Mes]);\n  }\n  return contents;\n};\nconst de_ErrorDocument = (output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  return contents;\n};\nconst de_Errors = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de__Error(entry, context);\n  });\n};\nconst de_EventBridgeConfiguration = (output, context) => {\n  const contents = {};\n  return contents;\n};\nconst de_EventList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_ExistingObjectReplication = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  return contents;\n};\nconst de_ExposeHeaders = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_FilterRule = (output, context) => {\n  const contents = {};\n  if (output[_N] != null) {\n    contents[_N] = __expectString(output[_N]);\n  }\n  if (output[_Va] != null) {\n    contents[_Va] = __expectString(output[_Va]);\n  }\n  return contents;\n};\nconst de_FilterRuleList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_FilterRule(entry, context);\n  });\n};\nconst de_GetObjectAttributesParts = (output, context) => {\n  const contents = {};\n  if (output[_PC] != null) {\n    contents[_TPC] = __strictParseInt32(output[_PC]);\n  }\n  if (output[_PNM] != null) {\n    contents[_PNM] = __expectString(output[_PNM]);\n  }\n  if (output[_NPNM] != null) {\n    contents[_NPNM] = __expectString(output[_NPNM]);\n  }\n  if (output[_MP] != null) {\n    contents[_MP] = __strictParseInt32(output[_MP]);\n  }\n  if (output[_IT] != null) {\n    contents[_IT] = __parseBoolean(output[_IT]);\n  }\n  if (output.Part === \"\") {\n    contents[_Part] = [];\n  } else if (output[_Par] != null) {\n    contents[_Part] = de_PartsList(__getArrayIfSingleItem(output[_Par]), context);\n  }\n  return contents;\n};\nconst de_Grant = (output, context) => {\n  const contents = {};\n  if (output[_Gra] != null) {\n    contents[_Gra] = de_Grantee(output[_Gra], context);\n  }\n  if (output[_Pe] != null) {\n    contents[_Pe] = __expectString(output[_Pe]);\n  }\n  return contents;\n};\nconst de_Grantee = (output, context) => {\n  const contents = {};\n  if (output[_DN] != null) {\n    contents[_DN] = __expectString(output[_DN]);\n  }\n  if (output[_EA] != null) {\n    contents[_EA] = __expectString(output[_EA]);\n  }\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  if (output[_URI] != null) {\n    contents[_URI] = __expectString(output[_URI]);\n  }\n  if (output[_x] != null) {\n    contents[_Ty] = __expectString(output[_x]);\n  }\n  return contents;\n};\nconst de_Grants = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Grant(entry, context);\n  });\n};\nconst de_IndexDocument = (output, context) => {\n  const contents = {};\n  if (output[_Su] != null) {\n    contents[_Su] = __expectString(output[_Su]);\n  }\n  return contents;\n};\nconst de_Initiator = (output, context) => {\n  const contents = {};\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  if (output[_DN] != null) {\n    contents[_DN] = __expectString(output[_DN]);\n  }\n  return contents;\n};\nconst de_IntelligentTieringAndOperator = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output.Tag === \"\") {\n    contents[_Tag] = [];\n  } else if (output[_Ta] != null) {\n    contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n  }\n  return contents;\n};\nconst de_IntelligentTieringConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_IntelligentTieringFilter(output[_F], context);\n  }\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  if (output.Tiering === \"\") {\n    contents[_Tie] = [];\n  } else if (output[_Tier] != null) {\n    contents[_Tie] = de_TieringList(__getArrayIfSingleItem(output[_Tier]), context);\n  }\n  return contents;\n};\nconst de_IntelligentTieringConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_IntelligentTieringConfiguration(entry, context);\n  });\n};\nconst de_IntelligentTieringFilter = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_Ta] != null) {\n    contents[_Ta] = de_Tag(output[_Ta], context);\n  }\n  if (output[_A] != null) {\n    contents[_A] = de_IntelligentTieringAndOperator(output[_A], context);\n  }\n  return contents;\n};\nconst de_InventoryConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_Des] != null) {\n    contents[_Des] = de_InventoryDestination(output[_Des], context);\n  }\n  if (output[_IE] != null) {\n    contents[_IE] = __parseBoolean(output[_IE]);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_InventoryFilter(output[_F], context);\n  }\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output[_IOV] != null) {\n    contents[_IOV] = __expectString(output[_IOV]);\n  }\n  if (output.OptionalFields === \"\") {\n    contents[_OF] = [];\n  } else if (output[_OF] != null && output[_OF][_Fi] != null) {\n    contents[_OF] = de_InventoryOptionalFields(__getArrayIfSingleItem(output[_OF][_Fi]), context);\n  }\n  if (output[_Sc] != null) {\n    contents[_Sc] = de_InventorySchedule(output[_Sc], context);\n  }\n  return contents;\n};\nconst de_InventoryConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_InventoryConfiguration(entry, context);\n  });\n};\nconst de_InventoryDestination = (output, context) => {\n  const contents = {};\n  if (output[_SBD] != null) {\n    contents[_SBD] = de_InventoryS3BucketDestination(output[_SBD], context);\n  }\n  return contents;\n};\nconst de_InventoryEncryption = (output, context) => {\n  const contents = {};\n  if (output[_SS] != null) {\n    contents[_SSES] = de_SSES3(output[_SS], context);\n  }\n  if (output[_SK] != null) {\n    contents[_SSEKMS] = de_SSEKMS(output[_SK], context);\n  }\n  return contents;\n};\nconst de_InventoryFilter = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  return contents;\n};\nconst de_InventoryOptionalFields = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return __expectString(entry);\n  });\n};\nconst de_InventoryS3BucketDestination = (output, context) => {\n  const contents = {};\n  if (output[_AIc] != null) {\n    contents[_AIc] = __expectString(output[_AIc]);\n  }\n  if (output[_B] != null) {\n    contents[_B] = __expectString(output[_B]);\n  }\n  if (output[_Fo] != null) {\n    contents[_Fo] = __expectString(output[_Fo]);\n  }\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_En] != null) {\n    contents[_En] = de_InventoryEncryption(output[_En], context);\n  }\n  return contents;\n};\nconst de_InventorySchedule = (output, context) => {\n  const contents = {};\n  if (output[_Fr] != null) {\n    contents[_Fr] = __expectString(output[_Fr]);\n  }\n  return contents;\n};\nconst de_LambdaFunctionConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output[_CF] != null) {\n    contents[_LFA] = __expectString(output[_CF]);\n  }\n  if (output.Event === \"\") {\n    contents[_Eve] = [];\n  } else if (output[_Ev] != null) {\n    contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n  }\n  return contents;\n};\nconst de_LambdaFunctionConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_LambdaFunctionConfiguration(entry, context);\n  });\n};\nconst de_LifecycleExpiration = (output, context) => {\n  const contents = {};\n  if (output[_Dat] != null) {\n    contents[_Dat] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Dat]));\n  }\n  if (output[_Da] != null) {\n    contents[_Da] = __strictParseInt32(output[_Da]);\n  }\n  if (output[_EODM] != null) {\n    contents[_EODM] = __parseBoolean(output[_EODM]);\n  }\n  return contents;\n};\nconst de_LifecycleRule = (output, context) => {\n  const contents = {};\n  if (output[_Exp] != null) {\n    contents[_Exp] = de_LifecycleExpiration(output[_Exp], context);\n  }\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_LifecycleRuleFilter(output[_F], context);\n  }\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  if (output.Transition === \"\") {\n    contents[_Tr] = [];\n  } else if (output[_Tra] != null) {\n    contents[_Tr] = de_TransitionList(__getArrayIfSingleItem(output[_Tra]), context);\n  }\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents[_NVT] = [];\n  } else if (output[_NVTo] != null) {\n    contents[_NVT] = de_NoncurrentVersionTransitionList(__getArrayIfSingleItem(output[_NVTo]), context);\n  }\n  if (output[_NVE] != null) {\n    contents[_NVE] = de_NoncurrentVersionExpiration(output[_NVE], context);\n  }\n  if (output[_AIMU] != null) {\n    contents[_AIMU] = de_AbortIncompleteMultipartUpload(output[_AIMU], context);\n  }\n  return contents;\n};\nconst de_LifecycleRuleAndOperator = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output.Tag === \"\") {\n    contents[_Tag] = [];\n  } else if (output[_Ta] != null) {\n    contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n  }\n  if (output[_OSGT] != null) {\n    contents[_OSGT] = __strictParseLong(output[_OSGT]);\n  }\n  if (output[_OSLT] != null) {\n    contents[_OSLT] = __strictParseLong(output[_OSLT]);\n  }\n  return contents;\n};\nconst de_LifecycleRuleFilter = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_Ta] != null) {\n    contents[_Ta] = de_Tag(output[_Ta], context);\n  }\n  if (output[_OSGT] != null) {\n    contents[_OSGT] = __strictParseLong(output[_OSGT]);\n  }\n  if (output[_OSLT] != null) {\n    contents[_OSLT] = __strictParseLong(output[_OSLT]);\n  }\n  if (output[_A] != null) {\n    contents[_A] = de_LifecycleRuleAndOperator(output[_A], context);\n  }\n  return contents;\n};\nconst de_LifecycleRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_LifecycleRule(entry, context);\n  });\n};\nconst de_LoggingEnabled = (output, context) => {\n  const contents = {};\n  if (output[_TB] != null) {\n    contents[_TB] = __expectString(output[_TB]);\n  }\n  if (output.TargetGrants === \"\") {\n    contents[_TG] = [];\n  } else if (output[_TG] != null && output[_TG][_G] != null) {\n    contents[_TG] = de_TargetGrants(__getArrayIfSingleItem(output[_TG][_G]), context);\n  }\n  if (output[_TP] != null) {\n    contents[_TP] = __expectString(output[_TP]);\n  }\n  if (output[_TOKF] != null) {\n    contents[_TOKF] = de_TargetObjectKeyFormat(output[_TOKF], context);\n  }\n  return contents;\n};\nconst de_Metrics = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  if (output[_ETv] != null) {\n    contents[_ETv] = de_ReplicationTimeValue(output[_ETv], context);\n  }\n  return contents;\n};\nconst de_MetricsAndOperator = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output.Tag === \"\") {\n    contents[_Tag] = [];\n  } else if (output[_Ta] != null) {\n    contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n  }\n  if (output[_APAc] != null) {\n    contents[_APAc] = __expectString(output[_APAc]);\n  }\n  return contents;\n};\nconst de_MetricsConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output.Filter === \"\") {} else if (output[_F] != null) {\n    contents[_F] = de_MetricsFilter(__expectUnion(output[_F]), context);\n  }\n  return contents;\n};\nconst de_MetricsConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_MetricsConfiguration(entry, context);\n  });\n};\nconst de_MetricsFilter = (output, context) => {\n  if (output[_P] != null) {\n    return {\n      Prefix: __expectString(output[_P])\n    };\n  }\n  if (output[_Ta] != null) {\n    return {\n      Tag: de_Tag(output[_Ta], context)\n    };\n  }\n  if (output[_APAc] != null) {\n    return {\n      AccessPointArn: __expectString(output[_APAc])\n    };\n  }\n  if (output[_A] != null) {\n    return {\n      And: de_MetricsAndOperator(output[_A], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_MultipartUpload = (output, context) => {\n  const contents = {};\n  if (output[_UI] != null) {\n    contents[_UI] = __expectString(output[_UI]);\n  }\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_Ini] != null) {\n    contents[_Ini] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Ini]));\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  if (output[_O] != null) {\n    contents[_O] = de_Owner(output[_O], context);\n  }\n  if (output[_In] != null) {\n    contents[_In] = de_Initiator(output[_In], context);\n  }\n  if (output[_CA] != null) {\n    contents[_CA] = __expectString(output[_CA]);\n  }\n  return contents;\n};\nconst de_MultipartUploadList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_MultipartUpload(entry, context);\n  });\n};\nconst de_NoncurrentVersionExpiration = (output, context) => {\n  const contents = {};\n  if (output[_ND] != null) {\n    contents[_ND] = __strictParseInt32(output[_ND]);\n  }\n  if (output[_NNV] != null) {\n    contents[_NNV] = __strictParseInt32(output[_NNV]);\n  }\n  return contents;\n};\nconst de_NoncurrentVersionTransition = (output, context) => {\n  const contents = {};\n  if (output[_ND] != null) {\n    contents[_ND] = __strictParseInt32(output[_ND]);\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  if (output[_NNV] != null) {\n    contents[_NNV] = __strictParseInt32(output[_NNV]);\n  }\n  return contents;\n};\nconst de_NoncurrentVersionTransitionList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_NoncurrentVersionTransition(entry, context);\n  });\n};\nconst de_NotificationConfigurationFilter = (output, context) => {\n  const contents = {};\n  if (output[_SKe] != null) {\n    contents[_K] = de_S3KeyFilter(output[_SKe], context);\n  }\n  return contents;\n};\nconst de__Object = (output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  if (output[_ETa] != null) {\n    contents[_ETa] = __expectString(output[_ETa]);\n  }\n  if (output.ChecksumAlgorithm === \"\") {\n    contents[_CA] = [];\n  } else if (output[_CA] != null) {\n    contents[_CA] = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[_CA]), context);\n  }\n  if (output[_Si] != null) {\n    contents[_Si] = __strictParseLong(output[_Si]);\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  if (output[_O] != null) {\n    contents[_O] = de_Owner(output[_O], context);\n  }\n  if (output[_RSe] != null) {\n    contents[_RSe] = de_RestoreStatus(output[_RSe], context);\n  }\n  return contents;\n};\nconst de_ObjectList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de__Object(entry, context);\n  });\n};\nconst de_ObjectLockConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_OLE] != null) {\n    contents[_OLE] = __expectString(output[_OLE]);\n  }\n  if (output[_Ru] != null) {\n    contents[_Ru] = de_ObjectLockRule(output[_Ru], context);\n  }\n  return contents;\n};\nconst de_ObjectLockLegalHold = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  return contents;\n};\nconst de_ObjectLockRetention = (output, context) => {\n  const contents = {};\n  if (output[_Mo] != null) {\n    contents[_Mo] = __expectString(output[_Mo]);\n  }\n  if (output[_RUD] != null) {\n    contents[_RUD] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_RUD]));\n  }\n  return contents;\n};\nconst de_ObjectLockRule = (output, context) => {\n  const contents = {};\n  if (output[_DRe] != null) {\n    contents[_DRe] = de_DefaultRetention(output[_DRe], context);\n  }\n  return contents;\n};\nconst de_ObjectPart = (output, context) => {\n  const contents = {};\n  if (output[_PN] != null) {\n    contents[_PN] = __strictParseInt32(output[_PN]);\n  }\n  if (output[_Si] != null) {\n    contents[_Si] = __strictParseLong(output[_Si]);\n  }\n  if (output[_CCRC] != null) {\n    contents[_CCRC] = __expectString(output[_CCRC]);\n  }\n  if (output[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(output[_CCRCC]);\n  }\n  if (output[_CSHA] != null) {\n    contents[_CSHA] = __expectString(output[_CSHA]);\n  }\n  if (output[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(output[_CSHAh]);\n  }\n  return contents;\n};\nconst de_ObjectVersion = (output, context) => {\n  const contents = {};\n  if (output[_ETa] != null) {\n    contents[_ETa] = __expectString(output[_ETa]);\n  }\n  if (output.ChecksumAlgorithm === \"\") {\n    contents[_CA] = [];\n  } else if (output[_CA] != null) {\n    contents[_CA] = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[_CA]), context);\n  }\n  if (output[_Si] != null) {\n    contents[_Si] = __strictParseLong(output[_Si]);\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_VI] != null) {\n    contents[_VI] = __expectString(output[_VI]);\n  }\n  if (output[_IL] != null) {\n    contents[_IL] = __parseBoolean(output[_IL]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  if (output[_O] != null) {\n    contents[_O] = de_Owner(output[_O], context);\n  }\n  if (output[_RSe] != null) {\n    contents[_RSe] = de_RestoreStatus(output[_RSe], context);\n  }\n  return contents;\n};\nconst de_ObjectVersionList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_ObjectVersion(entry, context);\n  });\n};\nconst de_Owner = (output, context) => {\n  const contents = {};\n  if (output[_DN] != null) {\n    contents[_DN] = __expectString(output[_DN]);\n  }\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  return contents;\n};\nconst de_OwnershipControls = (output, context) => {\n  const contents = {};\n  if (output.Rule === \"\") {\n    contents[_Rul] = [];\n  } else if (output[_Ru] != null) {\n    contents[_Rul] = de_OwnershipControlsRules(__getArrayIfSingleItem(output[_Ru]), context);\n  }\n  return contents;\n};\nconst de_OwnershipControlsRule = (output, context) => {\n  const contents = {};\n  if (output[_OO] != null) {\n    contents[_OO] = __expectString(output[_OO]);\n  }\n  return contents;\n};\nconst de_OwnershipControlsRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_OwnershipControlsRule(entry, context);\n  });\n};\nconst de_Part = (output, context) => {\n  const contents = {};\n  if (output[_PN] != null) {\n    contents[_PN] = __strictParseInt32(output[_PN]);\n  }\n  if (output[_LM] != null) {\n    contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n  }\n  if (output[_ETa] != null) {\n    contents[_ETa] = __expectString(output[_ETa]);\n  }\n  if (output[_Si] != null) {\n    contents[_Si] = __strictParseLong(output[_Si]);\n  }\n  if (output[_CCRC] != null) {\n    contents[_CCRC] = __expectString(output[_CCRC]);\n  }\n  if (output[_CCRCC] != null) {\n    contents[_CCRCC] = __expectString(output[_CCRCC]);\n  }\n  if (output[_CSHA] != null) {\n    contents[_CSHA] = __expectString(output[_CSHA]);\n  }\n  if (output[_CSHAh] != null) {\n    contents[_CSHAh] = __expectString(output[_CSHAh]);\n  }\n  return contents;\n};\nconst de_PartitionedPrefix = (output, context) => {\n  const contents = {};\n  if (output[_PDS] != null) {\n    contents[_PDS] = __expectString(output[_PDS]);\n  }\n  return contents;\n};\nconst de_Parts = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Part(entry, context);\n  });\n};\nconst de_PartsList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_ObjectPart(entry, context);\n  });\n};\nconst de_PolicyStatus = (output, context) => {\n  const contents = {};\n  if (output[_IP] != null) {\n    contents[_IP] = __parseBoolean(output[_IP]);\n  }\n  return contents;\n};\nconst de_Progress = (output, context) => {\n  const contents = {};\n  if (output[_BS] != null) {\n    contents[_BS] = __strictParseLong(output[_BS]);\n  }\n  if (output[_BP] != null) {\n    contents[_BP] = __strictParseLong(output[_BP]);\n  }\n  if (output[_BRy] != null) {\n    contents[_BRy] = __strictParseLong(output[_BRy]);\n  }\n  return contents;\n};\nconst de_PublicAccessBlockConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_BPA] != null) {\n    contents[_BPA] = __parseBoolean(output[_BPA]);\n  }\n  if (output[_IPA] != null) {\n    contents[_IPA] = __parseBoolean(output[_IPA]);\n  }\n  if (output[_BPP] != null) {\n    contents[_BPP] = __parseBoolean(output[_BPP]);\n  }\n  if (output[_RPB] != null) {\n    contents[_RPB] = __parseBoolean(output[_RPB]);\n  }\n  return contents;\n};\nconst de_QueueConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output[_Qu] != null) {\n    contents[_QA] = __expectString(output[_Qu]);\n  }\n  if (output.Event === \"\") {\n    contents[_Eve] = [];\n  } else if (output[_Ev] != null) {\n    contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n  }\n  return contents;\n};\nconst de_QueueConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_QueueConfiguration(entry, context);\n  });\n};\nconst de_Redirect = (output, context) => {\n  const contents = {};\n  if (output[_HN] != null) {\n    contents[_HN] = __expectString(output[_HN]);\n  }\n  if (output[_HRC] != null) {\n    contents[_HRC] = __expectString(output[_HRC]);\n  }\n  if (output[_Pr] != null) {\n    contents[_Pr] = __expectString(output[_Pr]);\n  }\n  if (output[_RKPW] != null) {\n    contents[_RKPW] = __expectString(output[_RKPW]);\n  }\n  if (output[_RKW] != null) {\n    contents[_RKW] = __expectString(output[_RKW]);\n  }\n  return contents;\n};\nconst de_RedirectAllRequestsTo = (output, context) => {\n  const contents = {};\n  if (output[_HN] != null) {\n    contents[_HN] = __expectString(output[_HN]);\n  }\n  if (output[_Pr] != null) {\n    contents[_Pr] = __expectString(output[_Pr]);\n  }\n  return contents;\n};\nconst de_ReplicaModifications = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  return contents;\n};\nconst de_ReplicationConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_Ro] != null) {\n    contents[_Ro] = __expectString(output[_Ro]);\n  }\n  if (output.Rule === \"\") {\n    contents[_Rul] = [];\n  } else if (output[_Ru] != null) {\n    contents[_Rul] = de_ReplicationRules(__getArrayIfSingleItem(output[_Ru]), context);\n  }\n  return contents;\n};\nconst de_ReplicationRule = (output, context) => {\n  const contents = {};\n  if (output[_ID_] != null) {\n    contents[_ID_] = __expectString(output[_ID_]);\n  }\n  if (output[_Pri] != null) {\n    contents[_Pri] = __strictParseInt32(output[_Pri]);\n  }\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_ReplicationRuleFilter(output[_F], context);\n  }\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  if (output[_SSC] != null) {\n    contents[_SSC] = de_SourceSelectionCriteria(output[_SSC], context);\n  }\n  if (output[_EOR] != null) {\n    contents[_EOR] = de_ExistingObjectReplication(output[_EOR], context);\n  }\n  if (output[_Des] != null) {\n    contents[_Des] = de_Destination(output[_Des], context);\n  }\n  if (output[_DMR] != null) {\n    contents[_DMR] = de_DeleteMarkerReplication(output[_DMR], context);\n  }\n  return contents;\n};\nconst de_ReplicationRuleAndOperator = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output.Tag === \"\") {\n    contents[_Tag] = [];\n  } else if (output[_Ta] != null) {\n    contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n  }\n  return contents;\n};\nconst de_ReplicationRuleFilter = (output, context) => {\n  const contents = {};\n  if (output[_P] != null) {\n    contents[_P] = __expectString(output[_P]);\n  }\n  if (output[_Ta] != null) {\n    contents[_Ta] = de_Tag(output[_Ta], context);\n  }\n  if (output[_A] != null) {\n    contents[_A] = de_ReplicationRuleAndOperator(output[_A], context);\n  }\n  return contents;\n};\nconst de_ReplicationRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_ReplicationRule(entry, context);\n  });\n};\nconst de_ReplicationTime = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  if (output[_Tim] != null) {\n    contents[_Tim] = de_ReplicationTimeValue(output[_Tim], context);\n  }\n  return contents;\n};\nconst de_ReplicationTimeValue = (output, context) => {\n  const contents = {};\n  if (output[_Mi] != null) {\n    contents[_Mi] = __strictParseInt32(output[_Mi]);\n  }\n  return contents;\n};\nconst de_RestoreStatus = (output, context) => {\n  const contents = {};\n  if (output[_IRIP] != null) {\n    contents[_IRIP] = __parseBoolean(output[_IRIP]);\n  }\n  if (output[_RED] != null) {\n    contents[_RED] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_RED]));\n  }\n  return contents;\n};\nconst de_RoutingRule = (output, context) => {\n  const contents = {};\n  if (output[_Con] != null) {\n    contents[_Con] = de_Condition(output[_Con], context);\n  }\n  if (output[_Red] != null) {\n    contents[_Red] = de_Redirect(output[_Red], context);\n  }\n  return contents;\n};\nconst de_RoutingRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_RoutingRule(entry, context);\n  });\n};\nconst de_S3KeyFilter = (output, context) => {\n  const contents = {};\n  if (output.FilterRule === \"\") {\n    contents[_FRi] = [];\n  } else if (output[_FR] != null) {\n    contents[_FRi] = de_FilterRuleList(__getArrayIfSingleItem(output[_FR]), context);\n  }\n  return contents;\n};\nconst de_ServerSideEncryptionByDefault = (output, context) => {\n  const contents = {};\n  if (output[_SSEA] != null) {\n    contents[_SSEA] = __expectString(output[_SSEA]);\n  }\n  if (output[_KMSMKID] != null) {\n    contents[_KMSMKID] = __expectString(output[_KMSMKID]);\n  }\n  return contents;\n};\nconst de_ServerSideEncryptionConfiguration = (output, context) => {\n  const contents = {};\n  if (output.Rule === \"\") {\n    contents[_Rul] = [];\n  } else if (output[_Ru] != null) {\n    contents[_Rul] = de_ServerSideEncryptionRules(__getArrayIfSingleItem(output[_Ru]), context);\n  }\n  return contents;\n};\nconst de_ServerSideEncryptionRule = (output, context) => {\n  const contents = {};\n  if (output[_ASSEBD] != null) {\n    contents[_ASSEBD] = de_ServerSideEncryptionByDefault(output[_ASSEBD], context);\n  }\n  if (output[_BKE] != null) {\n    contents[_BKE] = __parseBoolean(output[_BKE]);\n  }\n  return contents;\n};\nconst de_ServerSideEncryptionRules = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_ServerSideEncryptionRule(entry, context);\n  });\n};\nconst de_SessionCredentials = (output, context) => {\n  const contents = {};\n  if (output[_AKI] != null) {\n    contents[_AKI] = __expectString(output[_AKI]);\n  }\n  if (output[_SAK] != null) {\n    contents[_SAK] = __expectString(output[_SAK]);\n  }\n  if (output[_ST] != null) {\n    contents[_ST] = __expectString(output[_ST]);\n  }\n  if (output[_Exp] != null) {\n    contents[_Exp] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Exp]));\n  }\n  return contents;\n};\nconst de_SimplePrefix = (output, context) => {\n  const contents = {};\n  return contents;\n};\nconst de_SourceSelectionCriteria = (output, context) => {\n  const contents = {};\n  if (output[_SKEO] != null) {\n    contents[_SKEO] = de_SseKmsEncryptedObjects(output[_SKEO], context);\n  }\n  if (output[_RM] != null) {\n    contents[_RM] = de_ReplicaModifications(output[_RM], context);\n  }\n  return contents;\n};\nconst de_SSEKMS = (output, context) => {\n  const contents = {};\n  if (output[_KI] != null) {\n    contents[_KI] = __expectString(output[_KI]);\n  }\n  return contents;\n};\nconst de_SseKmsEncryptedObjects = (output, context) => {\n  const contents = {};\n  if (output[_S] != null) {\n    contents[_S] = __expectString(output[_S]);\n  }\n  return contents;\n};\nconst de_SSES3 = (output, context) => {\n  const contents = {};\n  return contents;\n};\nconst de_Stats = (output, context) => {\n  const contents = {};\n  if (output[_BS] != null) {\n    contents[_BS] = __strictParseLong(output[_BS]);\n  }\n  if (output[_BP] != null) {\n    contents[_BP] = __strictParseLong(output[_BP]);\n  }\n  if (output[_BRy] != null) {\n    contents[_BRy] = __strictParseLong(output[_BRy]);\n  }\n  return contents;\n};\nconst de_StorageClassAnalysis = (output, context) => {\n  const contents = {};\n  if (output[_DE] != null) {\n    contents[_DE] = de_StorageClassAnalysisDataExport(output[_DE], context);\n  }\n  return contents;\n};\nconst de_StorageClassAnalysisDataExport = (output, context) => {\n  const contents = {};\n  if (output[_OSV] != null) {\n    contents[_OSV] = __expectString(output[_OSV]);\n  }\n  if (output[_Des] != null) {\n    contents[_Des] = de_AnalyticsExportDestination(output[_Des], context);\n  }\n  return contents;\n};\nconst de_Tag = (output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = __expectString(output[_K]);\n  }\n  if (output[_Va] != null) {\n    contents[_Va] = __expectString(output[_Va]);\n  }\n  return contents;\n};\nconst de_TagSet = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Tag(entry, context);\n  });\n};\nconst de_TargetGrant = (output, context) => {\n  const contents = {};\n  if (output[_Gra] != null) {\n    contents[_Gra] = de_Grantee(output[_Gra], context);\n  }\n  if (output[_Pe] != null) {\n    contents[_Pe] = __expectString(output[_Pe]);\n  }\n  return contents;\n};\nconst de_TargetGrants = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_TargetGrant(entry, context);\n  });\n};\nconst de_TargetObjectKeyFormat = (output, context) => {\n  const contents = {};\n  if (output[_SPi] != null) {\n    contents[_SPi] = de_SimplePrefix(output[_SPi], context);\n  }\n  if (output[_PP] != null) {\n    contents[_PP] = de_PartitionedPrefix(output[_PP], context);\n  }\n  return contents;\n};\nconst de_Tiering = (output, context) => {\n  const contents = {};\n  if (output[_Da] != null) {\n    contents[_Da] = __strictParseInt32(output[_Da]);\n  }\n  if (output[_AT] != null) {\n    contents[_AT] = __expectString(output[_AT]);\n  }\n  return contents;\n};\nconst de_TieringList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Tiering(entry, context);\n  });\n};\nconst de_TopicConfiguration = (output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = __expectString(output[_I]);\n  }\n  if (output[_Top] != null) {\n    contents[_TA] = __expectString(output[_Top]);\n  }\n  if (output.Event === \"\") {\n    contents[_Eve] = [];\n  } else if (output[_Ev] != null) {\n    contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n  }\n  if (output[_F] != null) {\n    contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n  }\n  return contents;\n};\nconst de_TopicConfigurationList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_TopicConfiguration(entry, context);\n  });\n};\nconst de_Transition = (output, context) => {\n  const contents = {};\n  if (output[_Dat] != null) {\n    contents[_Dat] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Dat]));\n  }\n  if (output[_Da] != null) {\n    contents[_Da] = __strictParseInt32(output[_Da]);\n  }\n  if (output[_SC] != null) {\n    contents[_SC] = __expectString(output[_SC]);\n  }\n  return contents;\n};\nconst de_TransitionList = (output, context) => {\n  return (output || []).filter(e => e != null).map(entry => {\n    return de_Transition(entry, context);\n  });\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst _A = \"And\";\nconst _AAO = \"AnalyticsAndOperator\";\nconst _AC = \"AnalyticsConfiguration\";\nconst _ACL = \"ACL\";\nconst _ACLc = \"AccessControlList\";\nconst _ACLn = \"AnalyticsConfigurationList\";\nconst _ACP = \"AccessControlPolicy\";\nconst _ACT = \"AccessControlTranslation\";\nconst _ACc = \"AccelerateConfiguration\";\nconst _AD = \"AbortDate\";\nconst _AED = \"AnalyticsExportDestination\";\nconst _AF = \"AnalyticsFilter\";\nconst _AH = \"AllowedHeader\";\nconst _AHl = \"AllowedHeaders\";\nconst _AI = \"AnalyticsId\";\nconst _AIMU = \"AbortIncompleteMultipartUpload\";\nconst _AIc = \"AccountId\";\nconst _AKI = \"AccessKeyId\";\nconst _AM = \"AllowedMethod\";\nconst _AMl = \"AllowedMethods\";\nconst _AO = \"AllowedOrigin\";\nconst _AOl = \"AllowedOrigins\";\nconst _APA = \"AccessPointAlias\";\nconst _APAc = \"AccessPointArn\";\nconst _AQRD = \"AllowQuotedRecordDelimiter\";\nconst _AR = \"AcceptRanges\";\nconst _ARI = \"AbortRuleId\";\nconst _AS = \"ArchiveStatus\";\nconst _ASBD = \"AnalyticsS3BucketDestination\";\nconst _ASEFF = \"AnalyticsS3ExportFileFormat\";\nconst _ASSEBD = \"ApplyServerSideEncryptionByDefault\";\nconst _AT = \"AccessTier\";\nconst _Ac = \"Account\";\nconst _B = \"Bucket\";\nconst _BAI = \"BucketAccountId\";\nconst _BAS = \"BucketAccelerateStatus\";\nconst _BGR = \"BypassGovernanceRetention\";\nconst _BI = \"BucketInfo\";\nconst _BKE = \"BucketKeyEnabled\";\nconst _BLC = \"BucketLifecycleConfiguration\";\nconst _BLCu = \"BucketLocationConstraint\";\nconst _BLN = \"BucketLocationName\";\nconst _BLP = \"BucketLogsPermission\";\nconst _BLS = \"BucketLoggingStatus\";\nconst _BLT = \"BucketLocationType\";\nconst _BN = \"BucketName\";\nconst _BP = \"BytesProcessed\";\nconst _BPA = \"BlockPublicAcls\";\nconst _BPP = \"BlockPublicPolicy\";\nconst _BR = \"BucketRegion\";\nconst _BRy = \"BytesReturned\";\nconst _BS = \"BytesScanned\";\nconst _BT = \"BucketType\";\nconst _BVS = \"BucketVersioningStatus\";\nconst _Bu = \"Buckets\";\nconst _C = \"Credentials\";\nconst _CA = \"ChecksumAlgorithm\";\nconst _CACL = \"CannedACL\";\nconst _CBC = \"CreateBucketConfiguration\";\nconst _CC = \"CacheControl\";\nconst _CCRC = \"ChecksumCRC32\";\nconst _CCRCC = \"ChecksumCRC32C\";\nconst _CD = \"ContentDisposition\";\nconst _CDr = \"CreationDate\";\nconst _CE = \"ContentEncoding\";\nconst _CF = \"CloudFunction\";\nconst _CFC = \"CloudFunctionConfiguration\";\nconst _CL = \"ContentLanguage\";\nconst _CLo = \"ContentLength\";\nconst _CM = \"ChecksumMode\";\nconst _CMD = \"ContentMD5\";\nconst _CMU = \"CompletedMultipartUpload\";\nconst _CORSC = \"CORSConfiguration\";\nconst _CORSR = \"CORSRule\";\nconst _CORSRu = \"CORSRules\";\nconst _CP = \"CommonPrefixes\";\nconst _CPo = \"CompletedPart\";\nconst _CR = \"ContentRange\";\nconst _CRSBA = \"ConfirmRemoveSelfBucketAccess\";\nconst _CS = \"CopySource\";\nconst _CSHA = \"ChecksumSHA1\";\nconst _CSHAh = \"ChecksumSHA256\";\nconst _CSIM = \"CopySourceIfMatch\";\nconst _CSIMS = \"CopySourceIfModifiedSince\";\nconst _CSINM = \"CopySourceIfNoneMatch\";\nconst _CSIUS = \"CopySourceIfUnmodifiedSince\";\nconst _CSR = \"CopySourceRange\";\nconst _CSSSECA = \"CopySourceSSECustomerAlgorithm\";\nconst _CSSSECK = \"CopySourceSSECustomerKey\";\nconst _CSSSECKMD = \"CopySourceSSECustomerKeyMD5\";\nconst _CSV = \"CSV\";\nconst _CSVI = \"CopySourceVersionId\";\nconst _CSVIn = \"CSVInput\";\nconst _CSVO = \"CSVOutput\";\nconst _CT = \"ContentType\";\nconst _CTo = \"ContinuationToken\";\nconst _CTom = \"CompressionType\";\nconst _Ch = \"Checksum\";\nconst _Co = \"Contents\";\nconst _Cod = \"Code\";\nconst _Com = \"Comments\";\nconst _Con = \"Condition\";\nconst _D = \"Delimiter\";\nconst _DAI = \"DaysAfterInitiation\";\nconst _DE = \"DataExport\";\nconst _DM = \"DeleteMarker\";\nconst _DMR = \"DeleteMarkerReplication\";\nconst _DMRS = \"DeleteMarkerReplicationStatus\";\nconst _DMVI = \"DeleteMarkerVersionId\";\nconst _DMe = \"DeleteMarkers\";\nconst _DN = \"DisplayName\";\nconst _DR = \"DataRedundancy\";\nconst _DRe = \"DefaultRetention\";\nconst _Da = \"Days\";\nconst _Dat = \"Date\";\nconst _De = \"Deleted\";\nconst _Del = \"Delete\";\nconst _Des = \"Destination\";\nconst _Desc = \"Description\";\nconst _E = \"Expires\";\nconst _EA = \"EmailAddress\";\nconst _EBC = \"EventBridgeConfiguration\";\nconst _EBO = \"ExpectedBucketOwner\";\nconst _EC = \"ErrorCode\";\nconst _ECn = \"EncryptionConfiguration\";\nconst _ED = \"ErrorDocument\";\nconst _EH = \"ExposeHeaders\";\nconst _EHx = \"ExposeHeader\";\nconst _EM = \"ErrorMessage\";\nconst _EODM = \"ExpiredObjectDeleteMarker\";\nconst _EOR = \"ExistingObjectReplication\";\nconst _EORS = \"ExistingObjectReplicationStatus\";\nconst _ERP = \"EnableRequestProgress\";\nconst _ES = \"ExpiresString\";\nconst _ESBO = \"ExpectedSourceBucketOwner\";\nconst _ESx = \"ExpirationStatus\";\nconst _ET = \"EncodingType\";\nconst _ETa = \"ETag\";\nconst _ETn = \"EncryptionType\";\nconst _ETv = \"EventThreshold\";\nconst _ETx = \"ExpressionType\";\nconst _En = \"Encryption\";\nconst _Ena = \"Enabled\";\nconst _End = \"End\";\nconst _Er = \"Error\";\nconst _Err = \"Errors\";\nconst _Ev = \"Event\";\nconst _Eve = \"Events\";\nconst _Ex = \"Expression\";\nconst _Exp = \"Expiration\";\nconst _F = \"Filter\";\nconst _FD = \"FieldDelimiter\";\nconst _FHI = \"FileHeaderInfo\";\nconst _FO = \"FetchOwner\";\nconst _FR = \"FilterRule\";\nconst _FRN = \"FilterRuleName\";\nconst _FRV = \"FilterRuleValue\";\nconst _FRi = \"FilterRules\";\nconst _Fi = \"Field\";\nconst _Fo = \"Format\";\nconst _Fr = \"Frequency\";\nconst _G = \"Grant\";\nconst _GFC = \"GrantFullControl\";\nconst _GJP = \"GlacierJobParameters\";\nconst _GR = \"GrantRead\";\nconst _GRACP = \"GrantReadACP\";\nconst _GW = \"GrantWrite\";\nconst _GWACP = \"GrantWriteACP\";\nconst _Gr = \"Grants\";\nconst _Gra = \"Grantee\";\nconst _HECRE = \"HttpErrorCodeReturnedEquals\";\nconst _HN = \"HostName\";\nconst _HRC = \"HttpRedirectCode\";\nconst _I = \"Id\";\nconst _IC = \"InventoryConfiguration\";\nconst _ICL = \"InventoryConfigurationList\";\nconst _ID = \"IndexDocument\";\nconst _ID_ = \"ID\";\nconst _IDn = \"InventoryDestination\";\nconst _IE = \"IsEnabled\";\nconst _IEn = \"InventoryEncryption\";\nconst _IF = \"InventoryFilter\";\nconst _IFn = \"InventoryFormat\";\nconst _IFnv = \"InventoryFrequency\";\nconst _II = \"InventoryId\";\nconst _IIOV = \"InventoryIncludedObjectVersions\";\nconst _IL = \"IsLatest\";\nconst _IM = \"IfMatch\";\nconst _IMS = \"IfModifiedSince\";\nconst _INM = \"IfNoneMatch\";\nconst _IOF = \"InventoryOptionalField\";\nconst _IOV = \"IncludedObjectVersions\";\nconst _IP = \"IsPublic\";\nconst _IPA = \"IgnorePublicAcls\";\nconst _IRIP = \"IsRestoreInProgress\";\nconst _IS = \"InputSerialization\";\nconst _ISBD = \"InventoryS3BucketDestination\";\nconst _ISn = \"InventorySchedule\";\nconst _IT = \"IsTruncated\";\nconst _ITAO = \"IntelligentTieringAndOperator\";\nconst _ITAT = \"IntelligentTieringAccessTier\";\nconst _ITC = \"IntelligentTieringConfiguration\";\nconst _ITCL = \"IntelligentTieringConfigurationList\";\nconst _ITD = \"IntelligentTieringDays\";\nconst _ITF = \"IntelligentTieringFilter\";\nconst _ITI = \"IntelligentTieringId\";\nconst _ITS = \"IntelligentTieringStatus\";\nconst _IUS = \"IfUnmodifiedSince\";\nconst _In = \"Initiator\";\nconst _Ini = \"Initiated\";\nconst _JSON = \"JSON\";\nconst _JSONI = \"JSONInput\";\nconst _JSONO = \"JSONOutput\";\nconst _JSONT = \"JSONType\";\nconst _K = \"Key\";\nconst _KC = \"KeyCount\";\nconst _KI = \"KeyId\";\nconst _KM = \"KeyMarker\";\nconst _KMSC = \"KMSContext\";\nconst _KMSKI = \"KMSKeyId\";\nconst _KMSMKID = \"KMSMasterKeyID\";\nconst _KPE = \"KeyPrefixEquals\";\nconst _L = \"Location\";\nconst _LC = \"LocationConstraint\";\nconst _LE = \"LoggingEnabled\";\nconst _LEi = \"LifecycleExpiration\";\nconst _LFA = \"LambdaFunctionArn\";\nconst _LFC = \"LambdaFunctionConfigurations\";\nconst _LFCa = \"LambdaFunctionConfiguration\";\nconst _LI = \"LocationInfo\";\nconst _LM = \"LastModified\";\nconst _LNAS = \"LocationNameAsString\";\nconst _LP = \"LocationPrefix\";\nconst _LR = \"LifecycleRule\";\nconst _LRAO = \"LifecycleRuleAndOperator\";\nconst _LRF = \"LifecycleRuleFilter\";\nconst _LT = \"LocationType\";\nconst _M = \"Marker\";\nconst _MAO = \"MetricsAndOperator\";\nconst _MAS = \"MaxAgeSeconds\";\nconst _MB = \"MaxBuckets\";\nconst _MC = \"MetricsConfiguration\";\nconst _MCL = \"MetricsConfigurationList\";\nconst _MD = \"MetadataDirective\";\nconst _MDB = \"MaxDirectoryBuckets\";\nconst _MDf = \"MfaDelete\";\nconst _ME = \"MetadataEntry\";\nconst _MF = \"MetricsFilter\";\nconst _MFA = \"MFA\";\nconst _MFAD = \"MFADelete\";\nconst _MI = \"MetricsId\";\nconst _MK = \"MaxKeys\";\nconst _MKe = \"MetadataKey\";\nconst _MM = \"MissingMeta\";\nconst _MP = \"MaxParts\";\nconst _MS = \"MetricsStatus\";\nconst _MU = \"MaxUploads\";\nconst _MV = \"MetadataValue\";\nconst _Me = \"Metrics\";\nconst _Mes = \"Message\";\nconst _Mi = \"Minutes\";\nconst _Mo = \"Mode\";\nconst _N = \"Name\";\nconst _NC = \"NotificationConfiguration\";\nconst _NCF = \"NotificationConfigurationFilter\";\nconst _NCT = \"NextContinuationToken\";\nconst _ND = \"NoncurrentDays\";\nconst _NI = \"NotificationId\";\nconst _NKM = \"NextKeyMarker\";\nconst _NM = \"NextMarker\";\nconst _NNV = \"NewerNoncurrentVersions\";\nconst _NPNM = \"NextPartNumberMarker\";\nconst _NUIM = \"NextUploadIdMarker\";\nconst _NVE = \"NoncurrentVersionExpiration\";\nconst _NVIM = \"NextVersionIdMarker\";\nconst _NVT = \"NoncurrentVersionTransitions\";\nconst _NVTo = \"NoncurrentVersionTransition\";\nconst _O = \"Owner\";\nconst _OA = \"ObjectAttributes\";\nconst _OC = \"OwnershipControls\";\nconst _OCACL = \"ObjectCannedACL\";\nconst _OCR = \"OwnershipControlsRule\";\nconst _OF = \"OptionalFields\";\nconst _OI = \"ObjectIdentifier\";\nconst _OK = \"ObjectKey\";\nconst _OL = \"OutputLocation\";\nconst _OLC = \"ObjectLockConfiguration\";\nconst _OLE = \"ObjectLockEnabled\";\nconst _OLEFB = \"ObjectLockEnabledForBucket\";\nconst _OLLH = \"ObjectLockLegalHold\";\nconst _OLLHS = \"ObjectLockLegalHoldStatus\";\nconst _OLM = \"ObjectLockMode\";\nconst _OLR = \"ObjectLockRetention\";\nconst _OLRM = \"ObjectLockRetentionMode\";\nconst _OLRUD = \"ObjectLockRetainUntilDate\";\nconst _OLRb = \"ObjectLockRule\";\nconst _OO = \"ObjectOwnership\";\nconst _OOA = \"OptionalObjectAttributes\";\nconst _OOw = \"OwnerOverride\";\nconst _OP = \"ObjectParts\";\nconst _OS = \"OutputSerialization\";\nconst _OSGT = \"ObjectSizeGreaterThan\";\nconst _OSGTB = \"ObjectSizeGreaterThanBytes\";\nconst _OSLT = \"ObjectSizeLessThan\";\nconst _OSLTB = \"ObjectSizeLessThanBytes\";\nconst _OSV = \"OutputSchemaVersion\";\nconst _OSb = \"ObjectSize\";\nconst _OVI = \"ObjectVersionId\";\nconst _Ob = \"Objects\";\nconst _P = \"Prefix\";\nconst _PABC = \"PublicAccessBlockConfiguration\";\nconst _PC = \"PartsCount\";\nconst _PDS = \"PartitionDateSource\";\nconst _PI = \"ParquetInput\";\nconst _PN = \"PartNumber\";\nconst _PNM = \"PartNumberMarker\";\nconst _PP = \"PartitionedPrefix\";\nconst _Pa = \"Payer\";\nconst _Par = \"Part\";\nconst _Parq = \"Parquet\";\nconst _Part = \"Parts\";\nconst _Pe = \"Permission\";\nconst _Pr = \"Protocol\";\nconst _Pri = \"Priority\";\nconst _Q = \"Quiet\";\nconst _QA = \"QueueArn\";\nconst _QC = \"QueueConfiguration\";\nconst _QCu = \"QueueConfigurations\";\nconst _QCuo = \"QuoteCharacter\";\nconst _QEC = \"QuoteEscapeCharacter\";\nconst _QF = \"QuoteFields\";\nconst _Qu = \"Queue\";\nconst _R = \"Range\";\nconst _RART = \"RedirectAllRequestsTo\";\nconst _RC = \"RequestCharged\";\nconst _RCC = \"ResponseCacheControl\";\nconst _RCD = \"ResponseContentDisposition\";\nconst _RCE = \"ResponseContentEncoding\";\nconst _RCL = \"ResponseContentLanguage\";\nconst _RCT = \"ResponseContentType\";\nconst _RCe = \"ReplicationConfiguration\";\nconst _RD = \"RecordDelimiter\";\nconst _RE = \"ResponseExpires\";\nconst _RED = \"RestoreExpiryDate\";\nconst _RKKID = \"ReplicaKmsKeyID\";\nconst _RKPW = \"ReplaceKeyPrefixWith\";\nconst _RKW = \"ReplaceKeyWith\";\nconst _RM = \"ReplicaModifications\";\nconst _RMS = \"ReplicaModificationsStatus\";\nconst _ROP = \"RestoreOutputPath\";\nconst _RP = \"RequestPayer\";\nconst _RPB = \"RestrictPublicBuckets\";\nconst _RPC = \"RequestPaymentConfiguration\";\nconst _RPe = \"RequestProgress\";\nconst _RR = \"RequestRoute\";\nconst _RRAO = \"ReplicationRuleAndOperator\";\nconst _RRF = \"ReplicationRuleFilter\";\nconst _RRS = \"ReplicationRuleStatus\";\nconst _RRT = \"RestoreRequestType\";\nconst _RRe = \"ReplicationRule\";\nconst _RRes = \"RestoreRequest\";\nconst _RRo = \"RoutingRules\";\nconst _RRou = \"RoutingRule\";\nconst _RS = \"ReplicationStatus\";\nconst _RSe = \"RestoreStatus\";\nconst _RT = \"RequestToken\";\nconst _RTS = \"ReplicationTimeStatus\";\nconst _RTV = \"ReplicationTimeValue\";\nconst _RTe = \"ReplicationTime\";\nconst _RUD = \"RetainUntilDate\";\nconst _Re = \"Restore\";\nconst _Red = \"Redirect\";\nconst _Ro = \"Role\";\nconst _Ru = \"Rule\";\nconst _Rul = \"Rules\";\nconst _S = \"Status\";\nconst _SA = \"StartAfter\";\nconst _SAK = \"SecretAccessKey\";\nconst _SBD = \"S3BucketDestination\";\nconst _SC = \"StorageClass\";\nconst _SCA = \"StorageClassAnalysis\";\nconst _SCADE = \"StorageClassAnalysisDataExport\";\nconst _SCASV = \"StorageClassAnalysisSchemaVersion\";\nconst _SCt = \"StatusCode\";\nconst _SDV = \"SkipDestinationValidation\";\nconst _SK = \"SSE-KMS\";\nconst _SKEO = \"SseKmsEncryptedObjects\";\nconst _SKEOS = \"SseKmsEncryptedObjectsStatus\";\nconst _SKF = \"S3KeyFilter\";\nconst _SKe = \"S3Key\";\nconst _SL = \"S3Location\";\nconst _SM = \"SessionMode\";\nconst _SOCR = \"SelectObjectContentRequest\";\nconst _SP = \"SelectParameters\";\nconst _SPi = \"SimplePrefix\";\nconst _SR = \"ScanRange\";\nconst _SS = \"SSE-S3\";\nconst _SSC = \"SourceSelectionCriteria\";\nconst _SSE = \"ServerSideEncryption\";\nconst _SSEA = \"SSEAlgorithm\";\nconst _SSEBD = \"ServerSideEncryptionByDefault\";\nconst _SSEC = \"ServerSideEncryptionConfiguration\";\nconst _SSECA = \"SSECustomerAlgorithm\";\nconst _SSECK = \"SSECustomerKey\";\nconst _SSECKMD = \"SSECustomerKeyMD5\";\nconst _SSEKMS = \"SSEKMS\";\nconst _SSEKMSEC = \"SSEKMSEncryptionContext\";\nconst _SSEKMSKI = \"SSEKMSKeyId\";\nconst _SSER = \"ServerSideEncryptionRule\";\nconst _SSES = \"SSES3\";\nconst _ST = \"SessionToken\";\nconst _S_ = \"S3\";\nconst _Sc = \"Schedule\";\nconst _Se = \"Setting\";\nconst _Si = \"Size\";\nconst _St = \"Start\";\nconst _Su = \"Suffix\";\nconst _T = \"Tagging\";\nconst _TA = \"TopicArn\";\nconst _TB = \"TargetBucket\";\nconst _TC = \"TagCount\";\nconst _TCo = \"TopicConfiguration\";\nconst _TCop = \"TopicConfigurations\";\nconst _TD = \"TaggingDirective\";\nconst _TDMOS = \"TransitionDefaultMinimumObjectSize\";\nconst _TG = \"TargetGrants\";\nconst _TGa = \"TargetGrant\";\nconst _TOKF = \"TargetObjectKeyFormat\";\nconst _TP = \"TargetPrefix\";\nconst _TPC = \"TotalPartsCount\";\nconst _TS = \"TagSet\";\nconst _TSC = \"TransitionStorageClass\";\nconst _Ta = \"Tag\";\nconst _Tag = \"Tags\";\nconst _Ti = \"Tier\";\nconst _Tie = \"Tierings\";\nconst _Tier = \"Tiering\";\nconst _Tim = \"Time\";\nconst _To = \"Token\";\nconst _Top = \"Topic\";\nconst _Tr = \"Transitions\";\nconst _Tra = \"Transition\";\nconst _Ty = \"Type\";\nconst _U = \"Upload\";\nconst _UI = \"UploadId\";\nconst _UIM = \"UploadIdMarker\";\nconst _UM = \"UserMetadata\";\nconst _URI = \"URI\";\nconst _Up = \"Uploads\";\nconst _V = \"Version\";\nconst _VC = \"VersionCount\";\nconst _VCe = \"VersioningConfiguration\";\nconst _VI = \"VersionId\";\nconst _VIM = \"VersionIdMarker\";\nconst _Va = \"Value\";\nconst _Ve = \"Versions\";\nconst _WC = \"WebsiteConfiguration\";\nconst _WRL = \"WebsiteRedirectLocation\";\nconst _Y = \"Years\";\nconst _a = \"analytics\";\nconst _ac = \"accelerate\";\nconst _acl = \"acl\";\nconst _ar = \"accept-ranges\";\nconst _at = \"attributes\";\nconst _br = \"bucket-region\";\nconst _c = \"cors\";\nconst _cc = \"cache-control\";\nconst _cd = \"content-disposition\";\nconst _ce = \"content-encoding\";\nconst _cl = \"content-language\";\nconst _cl_ = \"content-length\";\nconst _cm = \"content-md5\";\nconst _cr = \"content-range\";\nconst _ct = \"content-type\";\nconst _ct_ = \"continuation-token\";\nconst _d = \"delete\";\nconst _de = \"delimiter\";\nconst _e = \"expires\";\nconst _en = \"encryption\";\nconst _et = \"encoding-type\";\nconst _eta = \"etag\";\nconst _ex = \"expiresstring\";\nconst _fo = \"fetch-owner\";\nconst _i = \"id\";\nconst _im = \"if-match\";\nconst _ims = \"if-modified-since\";\nconst _in = \"inventory\";\nconst _inm = \"if-none-match\";\nconst _it = \"intelligent-tiering\";\nconst _ius = \"if-unmodified-since\";\nconst _km = \"key-marker\";\nconst _l = \"lifecycle\";\nconst _lh = \"legal-hold\";\nconst _lm = \"last-modified\";\nconst _lo = \"location\";\nconst _log = \"logging\";\nconst _lt = \"list-type\";\nconst _m = \"metrics\";\nconst _ma = \"marker\";\nconst _mb = \"max-buckets\";\nconst _mdb = \"max-directory-buckets\";\nconst _me = \"member\";\nconst _mk = \"max-keys\";\nconst _mp = \"max-parts\";\nconst _mu = \"max-uploads\";\nconst _n = \"notification\";\nconst _oC = \"ownershipControls\";\nconst _ol = \"object-lock\";\nconst _p = \"policy\";\nconst _pAB = \"publicAccessBlock\";\nconst _pN = \"partNumber\";\nconst _pS = \"policyStatus\";\nconst _pnm = \"part-number-marker\";\nconst _pr = \"prefix\";\nconst _r = \"replication\";\nconst _rP = \"requestPayment\";\nconst _ra = \"range\";\nconst _rcc = \"response-cache-control\";\nconst _rcd = \"response-content-disposition\";\nconst _rce = \"response-content-encoding\";\nconst _rcl = \"response-content-language\";\nconst _rct = \"response-content-type\";\nconst _re = \"response-expires\";\nconst _res = \"restore\";\nconst _ret = \"retention\";\nconst _s = \"session\";\nconst _sa = \"start-after\";\nconst _se = \"select\";\nconst _st = \"select-type\";\nconst _t = \"tagging\";\nconst _to = \"torrent\";\nconst _u = \"uploads\";\nconst _uI = \"uploadId\";\nconst _uim = \"upload-id-marker\";\nconst _v = \"versioning\";\nconst _vI = \"versionId\";\nconst _ve = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\nconst _ver = \"versions\";\nconst _vim = \"version-id-marker\";\nconst _w = \"website\";\nconst _x = \"xsi:type\";\nconst _xaa = \"x-amz-acl\";\nconst _xaad = \"x-amz-abort-date\";\nconst _xaapa = \"x-amz-access-point-alias\";\nconst _xaari = \"x-amz-abort-rule-id\";\nconst _xaas = \"x-amz-archive-status\";\nconst _xabgr = \"x-amz-bypass-governance-retention\";\nconst _xabln = \"x-amz-bucket-location-name\";\nconst _xablt = \"x-amz-bucket-location-type\";\nconst _xabole = \"x-amz-bucket-object-lock-enabled\";\nconst _xabolt = \"x-amz-bucket-object-lock-token\";\nconst _xabr = \"x-amz-bucket-region\";\nconst _xaca = \"x-amz-checksum-algorithm\";\nconst _xacc = \"x-amz-checksum-crc32\";\nconst _xacc_ = \"x-amz-checksum-crc32c\";\nconst _xacm = \"x-amz-checksum-mode\";\nconst _xacrsba = \"x-amz-confirm-remove-self-bucket-access\";\nconst _xacs = \"x-amz-checksum-sha1\";\nconst _xacs_ = \"x-amz-checksum-sha256\";\nconst _xacs__ = \"x-amz-copy-source\";\nconst _xacsim = \"x-amz-copy-source-if-match\";\nconst _xacsims = \"x-amz-copy-source-if-modified-since\";\nconst _xacsinm = \"x-amz-copy-source-if-none-match\";\nconst _xacsius = \"x-amz-copy-source-if-unmodified-since\";\nconst _xacsm = \"x-amz-create-session-mode\";\nconst _xacsr = \"x-amz-copy-source-range\";\nconst _xacssseca = \"x-amz-copy-source-server-side-encryption-customer-algorithm\";\nconst _xacssseck = \"x-amz-copy-source-server-side-encryption-customer-key\";\nconst _xacssseckm = \"x-amz-copy-source-server-side-encryption-customer-key-md5\";\nconst _xacsvi = \"x-amz-copy-source-version-id\";\nconst _xadm = \"x-amz-delete-marker\";\nconst _xae = \"x-amz-expiration\";\nconst _xaebo = \"x-amz-expected-bucket-owner\";\nconst _xafec = \"x-amz-fwd-error-code\";\nconst _xafem = \"x-amz-fwd-error-message\";\nconst _xafhar = \"x-amz-fwd-header-accept-ranges\";\nconst _xafhcc = \"x-amz-fwd-header-cache-control\";\nconst _xafhcd = \"x-amz-fwd-header-content-disposition\";\nconst _xafhce = \"x-amz-fwd-header-content-encoding\";\nconst _xafhcl = \"x-amz-fwd-header-content-language\";\nconst _xafhcr = \"x-amz-fwd-header-content-range\";\nconst _xafhct = \"x-amz-fwd-header-content-type\";\nconst _xafhe = \"x-amz-fwd-header-etag\";\nconst _xafhe_ = \"x-amz-fwd-header-expires\";\nconst _xafhlm = \"x-amz-fwd-header-last-modified\";\nconst _xafhxacc = \"x-amz-fwd-header-x-amz-checksum-crc32\";\nconst _xafhxacc_ = \"x-amz-fwd-header-x-amz-checksum-crc32c\";\nconst _xafhxacs = \"x-amz-fwd-header-x-amz-checksum-sha1\";\nconst _xafhxacs_ = \"x-amz-fwd-header-x-amz-checksum-sha256\";\nconst _xafhxadm = \"x-amz-fwd-header-x-amz-delete-marker\";\nconst _xafhxae = \"x-amz-fwd-header-x-amz-expiration\";\nconst _xafhxamm = \"x-amz-fwd-header-x-amz-missing-meta\";\nconst _xafhxampc = \"x-amz-fwd-header-x-amz-mp-parts-count\";\nconst _xafhxaollh = \"x-amz-fwd-header-x-amz-object-lock-legal-hold\";\nconst _xafhxaolm = \"x-amz-fwd-header-x-amz-object-lock-mode\";\nconst _xafhxaolrud = \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\";\nconst _xafhxar = \"x-amz-fwd-header-x-amz-restore\";\nconst _xafhxarc = \"x-amz-fwd-header-x-amz-request-charged\";\nconst _xafhxars = \"x-amz-fwd-header-x-amz-replication-status\";\nconst _xafhxasc = \"x-amz-fwd-header-x-amz-storage-class\";\nconst _xafhxasse = \"x-amz-fwd-header-x-amz-server-side-encryption\";\nconst _xafhxasseakki = \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\";\nconst _xafhxassebke = \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\";\nconst _xafhxasseca = \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\";\nconst _xafhxasseckm = \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\";\nconst _xafhxatc = \"x-amz-fwd-header-x-amz-tagging-count\";\nconst _xafhxavi = \"x-amz-fwd-header-x-amz-version-id\";\nconst _xafs = \"x-amz-fwd-status\";\nconst _xagfc = \"x-amz-grant-full-control\";\nconst _xagr = \"x-amz-grant-read\";\nconst _xagra = \"x-amz-grant-read-acp\";\nconst _xagw = \"x-amz-grant-write\";\nconst _xagwa = \"x-amz-grant-write-acp\";\nconst _xam = \"x-amz-mfa\";\nconst _xamd = \"x-amz-metadata-directive\";\nconst _xamm = \"x-amz-missing-meta\";\nconst _xamp = \"x-amz-max-parts\";\nconst _xampc = \"x-amz-mp-parts-count\";\nconst _xaoa = \"x-amz-object-attributes\";\nconst _xaollh = \"x-amz-object-lock-legal-hold\";\nconst _xaolm = \"x-amz-object-lock-mode\";\nconst _xaolrud = \"x-amz-object-lock-retain-until-date\";\nconst _xaoo = \"x-amz-object-ownership\";\nconst _xaooa = \"x-amz-optional-object-attributes\";\nconst _xapnm = \"x-amz-part-number-marker\";\nconst _xar = \"x-amz-restore\";\nconst _xarc = \"x-amz-request-charged\";\nconst _xarop = \"x-amz-restore-output-path\";\nconst _xarp = \"x-amz-request-payer\";\nconst _xarr = \"x-amz-request-route\";\nconst _xars = \"x-amz-replication-status\";\nconst _xart = \"x-amz-request-token\";\nconst _xasc = \"x-amz-storage-class\";\nconst _xasca = \"x-amz-sdk-checksum-algorithm\";\nconst _xasdv = \"x-amz-skip-destination-validation\";\nconst _xasebo = \"x-amz-source-expected-bucket-owner\";\nconst _xasse = \"x-amz-server-side-encryption\";\nconst _xasseakki = \"x-amz-server-side-encryption-aws-kms-key-id\";\nconst _xassebke = \"x-amz-server-side-encryption-bucket-key-enabled\";\nconst _xassec = \"x-amz-server-side-encryption-context\";\nconst _xasseca = \"x-amz-server-side-encryption-customer-algorithm\";\nconst _xasseck = \"x-amz-server-side-encryption-customer-key\";\nconst _xasseckm = \"x-amz-server-side-encryption-customer-key-md5\";\nconst _xat = \"x-amz-tagging\";\nconst _xatc = \"x-amz-tagging-count\";\nconst _xatd = \"x-amz-tagging-directive\";\nconst _xatdmos = \"x-amz-transition-default-minimum-object-size\";\nconst _xavi = \"x-amz-version-id\";\nconst _xawrl = \"x-amz-website-redirect-location\";\nconst _xi = \"x-id\";","import { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { CreateSessionOutputFilterSensitiveLog, CreateSessionRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { de_CreateSessionCommand, se_CreateSessionCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class CreateSessionCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  DisableS3ExpressSessionAuth: {\n    type: \"staticContextParams\",\n    value: true\n  },\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getThrow200ExceptionsPlugin(config)];\n}).s(\"AmazonS3\", \"CreateSession\", {}).n(\"S3Client\", \"CreateSessionCommand\").f(CreateSessionRequestFilterSensitiveLog, CreateSessionOutputFilterSensitiveLog).ser(se_CreateSessionCommand).de(de_CreateSessionCommand).build() {}","{\n  \"name\": \"@aws-sdk/client-s3\",\n  \"description\": \"AWS SDK for JavaScript S3 Client for Node.js, Browser and React Native\",\n  \"version\": \"3.693.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-s3\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo s3\",\n    \"test\": \"yarn g:vitest run\",\n    \"test:browser\": \"node ./test/browser-build/esbuild && vitest run -c vitest.config.browser.ts --mode development\",\n    \"test:browser:watch\": \"node ./test/browser-build/esbuild && yarn g:vitest watch -c vitest.config.browser.ts\",\n    \"test:e2e\": \"yarn g:vitest run -c vitest.config.e2e.ts --mode development && yarn test:browser\",\n    \"test:e2e:watch\": \"yarn g:vitest watch -c vitest.config.e2e.ts\",\n    \"test:watch\": \"yarn g:vitest watch\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha1-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.693.0\",\n    \"@aws-sdk/client-sts\": \"3.693.0\",\n    \"@aws-sdk/core\": \"3.693.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.693.0\",\n    \"@aws-sdk/middleware-bucket-endpoint\": \"3.693.0\",\n    \"@aws-sdk/middleware-expect-continue\": \"3.693.0\",\n    \"@aws-sdk/middleware-flexible-checksums\": \"3.693.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.693.0\",\n    \"@aws-sdk/middleware-location-constraint\": \"3.693.0\",\n    \"@aws-sdk/middleware-logger\": \"3.693.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.693.0\",\n    \"@aws-sdk/middleware-sdk-s3\": \"3.693.0\",\n    \"@aws-sdk/middleware-ssec\": \"3.693.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.693.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.693.0\",\n    \"@aws-sdk/signature-v4-multi-region\": \"3.693.0\",\n    \"@aws-sdk/types\": \"3.692.0\",\n    \"@aws-sdk/util-endpoints\": \"3.693.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.693.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.693.0\",\n    \"@aws-sdk/xml-builder\": \"3.693.0\",\n    \"@smithy/config-resolver\": \"^3.0.11\",\n    \"@smithy/core\": \"^2.5.2\",\n    \"@smithy/eventstream-serde-browser\": \"^3.0.12\",\n    \"@smithy/eventstream-serde-config-resolver\": \"^3.0.9\",\n    \"@smithy/eventstream-serde-node\": \"^3.0.11\",\n    \"@smithy/fetch-http-handler\": \"^4.1.0\",\n    \"@smithy/hash-blob-browser\": \"^3.1.8\",\n    \"@smithy/hash-node\": \"^3.0.9\",\n    \"@smithy/hash-stream-node\": \"^3.1.8\",\n    \"@smithy/invalid-dependency\": \"^3.0.9\",\n    \"@smithy/md5-js\": \"^3.0.9\",\n    \"@smithy/middleware-content-length\": \"^3.0.11\",\n    \"@smithy/middleware-endpoint\": \"^3.2.2\",\n    \"@smithy/middleware-retry\": \"^3.0.26\",\n    \"@smithy/middleware-serde\": \"^3.0.9\",\n    \"@smithy/middleware-stack\": \"^3.0.9\",\n    \"@smithy/node-config-provider\": \"^3.1.10\",\n    \"@smithy/node-http-handler\": \"^3.3.0\",\n    \"@smithy/protocol-http\": \"^4.1.6\",\n    \"@smithy/smithy-client\": \"^3.4.3\",\n    \"@smithy/types\": \"^3.7.0\",\n    \"@smithy/url-parser\": \"^3.0.9\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.26\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.26\",\n    \"@smithy/util-endpoints\": \"^2.1.5\",\n    \"@smithy/util-middleware\": \"^3.0.9\",\n    \"@smithy/util-retry\": \"^3.0.9\",\n    \"@smithy/util-stream\": \"^3.3.0\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"@smithy/util-waiter\": \"^3.1.8\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/signature-v4-crt\": \"3.693.0\",\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-s3\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-s3\"\n  }\n}\n","export const fromUtf8 = input => new TextEncoder().encode(input);","export function isEmptyData(data) {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n  return data.byteLength === 0;\n}\n","export var SHA_1_HASH = {\n  name: \"SHA-1\"\n};\nexport var SHA_1_HMAC_ALGO = {\n  name: \"HMAC\",\n  hash: SHA_1_HASH\n};\nexport var EMPTY_DATA_SHA_1 = new Uint8Array([218, 57, 163, 238, 94, 107, 75, 13, 50, 85, 191, 239, 149, 96, 24, 144, 175, 216, 7, 9]);\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { isEmptyData } from \"./isEmptyData\";\nimport { EMPTY_DATA_SHA_1, SHA_1_HASH, SHA_1_HMAC_ALGO } from \"./constants\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\nvar Sha1 = /** @class */function () {\n  function Sha1(secret) {\n    this.toHash = new Uint8Array(0);\n    if (secret !== void 0) {\n      this.key = new Promise(function (resolve, reject) {\n        locateWindow().crypto.subtle.importKey(\"raw\", convertToBuffer(secret), SHA_1_HMAC_ALGO, false, [\"sign\"]).then(resolve, reject);\n      });\n      this.key.catch(function () {});\n    }\n  }\n  Sha1.prototype.update = function (data) {\n    if (isEmptyData(data)) {\n      return;\n    }\n    var update = convertToBuffer(data);\n    var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n    typedArray.set(this.toHash, 0);\n    typedArray.set(update, this.toHash.byteLength);\n    this.toHash = typedArray;\n  };\n  Sha1.prototype.digest = function () {\n    var _this = this;\n    if (this.key) {\n      return this.key.then(function (key) {\n        return locateWindow().crypto.subtle.sign(SHA_1_HMAC_ALGO, key, _this.toHash).then(function (data) {\n          return new Uint8Array(data);\n        });\n      });\n    }\n    if (isEmptyData(this.toHash)) {\n      return Promise.resolve(EMPTY_DATA_SHA_1);\n    }\n    return Promise.resolve().then(function () {\n      return locateWindow().crypto.subtle.digest(SHA_1_HASH, _this.toHash);\n    }).then(function (data) {\n      return Promise.resolve(new Uint8Array(data));\n    });\n  };\n  Sha1.prototype.reset = function () {\n    this.toHash = new Uint8Array(0);\n  };\n  return Sha1;\n}();\nexport { Sha1 };\nfunction convertToBuffer(data) {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\n","import { Sha1 as WebCryptoSha1 } from \"./webCryptoSha1\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\nimport { convertToBuffer } from \"@aws-crypto/util\";\nvar Sha1 = /** @class */function () {\n  function Sha1(secret) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha1(secret);\n    } else {\n      throw new Error(\"SHA1 not supported\");\n    }\n  }\n  Sha1.prototype.update = function (data, encoding) {\n    this.hash.update(convertToBuffer(data));\n  };\n  Sha1.prototype.digest = function () {\n    return this.hash.digest();\n  };\n  Sha1.prototype.reset = function () {\n    this.hash.reset();\n  };\n  return Sha1;\n}();\nexport { Sha1 };\n","export async function blobReader(blob, onChunk, chunkSize = 1024 * 1024) {\n  const size = blob.size;\n  let totalBytesRead = 0;\n  while (totalBytesRead < size) {\n    const slice = blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize));\n    onChunk(new Uint8Array(await slice.arrayBuffer()));\n    totalBytesRead += slice.size;\n  }\n}","import { blobReader } from \"@smithy/chunked-blob-reader\";\nexport const blobHasher = async function blobHasher(hashCtor, blob) {\n  const hash = new hashCtor();\n  await blobReader(blob, chunk => {\n    hash.update(chunk);\n  });\n  return hash.digest();\n};","import { AwsSdkSigV4ASigner, AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { SignatureV4MultiRegion } from \"@aws-sdk/signature-v4-multi-region\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { getAwsChunkedEncodingStream, sdkStreamMixin } from \"@smithy/util-stream\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultS3HttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = config => {\n  return {\n    apiVersion: \"2006-03-01\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    getAwsChunkedEncodingStream: config?.getAwsChunkedEncodingStream ?? getAwsChunkedEncodingStream,\n    httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultS3HttpAuthSchemeProvider,\n    httpAuthSchemes: config?.httpAuthSchemes ?? [{\n      schemeId: \"aws.auth#sigv4\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n      signer: new AwsSdkSigV4Signer()\n    }, {\n      schemeId: \"aws.auth#sigv4a\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"aws.auth#sigv4a\"),\n      signer: new AwsSdkSigV4ASigner()\n    }],\n    logger: config?.logger ?? new NoOpLogger(),\n    sdkStreamMixin: config?.sdkStreamMixin ?? sdkStreamMixin,\n    serviceId: config?.serviceId ?? \"S3\",\n    signerConstructor: config?.signerConstructor ?? SignatureV4MultiRegion,\n    signingEscapePath: config?.signingEscapePath ?? false,\n    urlParser: config?.urlParser ?? parseUrl,\n    useArnRegion: config?.useArnRegion ?? false,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8\n  };\n};","import packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@smithy/hash-blob-browser\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { Md5 } from \"@smithy/md5-js\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? createDefaultUserAgentProvider({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    md5: config?.md5 ?? Md5,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha1: config?.sha1 ?? Sha1,\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    streamHasher: config?.streamHasher ?? streamHasher,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))\n  };\n};","export const getHttpAuthExtensionConfiguration = runtimeConfig => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex(scheme => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n};\nexport const resolveHttpAuthRuntimeConfig = config => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n};","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = t => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach(extension => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n    ...resolveDefaultRuntimeConfig(extensionConfiguration),\n    ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n};","import { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { resolveFlexibleChecksumsConfig } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRegionRedirectMiddlewarePlugin, getS3ExpressHttpSigningPlugin, getS3ExpressPlugin, getValidateBucketNamePlugin, resolveS3Config } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client } from \"@smithy/smithy-client\";\nimport { defaultS3HttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig } from \"./auth/httpAuthSchemeProvider\";\nimport { CreateSessionCommand } from \"./commands/CreateSessionCommand\";\nimport { resolveClientEndpointParameters } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class S3Client extends __Client {\n  constructor(...[configuration]) {\n    const _config_0 = __getRuntimeConfig(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = resolveUserAgentConfig(_config_1);\n    const _config_3 = resolveFlexibleChecksumsConfig(_config_2);\n    const _config_4 = resolveRetryConfig(_config_3);\n    const _config_5 = resolveRegionConfig(_config_4);\n    const _config_6 = resolveHostHeaderConfig(_config_5);\n    const _config_7 = resolveEndpointConfig(_config_6);\n    const _config_8 = resolveEventStreamSerdeConfig(_config_7);\n    const _config_9 = resolveHttpAuthSchemeConfig(_config_8);\n    const _config_10 = resolveS3Config(_config_9, {\n      session: [() => this, CreateSessionCommand]\n    });\n    const _config_11 = resolveRuntimeExtensions(_config_10, configuration?.extensions || []);\n    super(_config_11);\n    this.config = _config_11;\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n    this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n      httpAuthSchemeParametersProvider: defaultS3HttpAuthSchemeParametersProvider,\n      identityProviderConfigProvider: async config => new DefaultIdentityProviderConfig({\n        \"aws.auth#sigv4\": config.credentials,\n        \"aws.auth#sigv4a\": config.credentials\n      })\n    }));\n    this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    this.middlewareStack.use(getValidateBucketNamePlugin(this.config));\n    this.middlewareStack.use(getAddExpectContinuePlugin(this.config));\n    this.middlewareStack.use(getRegionRedirectMiddlewarePlugin(this.config));\n    this.middlewareStack.use(getS3ExpressPlugin(this.config));\n    this.middlewareStack.use(getS3ExpressHttpSigningPlugin(this.config));\n  }\n  destroy() {\n    super.destroy();\n  }\n}","export function ssecMiddleware(options) {\n  return next => async args => {\n    const input = {\n      ...args.input\n    };\n    const properties = [{\n      target: \"SSECustomerKey\",\n      hash: \"SSECustomerKeyMD5\"\n    }, {\n      target: \"CopySourceSSECustomerKey\",\n      hash: \"CopySourceSSECustomerKeyMD5\"\n    }];\n    for (const prop of properties) {\n      const value = input[prop.target];\n      if (value) {\n        let valueForHash;\n        if (typeof value === \"string\") {\n          if (isValidBase64EncodedSSECustomerKey(value, options)) {\n            valueForHash = options.base64Decoder(value);\n          } else {\n            valueForHash = options.utf8Decoder(value);\n            input[prop.target] = options.base64Encoder(valueForHash);\n          }\n        } else {\n          valueForHash = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : new Uint8Array(value);\n          input[prop.target] = options.base64Encoder(valueForHash);\n        }\n        const hash = new options.md5();\n        hash.update(valueForHash);\n        input[prop.hash] = options.base64Encoder(await hash.digest());\n      }\n    }\n    return next({\n      ...args,\n      input\n    });\n  };\n}\nexport const ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport const getSsecPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n  }\n});\nexport function isValidBase64EncodedSSECustomerKey(str, options) {\n  const base64Regex = /^(?:[A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n  if (!base64Regex.test(str)) return false;\n  try {\n    const decodedBytes = options.base64Decoder(str);\n    return decodedBytes.length === 32;\n  } catch {\n    return false;\n  }\n}","export function locationConstraintMiddleware(options) {\n  return next => async args => {\n    const {\n      CreateBucketConfiguration\n    } = args.input;\n    const region = await options.region();\n    if (!CreateBucketConfiguration?.LocationConstraint && !CreateBucketConfiguration?.Location) {\n      args = {\n        ...args,\n        input: {\n          ...args.input,\n          CreateBucketConfiguration: region === \"us-east-1\" ? undefined : {\n            LocationConstraint: region\n          }\n        }\n      };\n    }\n    return next(args);\n  };\n}\nexport const locationConstraintMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n  name: \"locationConstraintMiddleware\",\n  override: true\n};\nexport const getLocationConstraintPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(locationConstraintMiddleware(config), locationConstraintMiddlewareOptions);\n  }\n});","import { getLocationConstraintPlugin } from \"@aws-sdk/middleware-location-constraint\";\nimport { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_CreateBucketCommand, se_CreateBucketCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class CreateBucketCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  UseS3ExpressControlEndpoint: {\n    type: \"staticContextParams\",\n    value: true\n  },\n  DisableAccessPoints: {\n    type: \"staticContextParams\",\n    value: true\n  },\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getThrow200ExceptionsPlugin(config), getLocationConstraintPlugin(config)];\n}).s(\"AmazonS3\", \"CreateBucket\", {}).n(\"S3Client\", \"CreateBucketCommand\").f(void 0, void 0).ser(se_CreateBucketCommand).de(de_CreateBucketCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DeleteBucketCommand, se_DeleteBucketCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class DeleteBucketCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  UseS3ExpressControlEndpoint: {\n    type: \"staticContextParams\",\n    value: true\n  },\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonS3\", \"DeleteBucket\", {}).n(\"S3Client\", \"DeleteBucketCommand\").f(void 0, void 0).ser(se_DeleteBucketCommand).de(de_DeleteBucketCommand).build() {}","import { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DeleteObjectCommand, se_DeleteObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class DeleteObjectCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  },\n  Key: {\n    type: \"contextParams\",\n    name: \"Key\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getThrow200ExceptionsPlugin(config)];\n}).s(\"AmazonS3\", \"DeleteObject\", {}).n(\"S3Client\", \"DeleteObjectCommand\").f(void 0, void 0).ser(se_DeleteObjectCommand).de(de_DeleteObjectCommand).build() {}","import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getS3ExpiresMiddlewarePlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetObjectOutputFilterSensitiveLog, GetObjectRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { de_GetObjectCommand, se_GetObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class GetObjectCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  },\n  Key: {\n    type: \"contextParams\",\n    name: \"Key\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getFlexibleChecksumsPlugin(config, {\n    input: this.input,\n    requestChecksumRequired: false,\n    requestValidationModeMember: \"ChecksumMode\",\n    responseAlgorithms: [\"CRC32\", \"CRC32C\", \"SHA256\", \"SHA1\"]\n  }), getSsecPlugin(config), getS3ExpiresMiddlewarePlugin(config)];\n}).s(\"AmazonS3\", \"GetObject\", {}).n(\"S3Client\", \"GetObjectCommand\").f(GetObjectRequestFilterSensitiveLog, GetObjectOutputFilterSensitiveLog).ser(se_GetObjectCommand).de(de_GetObjectCommand).build() {}","import { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_ListObjectsV2Command, se_ListObjectsV2Command } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class ListObjectsV2Command extends $Command.classBuilder().ep({\n  ...commonParams,\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  },\n  Prefix: {\n    type: \"contextParams\",\n    name: \"Prefix\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getThrow200ExceptionsPlugin(config)];\n}).s(\"AmazonS3\", \"ListObjectsV2\", {}).n(\"S3Client\", \"ListObjectsV2Command\").f(void 0, void 0).ser(se_ListObjectsV2Command).de(de_ListObjectsV2Command).build() {}","import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getCheckContentLengthHeaderPlugin, getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { PutObjectOutputFilterSensitiveLog, PutObjectRequestFilterSensitiveLog } from \"../models/models_1\";\nimport { de_PutObjectCommand, se_PutObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class PutObjectCommand extends $Command.classBuilder().ep({\n  ...commonParams,\n  Bucket: {\n    type: \"contextParams\",\n    name: \"Bucket\"\n  },\n  Key: {\n    type: \"contextParams\",\n    name: \"Key\"\n  }\n}).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getFlexibleChecksumsPlugin(config, {\n    input: this.input,\n    requestAlgorithmMember: \"ChecksumAlgorithm\",\n    requestChecksumRequired: false\n  }), getCheckContentLengthHeaderPlugin(config), getThrow200ExceptionsPlugin(config), getSsecPlugin(config)];\n}).s(\"AmazonS3\", \"PutObject\", {}).n(\"S3Client\", \"PutObjectCommand\").f(PutObjectRequestFilterSensitiveLog, PutObjectOutputFilterSensitiveLog).ser(se_PutObjectCommand).de(de_PutObjectCommand).build() {}","import {Injectable} from \"@angular/core\";\nimport {environment} from \"../../../../environments/environment\";\nimport {CreateBucketCommand, DeleteBucketCommand, DeleteObjectCommand, GetObjectCommand, ListObjectsV2Command, PutObjectCommand, S3Client} from \"@aws-sdk/client-s3\";\nimport {SortColumn} from \"../../../shared/sorting/sorting.component\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n\n@Injectable({providedIn: 'root'})\nexport class S3Service {\n\n    // S3 client for AWS calls\n    client = new S3Client({\n        region: environment.awsmockRegion,\n        endpoint: environment.gatewayEndpoint,\n        forcePathStyle: true,\n        credentials: {\n            accessKeyId: 'none',\n            secretAccessKey: 'none',\n        },\n        requestHandler: {\n            requestTimeout: 3_000,\n            httpsAgent: {maxSockets: 25, keepAlive: false},\n        },\n    });\n\n    // Default headers for AwsMock HTTP requests\n    headers: HttpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'AWS4-HMAC-SHA256 Credential=none/20240928/eu-central-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-target, Signature=01316d694335ec0e0bf68b08570490f1b0bae0b130ecbe13ebad511b3ece8a41'\n    });\n    url: string = environment.gatewayEndpoint + '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n    createBucket(bucketName: string) {\n        const input = {\n            Bucket: bucketName\n        };\n        return this.client.send(new CreateBucketCommand(input));\n    }\n\n    listObjects(bucketName: string, pageSize: number, pageIndex: number) {\n        const command = new ListObjectsV2Command({\n            Bucket: bucketName,\n            MaxKeys: pageSize * pageIndex,\n        });\n        return this.client.send(command);\n    }\n\n    async putObjects(bucketName: string, key: string, content: Blob) {\n        const command = {\n            Bucket: bucketName,\n            Key: key,\n            Body: content,\n        };\n        return this.client.send(new PutObjectCommand(command));\n    }\n\n    async getObject(bucketName: string, key: string) {\n        const command = {\n            Bucket: bucketName,\n            Key: key\n        };\n        return this.client.send(new GetObjectCommand(command));\n    }\n\n    deleteObject(bucketName: string, key: string) {\n        const input = {\n            Bucket: bucketName,\n            Key: key\n        };\n        return this.client.send(new DeleteObjectCommand(input));\n    }\n\n    deleteBucket(bucketName: string) {\n        const input = {\n            Bucket: bucketName\n        };\n        return this.client.send(new DeleteBucketCommand(input));\n    }\n\n    cleanup() {\n        this.client.destroy();\n    }\n\n    /**\n     * @brief List all bucket counters\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param prefix bucket name prefix\n     * @param pageSize page size\n     * @param pageIndex page index\n     * @param sortColumns sorting columns\n     */\n    public listBucketCounters(prefix: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[]) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'ListBucketCounters');\n        const body = {\n            region: environment.awsmockRegion,\n            prefix: prefix,\n            pageSize: pageSize,\n            pageIndex: pageIndex,\n            sortColumns: sortColumns\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n\n    /**\n     * @brief List all object counters\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param bucket bucket name\n     * @param prefix object name prefix\n     * @param pageSize page size\n     * @param pageIndex page index\n     * @param sortColumns sorting columns\n     */\n    public listObjectsCounters(bucket: string, prefix: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[]) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'ListObjectCounters');\n        const body = {\n            region: environment.awsmockRegion,\n            bucket: bucket,\n            prefix: prefix,\n            pageSize: pageSize,\n            pageIndex: pageIndex,\n            sortColumns: sortColumns\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n\n    /**\n     * @brief Get a bucket details\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param bucketName bucket name\n     */\n    public getBucket(bucketName: string) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'GetBucket');\n        const body = {\n            region: environment.awsmockRegion,\n            bucketName: bucketName\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n\n    /**\n     * @brief Saves a modified bucket.\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param bucket bucket object\n     */\n    public saveBucket(bucket: any) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'SaveBucket');\n        return this.http.post(this.url, bucket, {headers: headers});\n    }\n\n    /**\n     * @brief Deletes a S3 bucket. This will delete all objects of that bucket.\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param bucketName bucket name\n     */\n    public purgeBucket(bucketName: string) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'PurgeBucket');\n        const body = {\n            region: environment.awsmockRegion,\n            bucketName: bucketName\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n\n    /**\n     * @brief Deletes a S3 bucket. This will delete all objects of that bucket.\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param bucketName bucket name\n     */\n    public deleteObjects(bucketName: string) {\n        let headers = this.headers.set('x-awsmock-target', 's3').set('x-awsmock-action', 'DeleteObjects');\n        const body = {\n            region: environment.awsmockRegion,\n            bucketName: bucketName\n        }\n        return this.http.post(this.url, body, {headers: headers});\n    }\n}","import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, mergeMap, of} from 'rxjs';\nimport {s3BucketListActions} from './s3-bucket-list.actions';\nimport {AwsMockHttpService} from \"../../../../services/awsmock-http.service\";\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3Service} from \"../../service/s3-service.component\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable()\nexport class S3BucketListEffects {\n\n    sortColumns: SortColumn[] = [];\n\n    loadBucketCounters$ = createEffect(() => this.actions$.pipe(\n        ofType(s3BucketListActions.loadBuckets),\n        mergeMap(action =>\n            this.s3Service.listBucketCounters(\n                action.prefix,\n                action.pageSize,\n                action.pageIndex,\n                action.sortColumns)\n                .pipe(map((buckets: any) => s3BucketListActions.loadBucketsSuccess({buckets})),\n                    catchError((error) =>\n                        of(s3BucketListActions.loadBucketsFailure({error: error.message}))\n                    )\n                )\n        )\n    ));\n\n    addQueue$ = createEffect(() => this.actions$.pipe(\n        ofType(s3BucketListActions.addBucket),\n        mergeMap(action =>\n            this.s3Service.createBucket(action.bucketName)\n                .then(() => s3BucketListActions.addBucketSuccess()))\n    ));\n\n    deleteBucket$ = createEffect(() => this.actions$.pipe(\n        ofType(s3BucketListActions.deleteBucket),\n        mergeMap(action =>\n            this.s3Service.deleteBucket(action.bucketName)\n                .then(() => s3BucketListActions.deleteBucketSuccess()))\n    ));\n\n    purgeBucket$ = createEffect(() => this.actions$.pipe(\n        ofType(s3BucketListActions.purgeBucket),\n        mergeMap(action =>\n            this.s3Service.purgeBucket(action.bucketName)\n                .pipe(map((buckets: any) => s3BucketListActions.loadBucketsSuccess({buckets})),\n                    catchError((error) =>\n                        of(s3BucketListActions.loadBucketsFailure({error: error.message}))\n                    )\n                )\n        )\n    ));\n\n    constructor(private actions$: Actions, private awsmockHttpService: AwsMockHttpService, private s3Service: S3Service) {\n    }\n}","import {\n    MatDialogActions,\n    MatDialogClose,\n    MatDialogContent,\n    MatDialogRef,\n    MatDialogTitle\n} from \"@angular/material/dialog\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButton} from \"@angular/material/button\";\nimport {MatFormField, MatLabel} from \"@angular/material/form-field\";\nimport {MatOption, MatSelect} from \"@angular/material/select\";\nimport {MatTextColumn} from \"@angular/material/table\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n    selector: 'bucket-add-dialog',\n    templateUrl: './bucket-add.component.html',\n    standalone: true,\n    imports: [\n        MatDialogContent,\n        MatDialogTitle,\n        MatDialogActions,\n        MatButton,\n        MatDialogClose,\n        MatFormField,\n        MatSelect,\n        MatOption,\n        MatLabel,\n        FormsModule,\n        MatTextColumn,\n        MatInput,\n        ReactiveFormsModule\n    ],\n    styleUrls: ['./bucket-add.component.scss']\n})\nexport class BucketAddComponentDialog implements OnInit {\n\n    bucketName: string = '';\n\n    constructor(private dialogRef: MatDialogRef<BucketAddComponentDialog>) {\n    }\n\n    ngOnInit() {\n    }\n\n    save() {\n        this.dialogRef.close(this.bucketName);\n    }\n\n    close() {\n        this.dialogRef.close(false);\n    }\n}\n","<h2 mat-dialog-title>Add S3 Bucket</h2>\n<mat-dialog-content class=\"mat-typography\" style=\"width: 500px\">\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Bucket Name</mat-label>\n        <input [(ngModel)]=\"bucketName\" matInput value=\"\">\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"save()\" cdkFocusInitial mat-button>Add</button>\n</mat-dialog-actions>\n","import {createFeatureSelector, createSelector, DefaultProjectorFn, MemoizedSelector} from \"@ngrx/store\";\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {s3BucketListFeatureKey, S3BucketListState} from \"./s3-bucket-list.reducer\";\nimport {S3BucketCountersResponse} from \"../../model/s3-bucket-item\";\n\nexport type SelectorType<T> = MemoizedSelector<object, T, DefaultProjectorFn<T>>;\nexport type SelectorFeatureType<T> = MemoizedSelector<object, T>;\n\nconst selectBucketListFeature: SelectorFeatureType<S3BucketListState> =\n    createFeatureSelector<S3BucketListState>(s3BucketListFeatureKey);\n\nexport const selectIsLoading: SelectorType<boolean> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state.loading\n);\n\nexport const selectTotal: SelectorType<number> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state.total\n);\n\nexport const selectBucketName: SelectorType<string> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.bucketName\n);\n\nexport const selectPrefix: SelectorType<string> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.prefix\n);\n\nexport const selectPageSize: SelectorType<number> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.pageSize\n);\n\nexport const selectPageIndex: SelectorType<number> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.pageIndex\n);\n\nexport const selectSortColumns: SelectorType<SortColumn[]> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.sortColumns\n);\n\nexport const selectBucketCounters: SelectorType<S3BucketCountersResponse> = createSelector(\n    selectBucketListFeature,\n    (state: S3BucketListState) => state?.s3BucketCounters\n);\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {debounceTime, distinctUntilChanged, filter, interval, merge, Observable, Subject, Subscription, tap} from \"rxjs\";\nimport {MatPaginator, PageEvent} from \"@angular/material/paginator\";\nimport {MatSort, Sort} from \"@angular/material/sort\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {AwsMockHttpService} from \"../../../services/awsmock-http.service\";\nimport {S3Service} from \"../service/s3-service.component\";\nimport {BucketAddComponentDialog} from \"../bucket-add/bucket-add.component\";\nimport {Router} from \"@angular/router\";\nimport {byteConversion} from \"../../../shared/byte-utils.component\";\nimport {S3BucketCountersResponse, S3BucketItem} from \"../model/s3-bucket-item\";\nimport {selectBucketCounters, selectIsLoading, selectPageIndex, selectPageSize, selectPrefix} from \"./state/s3-bucket-list.selectors\";\nimport {ActionsSubject, select, State, Store} from \"@ngrx/store\";\nimport {Location} from \"@angular/common\";\nimport {S3BucketListState} from \"./state/s3-bucket-list.reducer\";\nimport {s3BucketListActions} from \"./state/s3-bucket-list.actions\";\nimport {MatTableDataSource} from \"@angular/material/table\";\n\n@Component({\n    selector: 's3-bucket-list',\n    templateUrl: './bucket-list.component.html',\n    styleUrls: ['./bucket-list.component.scss'],\n    providers: [S3Service, AwsMockHttpService]\n})\nexport class S3BucketListComponent implements OnInit, OnDestroy, AfterViewInit {\n\n    // Last update\n    lastUpdate: Date = new Date();\n\n    // Table\n    loading: boolean = false;\n    noData: S3BucketItem[] = [<S3BucketItem>{}];\n    pageSize$: Observable<number> = this.store.select(selectPageSize);\n    prefix$: Observable<string> = this.store.select(selectPrefix);\n    pageIndex$: Observable<number> = this.store.select(selectPageIndex);\n    s3BucketCountersResponse$: Observable<S3BucketCountersResponse> = this.store.select(selectBucketCounters);\n    columns: any[] = ['name', 'keys', 'size', 'created', 'modified', 'actions'];\n    dataSource: MatTableDataSource<S3BucketItem> = new MatTableDataSource();\n    defaultSort: Sort = {active: \"keys\", direction: \"desc\"};\n    filterSubject = new Subject<string>();\n\n    // Auto-update\n    updateSubscription: Subscription = new Subscription();\n    tableSubscription: Subscription = new Subscription();\n\n    // Prefix\n    prefixSet: boolean = false;\n    prefixValue: string = '';\n\n    // Paging\n    total = 0;\n    pageSizeOptions = [5, 10, 20, 50, 100];\n    hidePageSize = false;\n    showPageSizeOptions = true;\n    showFirstLastButtons = true;\n    disabled = false;\n\n    // Sorting/paging\n    @ViewChild(MatSort, {static: false}) sort: MatSort | undefined;\n\n    // Byte conversion\n    protected readonly byteConversion = byteConversion;\n    @ViewChild(MatPaginator, {static: false}) private paginator: MatPaginator | undefined;\n    private filter: string = \"\";\n\n    constructor(private snackBar: MatSnackBar, private dialog: MatDialog, private router: Router, private state: State<S3BucketListState>, private store: Store,\n                private actionsSubj$: ActionsSubject, private location: Location) {\n\n        // Subscribe to action events, reload table when the action got successful executed\n        this.actionsSubj$.pipe(\n            filter((action) =>\n                action.type === s3BucketListActions.addBucketSuccess.type ||\n                action.type === s3BucketListActions.purgeBucketSuccess.type ||\n                action.type === s3BucketListActions.deleteBucketSuccess.type\n            )\n        ).subscribe(() => {\n                this.lastUpdate = new Date();\n                this.loadBuckets();\n            }\n        );\n        this.prefix$.subscribe((data: string) => {\n            this.prefixSet = false;\n            if (data && data.length) {\n                this.prefixValue = data;\n                this.prefixSet = true;\n            }\n        })\n    }\n\n    ngOnInit(): void {\n        this.store\n            .pipe(select(selectBucketCounters))\n            .subscribe((buckets) => {\n                this.initializeData(buckets.bucketCounters);\n                this.total = buckets.total;\n            });\n        this.tableSubscription.add(\n            this.store.pipe(select(selectIsLoading)).subscribe((loading) => {\n                if (loading) {\n                    this.dataSource = new MatTableDataSource(this.noData);\n                }\n                this.loading = loading;\n            })\n        );\n        // this.loadBuckets();\n        this.updateSubscription = interval(60000).subscribe(() => this.loadBuckets());\n    }\n\n    ngAfterViewInit() {\n        this.loadBuckets();\n        let filter$ = this.filterSubject.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            tap((value: string) => {\n                if (this.paginator) {\n                    this.paginator.pageIndex = 0;\n                }\n                this.filter = value;\n            })\n        );\n\n        if (this.sort) {\n            let sort$ = this.sort.sortChange.pipe(\n                tap(() => {\n                    if (this.paginator) {\n                        this.paginator.pageIndex = 0\n                    }\n                })\n            );\n\n            if (this.paginator) {\n                this.tableSubscription.add(\n                    merge(filter$, sort$, this.paginator.page)\n                        .pipe(tap(() => this.loadBuckets()))\n                        .subscribe()\n                );\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.updateSubscription?.unsubscribe();\n    }\n\n    back() {\n        this.location.back();\n    }\n\n    refresh() {\n        this.loadBuckets();\n    }\n\n    setPrefix() {\n        this.prefixSet = true;\n        this.state.value['s3-bucket-list'].prefix = this.prefixValue;\n        this.loadBuckets();\n    }\n\n    unsetPrefix() {\n        this.prefixValue = '';\n        this.prefixSet = false;\n        this.state.value['s3-bucket-list'].prefix = '';\n        this.loadBuckets();\n    }\n\n    handlePageEvent(e: PageEvent) {\n        this.state.value['s3-bucket-list'].pageSize = e.pageSize;\n        this.state.value['s3-bucket-list'].pageIndex = e.pageIndex;\n        this.store.dispatch(s3BucketListActions.loadBuckets({\n            prefix: this.state.value['s3-bucket-list'].prefix,\n            pageSize: this.state.value['s3-bucket-list'].pageSize,\n            pageIndex: this.state.value['s3-bucket-list'].pageIndex,\n            sortColumns: this.state.value['s3-bucket-list'].sortColumns\n        }));\n    }\n\n    sortChange(sortState: Sort) {\n        this.state.value['s3-bucket-list'].sortColumns = [];\n        let direction = 1;\n        let column = 'keys';\n        if (sortState.active === 'size') {\n            column = 'size'\n        } else if (sortState.active === 'name') {\n            column = 'name';\n        }\n        if (sortState.direction === 'asc') {\n            direction = 1;\n        } else {\n            direction = -1;\n        }\n        this.state.value['s3-bucket-list'].sortColumns = [{column: column, sortDirection: direction}];\n        this.loadBuckets();\n    }\n\n    loadBuckets() {\n        this.store.dispatch(s3BucketListActions.loadBuckets({\n            prefix: this.state.value['s3-bucket-list'].prefix,\n            pageSize: this.state.value['s3-bucket-list'].pageSize,\n            pageIndex: this.state.value['s3-bucket-list'].pageIndex,\n            sortColumns: this.state.value['s3-bucket-list'].sortColumns\n        }));\n    }\n\n    addBucket() {\n\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n\n        this.dialog.open(BucketAddComponentDialog, dialogConfig).afterClosed().subscribe(result => {\n            if (result) {\n                this.store.dispatch(s3BucketListActions.addBucket({bucketName: result}));\n            }\n        });\n    }\n\n    purgeBucket(bucketName: string) {\n        this.store.dispatch(s3BucketListActions.purgeBucket({bucketName: bucketName}));\n    }\n\n    deleteBucket(bucketName: string) {\n        this.store.dispatch(s3BucketListActions.deleteBucket({bucketName: bucketName}));\n    }\n\n    private initializeData(buckets: S3BucketItem[]): void {\n        this.dataSource = new MatTableDataSource(\n            buckets.length ? buckets : this.noData\n        );\n    }\n}\n","<mat-card appearance=\"outlined\" style=\"margin: 3px;\">\n    <mat-card-header>\n        <button (click)=\"back()\" aria-label=\"Back\" class=\"head-buttons-left\" mat-icon-button>\n            <mat-icon>arrow_back</mat-icon>\n        </button>\n        <span class=\"fill-remaining-space\">\n            <h4>S3 Buckets</h4>\n        </span>\n        <button (click)=\"addBucket()\" aria-label=\"Refresh\" mat-icon-button>\n            <mat-icon>add</mat-icon>\n        </button>\n        <button (click)=\"refresh()\" aria-label=\"Refresh\" mat-icon-button>\n            <mat-icon>refresh</mat-icon>\n        </button>\n    </mat-card-header>\n    <mat-card-content>\n        <mat-card appearance=\"outlined\" style=\"margin: -10px;\">\n            <mat-card-actions align=\"start\">\n                <mat-form-field style=\"width:100%\">\n                    <mat-label>Prefix</mat-label>\n                    <input [(ngModel)]=\"prefixValue\" matInput name=\"search\" placeholder=\"Search\" type=\"text\">\n                    <button (click)=\"setPrefix()\" *ngIf=\"!prefixSet\" mat-icon-button matSuffix style=\"float: right\">\n                        <mat-icon matSuffix>search</mat-icon>\n                    </button>\n                    <button (click)=\"unsetPrefix()\" *ngIf=\"prefixSet\" mat-icon-button matSuffix style=\"float: right\">\n                        <mat-icon matSuffix>close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </mat-card-actions>\n            <mat-card-content>\n                <div class=\"table-container\">\n                    <!--div *ngIf=\"s3BucketCountersResponse$ | async as bucketCounters\" class=\"row\"-->\n                    <table (matSortChange)=\"sortChange($event)\" [dataSource]=\"dataSource\" [matSortActive]=\"defaultSort.active\"\n                           [matSortDirection]=\"defaultSort.direction\"\n                           mat-table matSort matSortDisableClear=\"false\">\n                        <ng-container matColumnDef=\"name\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Queue name\" sortActionDescription=\"Sort by queueUrl\">Name</th>\n                            <td *matCellDef=\"let element\" mat-cell>\n                                <mat-nav-list>\n                                    <a mat-list-item routerLink=\"./objects/{{ element.bucketName }}\"> {{ element.bucketName }}</a>\n                                </mat-nav-list>\n                            </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"keys\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Objects\" sortActionDescription=\"Sort by objects\">Objects</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.keys }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"size\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Size\" sortActionDescription=\"Sort by size\">Size</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ byteConversion(element.size) }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"created\" matTooltip=\"Created\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Create timestamp\" sortActionDescription=\"Sort by created\">Created</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.created | date: 'dd-MM-yyyy hh:mm:ss' }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"modified\" matTooltip=\"Modified\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Modified timestamp\" sortActionDescription=\"Sort by modified\">Modified</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.modified | date: 'dd-MM-yyyy hh:mm:ss' }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"actions\">\n                            <th *matHeaderCellDef mat-header-cell style=\"width:200px\">Actions</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                <button aria-label=\"List\" mat-icon-button matTooltip=\"Show details of the bucket\" routerLink=\"./details/{{row.bucketName}}\">\n                                    <mat-icon>edit</mat-icon>\n                                </button>\n                                <button (click)=\"purgeBucket(row.bucketName)\" aria-label=\"PurgeBucket\" mat-icon-button\n                                        matTooltip=\"Delete all objects in the bucket\">\n                                    <mat-icon>folder_delete</mat-icon>\n                                </button>\n                                <button (click)=\"deleteBucket(row.bucketName)\" aria-label=\"DeleteBucket\" mat-icon-button matTooltip=\"Delete the bucket and all objects\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </td>\n                        </ng-container>\n                        <tr *matHeaderRowDef=\"columns\" mat-header-row></tr>\n                        <tr *matRowDef=\"let row; columns: columns;\" mat-row></tr>\n                        <tr *matNoDataRow class=\"mat-row\">\n                            <td [attr.colspan]=\"columns.length\" class=\"mat-cell\" style=\"padding-left: 20px;padding-top: 10px\">\n                                No data matching the filter.\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n                <!--/div-->\n                <mat-paginator (page)=\"handlePageEvent($event)\"\n                               [disabled]=\"disabled\"\n                               [hidePageSize]=\"hidePageSize\"\n                               [length]=\"total\"\n                               [pageIndex]=\"(pageIndex$ | async)\"\n                               [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\n                               [pageSize]=\"(pageSize$ | async)\"\n                               [showFirstLastButtons]=\"showFirstLastButtons\"\n                               aria-label=\"Select page\" style=\"width:99%; margin-left:15px\">\n                </mat-paginator>\n            </mat-card-content>\n        </mat-card>\n        <div class=\"footer\">\n            Last update: {{ lastUpdate | date: 'HH:mm:ss' }}\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {Component, inject, OnDestroy, OnInit} from \"@angular/core\";\nimport {Location} from \"@angular/common\";\nimport {MatTableDataSource,} from \"@angular/material/table\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Sort} from \"@angular/material/sort\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {LambdaConfiguration, S3BucketItem} from \"../model/s3-bucket-item\";\nimport {byteConversion} from \"../../../shared/byte-utils.component\";\nimport {LiveAnnouncer} from \"@angular/cdk/a11y\";\nimport {S3Service} from \"../service/s3-service.component\";\n\n@Component({\n    selector: 'bucket-detail-component',\n    templateUrl: './bucket-detail.component.html',\n    styleUrls: ['./bucket-detail.component.scss'],\n    providers: [S3Service]\n})\nexport class S3BucketDetailComponent implements OnInit, OnDestroy {\n    lastUpdate: string = '';\n\n    bucketItem = {} as S3BucketItem;\n    bucketName: string = '';\n\n    // Subscription Table\n    lambdaNotificationColumns: any[] = ['id', 'lambdaArn', 'actions'];\n    lambdaNotificationData: LambdaConfiguration[] = [];\n    lambdaNotificationDataSource = new MatTableDataSource(this.lambdaNotificationData);\n    lambdaNotificationPageSize = 10;\n    lambdaNotificationPageIndex = 0;\n    lambdaNotificationLength = 0;\n    lambdaNotificationPageSizeOptions = [5, 10, 20, 50, 100];\n\n    //\n    protected readonly byteConversion = byteConversion;\n    private sub: any;\n    // Sorting\n    private _liveAnnouncer = inject(LiveAnnouncer);\n\n    constructor(private location: Location, private route: ActivatedRoute, private s3Service: S3Service) {\n    }\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            this.bucketName = params['bucketName'];\n        });\n        this.loadBucket();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    back() {\n        this.location.back();\n    }\n\n    refresh() {\n        this.loadBucket();\n    }\n\n    lastUpdateTime() {\n        return new Date().toLocaleTimeString('DE-de');\n    }\n\n    // ===================================================================================================================\n    // Details\n    // ===================================================================================================================\n    loadBucket() {\n        this.s3Service.getBucket(this.bucketName)\n            .subscribe((data: any) => {\n                this.lastUpdate = this.lastUpdateTime();\n                if (data) {\n                    this.bucketItem = data;\n                    if (this.bucketItem.lambdaConfigurations) {\n                        this.lambdaNotificationData = this.bucketItem.lambdaConfigurations;\n                        this.lambdaNotificationDataSource.data = this.lambdaNotificationData;\n                    }\n                }\n            });\n    }\n\n    // ===================================================================================================================\n    // Lambda Notifications\n    // ===================================================================================================================\n    lambdaNotificationSortChange(sortState: Sort) {\n        if (sortState.direction) {\n            this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n        } else {\n            this._liveAnnouncer.announce('Sorting cleared');\n        }\n        this.loadBucket();\n    }\n\n    handleLambdaNotificationPageEvent(e: PageEvent) {\n\n    }\n\n    deleteLambdaNotification(lambdaNotificationArn: string) {\n        this.bucketItem.lambdaConfigurations = this.bucketItem.lambdaConfigurations?.filter((ele) => ele.lambdaArn !== lambdaNotificationArn);\n        if (this.bucketItem.lambdaConfigurations) {\n            this.lambdaNotificationData = this.bucketItem.lambdaConfigurations;\n            this.lambdaNotificationDataSource.data = this.lambdaNotificationData;\n        }\n    }\n\n    // ===================================================================================================================\n    // Queue Notifications\n    // ===================================================================================================================\n\n    // ===================================================================================================================\n    // Topic Notifications\n    // ===================================================================================================================\n\n    save() {\n        this.location.back();\n    }\n}\n","<mat-card appearance=\"outlined\" style=\"margin: 3px;\">\n    <mat-card-header>\n        <span>\n            <button (click)=\"back()\" aria-label=\"Back\" class=\"head-buttons-left\" mat-icon-button>\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n        </span>\n        <span class=\"fill-remaining-space\">\n            <h4>S3 Buckets Details: {{ this.bucketName }}</h4>\n        </span>\n        <span>\n            <button (click)=\"refresh()\" aria-label=\"Refresh\" mat-icon-button>\n                <mat-icon>refresh</mat-icon>\n            </button>\n        </span>\n    </mat-card-header>\n    <mat-card appearance=\"outlined\" style=\"margin: 3px;\">\n        <mat-card-header>\n            <mat-card-title>Details</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <mat-grid-list cols=\"2\" rowHeight=\"420px\">\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <div style=\"width: 100%; display: flex; align-items: flex-start;align-content:flex-start\">\n                        <mat-list>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Region: </p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.region }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Bucket name: </p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.bucketName }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>ARN: </p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.arn }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Owner: </p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.owner }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Version Status: </p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.versionStatus }}</p>\n                            </mat-list-item>\n                        </mat-list>\n                    </div>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <div style=\"width: 100%; display: flex; align-items: flex-start;align-content:flex-start\">\n                        <mat-list>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Number of objects:</p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.keys }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Size:</p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ byteConversion(bucketItem.size) }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Created:</p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.created | date: 'yyyy-MM-dd HH:mm:ss' }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:80px\">\n                                <p class=\"mat-list-span-title\" matListItemTitle>Modified:</p>\n                                <p class=\"mat-list-span-value\" matListItemLine>{{ bucketItem.modified | date: 'yyyy-MM-dd HH:mm:ss' }}</p>\n                            </mat-list-item>\n                            <mat-list-item style=\"height:60px\">\n                            </mat-list-item>\n                        </mat-list>\n                    </div>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </mat-card-content>\n    </mat-card>\n    <mat-card appearance=\"outlined\" style=\"margin-top: 5px;\">\n        <mat-card-header>\n            <mat-card-title>Info</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <mat-tab-group>\n                <mat-tab label=\"Lambda Notifications\">\n                    <mat-card-actions class=\"head-buttons\">\n                        <!--button (click)=\"addSubscription()\" aria-label=\"Refresh\" mat-icon-button>\n                            <mat-icon>add</mat-icon>\n                        </button-->\n                        <button (click)=\"loadBucket()\" aria-label=\"Refresh\" mat-icon-button>\n                            <mat-icon>refresh</mat-icon>\n                        </button>\n                    </mat-card-actions>\n                    <table (matSortChange)=\"lambdaNotificationSortChange($event)\" [dataSource]=\"lambdaNotificationDataSource\" class=\"mat-elevation-z8\" mat-table\n                           matSort>\n                        <ng-container matColumnDef=\"id\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"ID\" sortActionDescription=\"Sort by ID\">ID</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.id }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"lambdaArn\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"ARN\" sortActionDescription=\"Sort by arn\">ARN</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.lambdaArn }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"actions\">\n                            <th *matHeaderCellDef mat-header-cell style=\"width:120px\">Actions</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                <!--button (click)=\"editSubscription(row.subscriptionArn)\" aria-label=\"Edit\" mat-icon-button matTooltip=\"Edit the subscription\">\n                                    <mat-icon>edit</mat-icon>\n                                </button-->\n                                <button (click)=\"deleteLambdaNotification(row.lambdaArn)\" aria-label=\"Delete\" mat-icon-button matTooltip=\"Delete lambda notification\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </td>\n                        </ng-container>\n                        <tr *matHeaderRowDef=\"lambdaNotificationColumns\" mat-header-row></tr>\n                        <tr *matRowDef=\"let row; columns: lambdaNotificationColumns;\" mat-row></tr>\n                        <tr *matNoDataRow class=\"mat-row\">\n                            <td [attr.colspan]=\"lambdaNotificationColumns.length\" class=\"mat-cell\">\n                                No data matching the filter.\n                            </td>\n                        </tr>\n                    </table>\n                    <mat-paginator (page)=\"handleLambdaNotificationPageEvent($event)\"\n                                   [disabled]=\"false\"\n                                   [hidePageSize]=\"false\"\n                                   [length]=\"lambdaNotificationLength\"\n                                   [pageIndex]=\"lambdaNotificationPageIndex\"\n                                   [pageSizeOptions]=\"lambdaNotificationPageSizeOptions\"\n                                   [pageSize]=\"lambdaNotificationPageSize\"\n                                   [showFirstLastButtons]=\"true\"\n                                   aria-label=\"Select page\">\n                    </mat-paginator>\n                </mat-tab>\n                <mat-tab label=\"Queue Notifications\">\n                    Queue Notifications\n                </mat-tab>\n                <mat-tab label=\"Topic Notifications\">\n                    Topic Notifications\n                </mat-tab>\n            </mat-tab-group>\n        </mat-card-content>\n    </mat-card>\n    <mat-card-actions align=\"end\">\n        <button (click)=back() mat-button>Close</button>\n        <button (click)=save() mat-button>Save</button>\n    </mat-card-actions>\n    <div class=\"footer\">\n        Last update: {{ lastUpdate }}\n    </div>\n</mat-card>\n","import {createAction, props} from '@ngrx/store';\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3ObjectCounterResponse} from \"../../model/s3-object-item\";\n\nexport const s3ObjectListActions = {\n    initialize: createAction('[s3-object-list] initialize'),\n\n    // Load objects\n    loadObjects: createAction('[s3-object-list] Load Objects', props<{\n        bucketName: string,\n        prefix: string,\n        pageSize: number,\n        pageIndex: number,\n        sortColumns: SortColumn[]\n    }>()),\n    loadObjectsSuccess: createAction('[s3-object-list] Load Objects Success', props<{ objects: S3ObjectCounterResponse }>()),\n    loadObjectsFailure: createAction('[s3-object-list] Load Objects Error', props<{ error: string }>()),\n\n    // Add object\n    //addObject: createAction('[s3-object-list] Add Object', props<{ objectName: string }>()),\n    //addObjectSuccess: createAction('[s3-object-list] Add Object Success'),\n    //addObjectFailure: createAction('[s3-object-list] Add Object Error', props<{ error: string }>()),\n\n    // Delete object\n    deleteObject: createAction('[s3-object-list] Delete Object', props<{ bucketName: string, key: string }>()),\n    deleteObjectSuccess: createAction('[s3-object-list] Delete Object Success'),\n    deleteObjectFailure: createAction('[s3-object-list] Delete Object Error', props<{ error: string }>()),\n}","import {createReducer, on} from \"@ngrx/store\";\nimport {s3ObjectListActions} from './s3-object-list.actions';\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3ObjectCounterResponse} from \"../../model/s3-object-item\"\n\nexport const s3ObjectListFeatureKey = 's3-object-list';\n\nexport interface S3ObjectListState {\n    s3ObjectCounters: S3ObjectCounterResponse;\n    prefix: string;\n    pageSize: number;\n    pageIndex: number;\n    loading: boolean;\n    sortColumns: SortColumn[];\n    error: unknown;\n}\n\nexport const initialState: S3ObjectListState = {\n    s3ObjectCounters: {total: 0, objectCounters: []},\n    prefix: '',\n    pageSize: 10,\n    pageIndex: 0,\n    loading: false,\n    sortColumns: [{column: 'key', sortDirection: -1}],\n    error: {}\n};\n\nexport const s3ObjectListReducer = createReducer(\n    initialState,\n\n    // Initialize\n    on(s3ObjectListActions.initialize, (state: S3ObjectListState): S3ObjectListState => ({...state, pageIndex: 0, pageSize: 10, loading: true})),\n\n    // Object list\n    on(s3ObjectListActions.loadObjects, (state: S3ObjectListState) => ({...state, loading: true})),\n    on(s3ObjectListActions.loadObjectsSuccess, (state: S3ObjectListState, {objects}) => ({...state, s3ObjectCounters: objects, loading: false})),\n    on(s3ObjectListActions.loadObjectsFailure, (state: S3ObjectListState, {error}) => ({...state, error: error, loading: false})),\n\n    // Add object\n    //on(s3ObjectListActions.addObject, (state: S3ObjectListState) => ({...state, loading: true})),\n    //on(s3ObjectListActions.addObjectSuccess, (state: S3ObjectListState) => ({...state, loading: false})),\n    //on(s3ObjectListActions.addObjectFailure, (state: S3ObjectListState, {error}) => ({...state, error: error, loading: false})),\n\n    // Delete object\n    on(s3ObjectListActions.deleteObject, (state: S3ObjectListState) => ({...state, loading: true})),\n    on(s3ObjectListActions.deleteObjectSuccess, (state: S3ObjectListState) => ({...state, loading: false})),\n    on(s3ObjectListActions.deleteObjectFailure, (state: S3ObjectListState, {error}) => ({...state, error: error, loading: false})),\n);","import {createFeatureSelector, createSelector, DefaultProjectorFn, MemoizedSelector} from \"@ngrx/store\";\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {s3ObjectListFeatureKey, S3ObjectListState} from \"./s3-object-list.reducer\";\nimport {S3ObjectCounterResponse} from \"../../model/s3-object-item\";\n\nexport type SelectorType<T> = MemoizedSelector<object, T, DefaultProjectorFn<T>>;\nexport type SelectorFeatureType<T> = MemoizedSelector<object, T>;\n\nconst selectObjectListFeature: SelectorFeatureType<S3ObjectListState> =\n    createFeatureSelector<S3ObjectListState>(s3ObjectListFeatureKey);\n\nexport const selectIsLoading: SelectorType<boolean> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state.loading\n);\n\nexport const selectPrefix: SelectorType<string> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state?.prefix\n);\n\nexport const selectPageSize: SelectorType<number> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state?.pageSize\n);\n\nexport const selectPageIndex: SelectorType<number> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state?.pageIndex\n);\n\nexport const selectSortColumns: SelectorType<SortColumn[]> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state?.sortColumns\n);\n\nexport const selectObjectCounters: SelectorType<S3ObjectCounterResponse> = createSelector(\n    selectObjectListFeature,\n    (state: S3ObjectListState) => state?.s3ObjectCounters\n);\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nfunction MatProgressBar_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\nclass MatProgressBar {\n  constructor(_elementRef, _ngZone, _changeDetectorRef, _animationMode, defaults) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Flag that indicates whether NoopAnimations mode is set to true. */\n    this._isNoopAnimation = false;\n    this._defaultColor = 'primary';\n    this._value = 0;\n    this._bufferValue = 0;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     */\n    this.animationEnd = new EventEmitter();\n    this._mode = 'determinate';\n    /** Event handler for `transitionend` events. */\n    this._transitionendHandler = event => {\n      if (this.animationEnd.observers.length === 0 || !event.target || !event.target.classList.contains('mdc-linear-progress__primary-bar')) {\n        return;\n      }\n      if (this.mode === 'determinate' || this.mode === 'buffer') {\n        this._ngZone.run(() => this.animationEnd.next({\n          value: this.value\n        }));\n      }\n    };\n    this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    if (defaults) {\n      if (defaults.color) {\n        this.color = this._defaultColor = defaults.color;\n      }\n      this.mode = defaults.mode || this.mode;\n    }\n  }\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the progress bar. This API is supported in M2 themes only, it\n   * has no effect in M3 themes.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/theming#using-component-color-variants.\n   */\n  get color() {\n    return this._color || this._defaultColor;\n  }\n  set color(value) {\n    this._color = value;\n  }\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    this._value = clamp(v || 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Buffer value of the progress bar. Defaults to zero. */\n  get bufferValue() {\n    return this._bufferValue || 0;\n  }\n  set bufferValue(v) {\n    this._bufferValue = clamp(v || 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    // Note that we don't technically need a getter and a setter here,\n    // but we use it to match the behavior of the existing mat-progress-bar.\n    this._mode = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  ngAfterViewInit() {\n    // Run outside angular so change detection didn't get triggered on every transition end\n    // instead only on the animation that we care about (primary value bar's transitionend)\n    this._ngZone.runOutsideAngular(() => {\n      this._elementRef.nativeElement.addEventListener('transitionend', this._transitionendHandler);\n    });\n  }\n  ngOnDestroy() {\n    this._elementRef.nativeElement.removeEventListener('transitionend', this._transitionendHandler);\n  }\n  /** Gets the transform style that should be applied to the primary bar. */\n  _getPrimaryBarTransform() {\n    return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;\n  }\n  /** Gets the `flex-basis` value that should be applied to the buffer bar. */\n  _getBufferBarFlexBasis() {\n    return `${this.mode === 'buffer' ? this.bufferValue : 100}%`;\n  }\n  /** Returns whether the progress bar is indeterminate. */\n  _isIndeterminate() {\n    return this.mode === 'indeterminate' || this.mode === 'query';\n  }\n  static {\n    this.ɵfac = function MatProgressBar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatProgressBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatProgressBar,\n      selectors: [[\"mat-progress-bar\"]],\n      hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-bar\", \"mdc-linear-progress\"],\n      hostVars: 10,\n      hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuenow\", ctx._isIndeterminate() ? null : ctx.value)(\"mode\", ctx.mode);\n          i0.ɵɵclassMap(\"mat-\" + ctx.color);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation)(\"mdc-linear-progress--animation-ready\", !ctx._isNoopAnimation)(\"mdc-linear-progress--indeterminate\", ctx._isIndeterminate());\n        }\n      },\n      inputs: {\n        color: \"color\",\n        value: [2, \"value\", \"value\", numberAttribute],\n        bufferValue: [2, \"bufferValue\", \"bufferValue\", numberAttribute],\n        mode: \"mode\"\n      },\n      outputs: {\n        animationEnd: \"animationEnd\"\n      },\n      exportAs: [\"matProgressBar\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 7,\n      vars: 5,\n      consts: [[\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__buffer\"], [1, \"mdc-linear-progress__buffer-bar\"], [1, \"mdc-linear-progress__buffer-dots\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__primary-bar\"], [1, \"mdc-linear-progress__bar-inner\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__secondary-bar\"]],\n      template: function MatProgressBar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"div\", 1);\n          i0.ɵɵtemplate(2, MatProgressBar_Conditional_2_Template, 1, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3);\n          i0.ɵɵelement(4, \"span\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5);\n          i0.ɵɵelement(6, \"span\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"flex-basis\", ctx._getBufferBarFlexBasis());\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.mode === \"buffer\" ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"transform\", ctx._getPrimaryBarTransform());\n        }\n      },\n      styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height),var(--mdc-linear-progress-active-indicator-height))}.cdk-high-contrast-active .mdc-linear-progress{outline-color:CanvasText}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-app-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.cdk-high-contrast-active .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressBar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-progress-bar',\n      exportAs: 'matProgressBar',\n      host: {\n        'role': 'progressbar',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        // set tab index to -1 so screen readers will read the aria-label\n        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n        'tabindex': '-1',\n        '[attr.aria-valuenow]': '_isIndeterminate() ? null : value',\n        '[attr.mode]': 'mode',\n        'class': 'mat-mdc-progress-bar mdc-linear-progress',\n        '[class]': '\"mat-\" + color',\n        '[class._mat-animation-noopable]': '_isNoopAnimation',\n        '[class.mdc-linear-progress--animation-ready]': '!_isNoopAnimation',\n        '[class.mdc-linear-progress--indeterminate]': '_isIndeterminate()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\",\n      styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height),var(--mdc-linear-progress-active-indicator-height))}.cdk-high-contrast-active .mdc-linear-progress{outline-color:CanvasText}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-app-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.cdk-high-contrast-active .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_PROGRESS_BAR_DEFAULT_OPTIONS]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    bufferValue: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    animationEnd: [{\n      type: Output\n    }],\n    mode: [{\n      type: Input\n    }]\n  });\n})();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\nclass MatProgressBarModule {\n  static {\n    this.ɵfac = function MatProgressBarModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatProgressBarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatProgressBarModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatProgressBar],\n      exports: [MatProgressBar, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n","import {Component, ElementRef, Inject, signal, ViewChild} from '@angular/core';\nimport {MatButton} from \"@angular/material/button\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatFormField, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {byteConversion} from \"../../../shared/byte-utils.component\";\nimport {MatProgressBar} from \"@angular/material/progress-bar\";\n\n@Component({\n    selector: 's3-object-upload',\n    templateUrl: './object-upload.component.html',\n    standalone: true,\n    imports: [\n        MatIcon,\n        FormsModule,\n        MatButton,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        MatProgressBar\n    ],\n    styleUrls: ['./object-upload.component.scss']\n})\nexport class ObjectUploadComponent {\n\n    key: string = '';\n    bucketName: string = '';\n    file: File = {} as File;\n    fileName: string = '';\n    uploadDisabled: boolean = true;\n    progress: number = 0;\n    fileSize = signal(0);\n    maxSize: number = 256 * 1024 * 1024;\n    @ViewChild('fileInput') fileInput: ElementRef | undefined;\n    selectedFile: File | null = null;\n    uploadSuccess: boolean = false;\n    uploadError: boolean = false;\n    protected readonly byteConversion = byteConversion;\n\n    constructor(private snackBar: MatSnackBar, private dialogRef: MatDialogRef<ObjectUploadComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.bucketName = data.bucketName;\n    }\n\n    // Method to handle file upload\n    // Handler for file input change\n    onFileChange(event: any): void {\n        this.file = event.target.files[0];\n        this.fileName = this.file.name;\n        this.key = this.file.name;\n        this.uploadDisabled = !(this.file && this.key && this.fileName)\n    }\n\n    // Handler for file drop\n    onFileDrop(event: DragEvent): void {\n        event.preventDefault();\n        if (event.dataTransfer) {\n            this.file = event.dataTransfer.files[0];\n            this.fileName = this.file.name;\n        }\n        this.uploadDisabled = !(this.file && this.key && this.fileName)\n    }\n\n    // Prevent default dragover behavior\n    onDragOver(event: DragEvent): void {\n        event.preventDefault();\n    }\n\n    // Method to handle file upload\n    uploadFile(file: File | null): void {\n        if (file) {\n            this.selectedFile = file;\n            this.fileSize.set(Math.round(file.size / 1024)); // Set file size in KB\n\n            if (file.size > this.maxSize) {\n                const fileSizeInMegaBytes = (file.size / 1024 / 1024).toFixed(0);\n                this.snackBar.open(\"File size is \" + fileSizeInMegaBytes + \"MB. Max size is 256MB, use the AWS CLI instead.\", \"Error\", {duration: 5000});\n                return;\n            }\n            const reader = new FileReader();\n            reader.onload = () => {\n                this.dialogRef.close({content: new Blob([reader.result as ArrayBuffer]), key: this.key});\n            };\n            reader.addEventListener(\"progress\", this.handleProgress);\n            reader.readAsText(file);\n\n            this.uploadSuccess = true;\n            this.uploadError = false;\n        }\n    }\n\n    doUpload() {\n        this.uploadFile(this.file);\n    }\n\n    handleProgress(event: ProgressEvent) {\n        this.progress = (event.loaded / event.total) * 100;\n    }\n}\n\n","<!--h2 mat-dialog-title>Upload Object</h2>\n<mat-dialog-content class=\"mat-typography\" style=\"width: 500px;height:200px\">\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Key</mat-label>\n        <input [(ngModel)]=\"key\" matInput value=\"\">\n    </mat-form-field>\n    <div (click)=\"uploadFile.click()\">\n        <mat-form-field style=\"width: 100%\">\n            <mat-label>File name</mat-label>\n            <input matInput readonly value=\"{{fileName}}\">\n        </mat-form-field>\n        <button color=\"primary\" mat-raised-button>Choose File</button>\n        <input #uploadFile (change)=\"upload($event)\" style=\"display:none\" type='file'/>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"doUpload()\" cdkFocusInitial mat-button>Upload</button>\n</mat-dialog-actions-->\n\n<h2 mat-dialog-title>Upload File</h2>\n<mat-dialog-content class=\"mat-typography\" style=\"width: 500px;height:200px\">\n    <div (dragover)=\"onDragOver($event)\" (drop)=\"onFileDrop($event)\" [class.error]=\"uploadError\" [class.success]=\"uploadSuccess\" class=\"file-upload-wrapper\">\n        <input #fileInput (change)=\"onFileChange($event)\" accept=\"application/json\" hidden type=\"file\"/>\n        <div (click)=\"fileInput.click()\" class=\"file-dropper\">\n            <mat-icon>upload</mat-icon>\n            <p>Upload file</p>\n        </div>\n    </div>\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>File</mat-label>\n        <input [(ngModel)]=\"fileName\" matInput readonly value=\"\">\n    </mat-form-field>\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Key</mat-label>\n        <input [(ngModel)]=\"key\" matInput value=\"\">\n    </mat-form-field>\n    <mat-progress-bar mode=\"determinate\" value=\"{{progress}}\"></mat-progress-bar>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"doUpload()\" cdkFocusInitial disabled=\"{{uploadDisabled}}\" mat-button>Upload</button>\n</mat-dialog-actions>\n","import {Component, Inject} from '@angular/core';\nimport {MatButton} from \"@angular/material/button\";\nimport {MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatFormField, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {saveAs} from \"file-saver\";\n\n@Component({\n    selector: 'export-file-download',\n    templateUrl: './s3-object-download.component.html',\n    standalone: true,\n    imports: [\n        FormsModule,\n        MatButton,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel\n    ],\n    styleUrls: ['./s3-object-download.component.scss'],\n    providers: []\n})\nexport class S3ObjectDownloadComponent {\n\n    // Todo: Generate server download URL and send the file from there.\n    body: string = '';\n    fileName: string | undefined = '';\n\n    constructor(private snackBar: MatSnackBar, private dialogRef: MatDialogRef<S3ObjectDownloadComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.body = data;\n    }\n\n    // Method to handle file upload\n    download(): void {\n        if (this.fileName) {\n            const blob = new Blob([this.body], {type: \"application/json\"});\n            saveAs(blob, this.fileName);\n            this.snackBar.open(\"S3 object saved to local file: \" + this.fileName, 'Done', {duration: 5000});\n            this.dialogRef.close(true);\n        }\n    }\n}\n","<h2 mat-dialog-title>Download Object</h2>\n<mat-dialog-content class=\"mat-typography\" style=\"width: 500px;height:200px\">\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>File name</mat-label>\n        <input [(ngModel)]=\"fileName\" matInput value=\"\">\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button (click)=\"download()\" cdkFocusInitial mat-button>Download</button>\n</mat-dialog-actions>\n","export class ParsingError extends Error {\n  constructor(message, cause) {\n    super(message);\n    this.cause = cause;\n  }\n}\nlet parsingState;\nfunction nextChild() {\n  return element(false) || text() || comment() || cdata();\n}\nfunction nextRootChild() {\n  match(/\\s*/);\n  return element(true) || comment() || doctype() || processingInstruction(false);\n}\nfunction parseDocument() {\n  const declaration = processingInstruction(true);\n  const children = [];\n  let documentRootNode;\n  let child = nextRootChild();\n  while (child) {\n    if (child.node.type === 'Element') {\n      if (documentRootNode) {\n        throw new Error('Found multiple root nodes');\n      }\n      documentRootNode = child.node;\n    }\n    if (!child.excluded) {\n      children.push(child.node);\n    }\n    child = nextRootChild();\n  }\n  if (!documentRootNode) {\n    throw new ParsingError('Failed to parse XML', 'Root Element not found');\n  }\n  if (parsingState.xml.length !== 0) {\n    throw new ParsingError('Failed to parse XML', 'Not Well-Formed XML');\n  }\n  return {\n    declaration: declaration ? declaration.node : null,\n    root: documentRootNode,\n    children\n  };\n}\nfunction processingInstruction(matchDeclaration) {\n  const m = matchDeclaration ? match(/^<\\?(xml)\\s*/) : match(/^<\\?([\\w-:.]+)\\s*/);\n  if (!m) return;\n  // tag\n  const node = {\n    name: m[1],\n    type: 'ProcessingInstruction',\n    attributes: {}\n  };\n  // attributes\n  while (!(eos() || is('?>'))) {\n    const attr = attribute();\n    if (attr) {\n      node.attributes[attr.name] = attr.value;\n    } else {\n      return;\n    }\n  }\n  match(/\\?>/);\n  return {\n    excluded: matchDeclaration ? false : parsingState.options.filter(node) === false,\n    node\n  };\n}\nfunction element(matchRoot) {\n  const m = match(/^<([^?!</>\\s]+)\\s*/);\n  if (!m) return;\n  // name\n  const node = {\n    type: 'Element',\n    name: m[1],\n    attributes: {},\n    children: []\n  };\n  const excluded = matchRoot ? false : parsingState.options.filter(node) === false;\n  // attributes\n  while (!(eos() || is('>') || is('?>') || is('/>'))) {\n    const attr = attribute();\n    if (attr) {\n      node.attributes[attr.name] = attr.value;\n    } else {\n      return;\n    }\n  }\n  // self closing tag\n  if (match(/^\\s*\\/>/)) {\n    node.children = null;\n    return {\n      excluded,\n      node\n    };\n  }\n  match(/\\??>/);\n  // children\n  let child = nextChild();\n  while (child) {\n    if (!child.excluded) {\n      node.children.push(child.node);\n    }\n    child = nextChild();\n  }\n  // closing\n  if (parsingState.options.strictMode) {\n    const closingTag = `</${node.name}>`;\n    if (parsingState.xml.startsWith(closingTag)) {\n      parsingState.xml = parsingState.xml.slice(closingTag.length);\n    } else {\n      throw new ParsingError('Failed to parse XML', `Closing tag not matching \"${closingTag}\"`);\n    }\n  } else {\n    match(/^<\\/[\\w-:.\\u00C0-\\u00FF]+\\s*>/);\n  }\n  return {\n    excluded,\n    node\n  };\n}\nfunction doctype() {\n  const m = match(/^<!DOCTYPE\\s+\\S+\\s+SYSTEM[^>]*>/) || match(/^<!DOCTYPE\\s+\\S+\\s+PUBLIC[^>]*>/) || match(/^<!DOCTYPE\\s+\\S+\\s*\\[[^\\]]*]>/) || match(/^<!DOCTYPE\\s+\\S+\\s*>/);\n  if (m) {\n    const node = {\n      type: 'DocumentType',\n      content: m[0]\n    };\n    return {\n      excluded: parsingState.options.filter(node) === false,\n      node\n    };\n  }\n}\nfunction cdata() {\n  if (parsingState.xml.startsWith('<![CDATA[')) {\n    const endPositionStart = parsingState.xml.indexOf(']]>');\n    if (endPositionStart > -1) {\n      const endPositionFinish = endPositionStart + 3;\n      const node = {\n        type: 'CDATA',\n        content: parsingState.xml.substring(0, endPositionFinish)\n      };\n      parsingState.xml = parsingState.xml.slice(endPositionFinish);\n      return {\n        excluded: parsingState.options.filter(node) === false,\n        node\n      };\n    }\n  }\n}\nfunction comment() {\n  const m = match(/^<!--[\\s\\S]*?-->/);\n  if (m) {\n    const node = {\n      type: 'Comment',\n      content: m[0]\n    };\n    return {\n      excluded: parsingState.options.filter(node) === false,\n      node\n    };\n  }\n}\nfunction text() {\n  const m = match(/^([^<]+)/);\n  if (m) {\n    const node = {\n      type: 'Text',\n      content: m[1]\n    };\n    return {\n      excluded: parsingState.options.filter(node) === false,\n      node\n    };\n  }\n}\nfunction attribute() {\n  const m = match(/([^=]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^>\\s]+)\\s*/);\n  if (m) {\n    return {\n      name: m[1].trim(),\n      value: stripQuotes(m[2].trim())\n    };\n  }\n}\nfunction stripQuotes(val) {\n  return val.replace(/^['\"]|['\"]$/g, '');\n}\n/**\n * Match `re` and advance the string.\n */\nfunction match(re) {\n  const m = parsingState.xml.match(re);\n  if (m) {\n    parsingState.xml = parsingState.xml.slice(m[0].length);\n    return m;\n  }\n}\n/**\n * End-of-source.\n */\nfunction eos() {\n  return 0 === parsingState.xml.length;\n}\n/**\n * Check for `prefix`.\n */\nfunction is(prefix) {\n  return 0 === parsingState.xml.indexOf(prefix);\n}\n/**\n * Parse the given XML string into an object.\n */\nfunction parseXml(xml, options = {}) {\n  xml = xml.trim();\n  const filter = options.filter || (() => true);\n  parsingState = {\n    xml,\n    options: Object.assign(Object.assign({}, options), {\n      filter,\n      strictMode: options.strictMode === true\n    })\n  };\n  return parseDocument();\n}\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = parseXml;\n}\nexport default parseXml;\n","import xmlParser from 'xml-parser-xo';\nfunction newLine(state) {\n  if (!state.options.indentation && !state.options.lineSeparator) return;\n  state.content += state.options.lineSeparator;\n  let i;\n  for (i = 0; i < state.level; i++) {\n    state.content += state.options.indentation;\n  }\n}\nfunction indent(state) {\n  state.content = state.content.replace(/ +$/, '');\n  let i;\n  for (i = 0; i < state.level; i++) {\n    state.content += state.options.indentation;\n  }\n}\nfunction appendContent(state, content) {\n  state.content += content;\n}\nfunction processNode(node, state, preserveSpace) {\n  if (typeof node.content === 'string') {\n    processContent(node.content, state, preserveSpace);\n  } else if (node.type === 'Element') {\n    processElementNode(node, state, preserveSpace);\n  } else if (node.type === 'ProcessingInstruction') {\n    processProcessingIntruction(node, state);\n  } else {\n    throw new Error('Unknown node type: ' + node.type);\n  }\n}\nfunction processContent(content, state, preserveSpace) {\n  if (!preserveSpace) {\n    const trimmedContent = content.trim();\n    if (state.options.lineSeparator) {\n      content = trimmedContent;\n    } else if (trimmedContent.length === 0) {\n      content = trimmedContent;\n    }\n  }\n  if (content.length > 0) {\n    if (!preserveSpace && state.content.length > 0) {\n      newLine(state);\n    }\n    appendContent(state, content);\n  }\n}\nfunction isPathMatchingIgnoredPaths(path, ignoredPaths) {\n  const fullPath = '/' + path.join('/');\n  const pathLastPart = path[path.length - 1];\n  return ignoredPaths.includes(pathLastPart) || ignoredPaths.includes(fullPath);\n}\nfunction processElementNode(node, state, preserveSpace) {\n  state.path.push(node.name);\n  if (!preserveSpace && state.content.length > 0) {\n    newLine(state);\n  }\n  appendContent(state, '<' + node.name);\n  processAttributes(state, node.attributes);\n  if (node.children === null || state.options.forceSelfClosingEmptyTag && node.children.length === 0) {\n    const selfClosingNodeClosingTag = state.options.whiteSpaceAtEndOfSelfclosingTag ? ' />' : '/>';\n    // self-closing node\n    appendContent(state, selfClosingNodeClosingTag);\n  } else if (node.children.length === 0) {\n    // empty node\n    appendContent(state, '></' + node.name + '>');\n  } else {\n    const nodeChildren = node.children;\n    appendContent(state, '>');\n    state.level++;\n    let nodePreserveSpace = node.attributes['xml:space'] === 'preserve';\n    let ignoredPath = false;\n    if (!nodePreserveSpace && state.options.ignoredPaths) {\n      ignoredPath = isPathMatchingIgnoredPaths(state.path, state.options.ignoredPaths);\n      nodePreserveSpace = ignoredPath;\n    }\n    if (!nodePreserveSpace && state.options.collapseContent) {\n      let containsTextNodes = false;\n      let containsTextNodesWithLineBreaks = false;\n      let containsNonTextNodes = false;\n      nodeChildren.forEach(function (child, index) {\n        if (child.type === 'Text') {\n          if (child.content.includes('\\n')) {\n            containsTextNodesWithLineBreaks = true;\n            child.content = child.content.trim();\n          } else if ((index === 0 || index === nodeChildren.length - 1) && !preserveSpace) {\n            if (child.content.trim().length === 0) {\n              // If the text node is at the start or end and is empty, it should be ignored when formatting\n              child.content = '';\n            }\n          }\n          if (child.content.trim().length > 0) {\n            containsTextNodes = true;\n          }\n        } else if (child.type === 'CDATA') {\n          containsTextNodes = true;\n        } else {\n          containsNonTextNodes = true;\n        }\n      });\n      if (containsTextNodes && (!containsNonTextNodes || !containsTextNodesWithLineBreaks)) {\n        nodePreserveSpace = true;\n      }\n    }\n    nodeChildren.forEach(function (child) {\n      processNode(child, state, preserveSpace || nodePreserveSpace);\n    });\n    state.level--;\n    if (!preserveSpace && !nodePreserveSpace) {\n      newLine(state);\n    }\n    if (ignoredPath) {\n      indent(state);\n    }\n    appendContent(state, '</' + node.name + '>');\n  }\n  state.path.pop();\n}\nfunction processAttributes(state, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    const escaped = attributes[attr].replace(/\"/g, '&quot;');\n    appendContent(state, ' ' + attr + '=\"' + escaped + '\"');\n  });\n}\nfunction processProcessingIntruction(node, state) {\n  if (state.content.length > 0) {\n    newLine(state);\n  }\n  appendContent(state, '<?' + node.name);\n  processAttributes(state, node.attributes);\n  appendContent(state, '?>');\n}\n/**\n * Converts the given XML into human readable format.\n */\nfunction formatXml(xml, options = {}) {\n  options.indentation = 'indentation' in options ? options.indentation : '    ';\n  options.collapseContent = options.collapseContent === true;\n  options.lineSeparator = 'lineSeparator' in options ? options.lineSeparator : '\\r\\n';\n  options.whiteSpaceAtEndOfSelfclosingTag = options.whiteSpaceAtEndOfSelfclosingTag === true;\n  options.throwOnFailure = options.throwOnFailure !== false;\n  try {\n    const parsedXml = xmlParser(xml, {\n      filter: options.filter,\n      strictMode: options.strictMode\n    });\n    const state = {\n      content: '',\n      level: 0,\n      options: options,\n      path: []\n    };\n    if (parsedXml.declaration) {\n      processProcessingIntruction(parsedXml.declaration, state);\n    }\n    parsedXml.children.forEach(function (child) {\n      processNode(child, state, false);\n    });\n    if (!options.lineSeparator) {\n      return state.content;\n    }\n    return state.content.replace(/\\r\\n/g, '\\n').replace(/\\n/g, options.lineSeparator);\n  } catch (err) {\n    if (options.throwOnFailure) {\n      throw err;\n    }\n    return xml;\n  }\n}\nformatXml.minify = (xml, options = {}) => {\n  return formatXml(xml, Object.assign(Object.assign({}, options), {\n    indentation: '',\n    lineSeparator: ''\n  }));\n};\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = formatXml;\n}\nexport default formatXml;\n","import {Component, Inject} from '@angular/core';\nimport {S3Service} from \"../../service/s3-service.component\";\nimport {MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle} from \"@angular/material/dialog\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {CdkTextareaAutosize} from \"@angular/cdk/text-field\";\nimport {MatButton} from \"@angular/material/button\";\nimport {MatFormField, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {GetObjectCommandOutput} from \"@aws-sdk/client-s3\";\nimport {MatSlideToggle, MatSlideToggleChange} from \"@angular/material/slide-toggle\";\nimport xmlFormat from 'xml-formatter';\n\n@Component({\n    selector: 's3-object-view',\n    templateUrl: './object-view.component.html',\n    styleUrls: ['./object-view.component.scss'],\n    standalone: true,\n    providers: [S3Service],\n    imports: [\n        CdkDrag,\n        CdkDragHandle,\n        CdkTextareaAutosize,\n        MatButton,\n        MatDialogActions,\n        MatDialogClose,\n        MatDialogContent,\n        MatDialogTitle,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        ReactiveFormsModule,\n        FormsModule,\n        MatSlideToggle\n    ]\n})\nexport class S3ObjectViewDialog {\n\n    bucketName: string = '';\n    key: string = '';\n    body: string = '';\n    contentType: string = '';\n    prettyPrint: boolean = true;\n    transformedBody: string = '';\n\n    constructor(private dialogRef: MatDialogRef<S3ObjectViewDialog>, @Inject(MAT_DIALOG_DATA) public data: any, private s3Service: S3Service) {\n        this.bucketName = data.bucketName;\n        this.key = data.key;\n        this.contentType = data.contentType;\n        this.s3Service.getObject(this.bucketName, this.key).then((data: GetObjectCommandOutput) => {\n            data.Body?.transformToString().then((data: string) => {\n                this.body = data;\n                if (this.prettyPrint) {\n                    this.transformedBody = this.transform(this.body);\n                }\n            });\n        });\n    }\n\n    changePrettyPrint(event: MatSlideToggleChange) {\n        if (this.body !== undefined) {\n            if (event.checked) {\n                this.transformedBody = this.transform(this.body);\n            } else {\n                this.transformedBody = this.body;\n            }\n        }\n    }\n\n    transform(body: string): string {\n        if (this.isJson()) {\n            return JSON.stringify(JSON.parse(body), null, 2);\n        } else if (this.isXml()) {\n            return xmlFormat(body);\n        }\n        return body;\n    }\n\n    isJson() {\n        return this.contentType === \"application/json\" || this.contentType.startsWith(\"text/plain\");\n    }\n\n    isXml() {\n        return this.contentType === \"application/xml\";\n    }\n}\n","<h2 cdkDrag cdkDragHandle cdkDragRootElement=\".cdk-overlay-pane\" mat-dialog-title>S3 Object: {{ key }}</h2>\n<mat-dialog-actions>\n    <mat-slide-toggle (change)=\"changePrettyPrint($event)\"\n                      [checked]=\"prettyPrint\"\n                      labelPosition=\"before\">\n        Pretty Print:\n    </mat-slide-toggle>\n</mat-dialog-actions>\n<mat-dialog-content class=\"mat-typography\">\n    <mat-form-field style=\"width: 100%;height:100%\">\n        <mat-label>Object</mat-label>\n        <textarea [(ngModel)]=\"transformedBody\" cdkAutosizeMinRows=\"70\" cdkTextareaAutosize matInput placeholder=\"Invalid object\" readonly\n                  style=\"width:100%; height:100%\"></textarea>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {filter, interval, Observable, Subscription} from \"rxjs\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {Sort} from \"@angular/material/sort\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {AwsMockHttpService} from \"../../../services/awsmock-http.service\";\nimport {S3Service} from \"../service/s3-service.component\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SortColumn} from \"../../../shared/sorting/sorting.component\";\nimport {ActionsSubject, State, Store} from \"@ngrx/store\";\nimport {S3BucketListState} from \"../bucket-list/state/s3-bucket-list.reducer\";\nimport {Location} from \"@angular/common\";\nimport {s3ObjectListActions} from \"./state/s3-object-list.actions\";\nimport {selectPageIndex, selectPageSize} from \"../bucket-list/state/s3-bucket-list.selectors\";\nimport {S3ObjectCounterResponse, S3ObjectItem} from \"../model/s3-object-item\";\nimport {selectObjectCounters} from \"./state/s3-object-list.selectors\";\nimport {ObjectUploadComponent} from \"../object-upload/object-upload.component\";\nimport {byteConversion} from \"../../../shared/byte-utils.component\";\nimport {S3ObjectDownloadComponent} from \"./download/s3-object-download.component\";\nimport {S3ObjectViewDialog} from \"./view/object-view.component\";\n\n@Component({\n    selector: 's3-object-list',\n    templateUrl: './object-list.component.html',\n    styleUrls: ['./object-list.component.scss'],\n    providers: [S3Service, AwsMockHttpService]\n})\nexport class S3ObjectListComponent implements OnInit, OnDestroy, AfterViewInit {\n\n    // Last update time\n    lastUpdate: Date = new Date();\n\n    // Table\n    bucketName: string = '';\n    pageSize$: Observable<number> = this.store.select(selectPageSize);\n    pageIndex$: Observable<number> = this.store.select(selectPageIndex);\n    s3ObjectCountersResponse$: Observable<S3ObjectCounterResponse> = this.store.select(selectObjectCounters);\n\n    // Prefix\n    prefixValue: string = '';\n    prefixSet: boolean = false;\n\n    // Auto-update\n    updateSubscription: Subscription | undefined;\n\n    // Paging\n    columns: any[] = ['key', 'contentType', 'size', 'created', 'modified', 'actions'];\n    pageSizeOptions = [5, 10, 20, 50, 100];\n    hidePageSize = false;\n    showPageSizeOptions = true;\n    showFirstLastButtons = true;\n    disabled = false;\n\n    // Sorting\n    sortColumns: SortColumn[] = [];\n    protected readonly byteConversion = byteConversion;\n    protected routerSubscription: any;\n\n    constructor(private snackBar: MatSnackBar, private dialog: MatDialog, private route: ActivatedRoute, private state: State<S3BucketListState>, private store: Store,\n                private actionsSubj$: ActionsSubject, private location: Location, private s3Service: S3Service) {\n\n        // Subscribe to action events, reload table when the action got successful executed\n        this.actionsSubj$.pipe(\n            filter((action) =>\n                action.type === s3ObjectListActions.deleteObjectSuccess.type\n            )\n        ).subscribe(() => {\n            this.loadObjects();\n        });\n        this.s3ObjectCountersResponse$.subscribe((data) => {\n            console.log(data);\n        });\n    }\n\n    ngOnInit(): void {\n        this.routerSubscription = this.route.params.subscribe(params => {\n            this.bucketName = decodeURI(params['bucketName']);\n            this.state.value.bucketName = decodeURI(params['bucketName']);\n        });\n        this.updateSubscription = interval(60000).subscribe(() => this.loadObjects());\n        this.loadObjects();\n    }\n\n    ngOnDestroy(): void {\n        this.updateSubscription?.unsubscribe();\n    }\n\n    ngAfterViewInit() {\n        // @ts-ignore\n        this.objectData.sort = this.sort;\n    }\n\n    setPrefix() {\n        this.prefixSet = true;\n        this.state.value['s3-object-list'].prefix = this.prefixValue;\n        this.loadObjects();\n    }\n\n    unsetPrefix() {\n        this.prefixValue = '';\n        this.prefixSet = false;\n        this.state.value['s3-object-list'].prefix = '';\n        this.loadObjects();\n    }\n\n    back() {\n        this.location.back();\n    }\n\n    refresh() {\n        this.loadObjects();\n    }\n\n    handlePageEvent(e: PageEvent) {\n        this.state.value['s3-object-list'].pageSize = e.pageSize;\n        this.state.value['s3-object-list'].pageIndex = e.pageIndex;\n        this.store.dispatch(s3ObjectListActions.loadObjects({\n            bucketName: this.bucketName,\n            prefix: this.state.value['s3-object-list'].prefix,\n            pageSize: this.state.value['s3-object-list'].pageSize,\n            pageIndex: this.state.value['s3-object-list'].pageIndex,\n            sortColumns: this.state.value['s3-object-list'].sortColumns\n        }));\n    }\n\n    sortChange(sortState: Sort) {\n        this.sortColumns = [];\n        if (sortState.direction === 'asc') {\n            this.sortColumns.push({column: sortState.active, sortDirection: 1});\n        } else {\n            this.sortColumns.push({column: sortState.active, sortDirection: -1});\n        }\n        this.state.value['s3-object-list'].sortColumns = this.sortColumns;\n        this.loadObjects();\n    }\n\n    loadObjects() {\n        this.lastUpdate = new Date();\n        this.store.dispatch(s3ObjectListActions.loadObjects({\n            bucketName: this.bucketName,\n            prefix: this.state.value['s3-object-list'].prefix,\n            pageSize: this.state.value['s3-object-list'].pageSize,\n            pageIndex: this.state.value['s3-object-list'].pageIndex,\n            sortColumns: this.state.value['s3-object-list'].sortColumns\n        }));\n    }\n\n    downloadObject(bucketName: string, key: string) {\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.data = {bucketName: bucketName, key: key}\n        dialogConfig.height = \"430px\"\n\n        this.dialog.open(S3ObjectDownloadComponent, dialogConfig).afterClosed().subscribe((result: any) => {\n            if (result) {\n                this.snackBar.open('Object downloaded, bucket: ' + this.bucketName + ' key: ' + result.key, 'Done', {duration: 5000});\n                this.doUpload(result.content, result.key);\n            }\n        });\n    }\n\n    deleteObject(key: string) {\n        this.store.dispatch(s3ObjectListActions.deleteObject({\n            bucketName: this.bucketName,\n            key: key,\n        }));\n    }\n\n    uploadObject() {\n\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.data = {bucketName: this.bucketName}\n        dialogConfig.height = \"430px\"\n\n        this.dialog.open(ObjectUploadComponent, dialogConfig).afterClosed().subscribe((result: any) => {\n            if (result) {\n                this.snackBar.open('Object uploaded, bucket: ' + this.bucketName + ' key: ' + result.key, 'Done', {duration: 5000});\n                this.doUpload(result.content, result.key);\n            }\n        });\n    }\n\n    viewObject(object: S3ObjectItem) {\n\n        if (object !== undefined) {\n            if (object.size !== undefined && object.size > 1024 * 1024) {\n                this.snackBar.open(\"Object to big, maxSize: 1MB\", \"Error\", {duration: 5000});\n                return;\n            }\n            if (object.contentType !== undefined && !this.hasAllowedContentType(object.contentType)) {\n                this.snackBar.open(\"Invalid content type: \" + object.contentType, \"Error\", {duration: 5000});\n                return;\n            }\n\n            const dialogConfig = new MatDialogConfig();\n\n            dialogConfig.disableClose = true;\n            dialogConfig.autoFocus = true;\n            dialogConfig.maxWidth = '100vw';\n            dialogConfig.maxHeight = '100vh';\n            dialogConfig.panelClass = 'full-screen-modal';\n            dialogConfig.width = \"80%\"\n            dialogConfig.minWidth = '280px'\n            dialogConfig.data = {bucketName: this.bucketName, key: object.key, contentType: object.contentType};\n\n            this.dialog.open(S3ObjectViewDialog, dialogConfig).afterClosed().subscribe((result: any) => {\n            });\n        }\n    }\n\n    // Method to handle file upload\n    doUpload(content: Blob, key: string): void {\n        this.s3Service.putObjects(this.bucketName, key, content).then(() =>\n            this.loadObjects()\n        );\n    }\n\n    hasAllowedContentType(contentType: string) {\n        return contentType === \"application/xml\" || contentType === \"application/json\" || contentType === \"text/html\" || contentType.startsWith(\"text/plain\");\n    }\n}\n","<mat-card appearance=\"outlined\" style=\"margin: 3px;\">\n    <mat-card-header>\n        <button (click)=\"back()\" aria-label=\"Back\" class=\"head-buttons-left\" mat-icon-button>\n            <mat-icon>arrow_back</mat-icon>\n        </button>\n        <span class=\"fill-remaining-space\">\n            <h4>S3 Objects: {{ bucketName }}</h4>\n        </span>\n        <button (click)=\"uploadObject()\" aria-label=\"Refresh\" mat-icon-button>\n            <mat-icon>upload</mat-icon>\n        </button>\n        <button (click)=\"refresh()\" aria-label=\"Refresh\" mat-icon-button>\n            <mat-icon>refresh</mat-icon>\n        </button>\n    </mat-card-header>\n    <mat-card-content>\n        <mat-card appearance=\"outlined\" style=\"margin: -10px;\">\n            <mat-card-actions class=\"head-buttons\">\n                <mat-form-field style=\"width:100%\">\n                    <mat-label>Prefix</mat-label>\n                    <input [(ngModel)]=\"prefixValue\" matInput name=\"search\" placeholder=\"Search\" type=\"text\">\n                    <button (click)=\"setPrefix()\" *ngIf=\"!prefixSet\" mat-icon-button matSuffix style=\"float: right\">\n                        <mat-icon matSuffix>search</mat-icon>\n                    </button>\n                    <button (click)=\"unsetPrefix()\" *ngIf=\"prefixSet\" mat-icon-button matSuffix style=\"float: right\">\n                        <mat-icon matSuffix>close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </mat-card-actions>\n            <div class=\"table-container\">\n                <div *ngIf=\"s3ObjectCountersResponse$ | async as objectCounters\" class=\"row\">\n                    <table (matSortChange)=\"sortChange($event)\" [dataSource]=\"objectCounters.objectCounters\" class=\"mat-elevation-z8 queue-table\" mat-table matSort>\n                        <ng-container matColumnDef=\"key\" matTooltip=\"Object key\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Object key\" sortActionDescription=\"Sort by key\">Name</th>\n                            <td *matCellDef=\"let element\" mat-cell>\n                                <mat-nav-list>\n                                    <a (click)=\"viewObject(element)\" mat-list-item> {{ element.key }}</a>\n                                </mat-nav-list>\n                            </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"contentType\" matTooltip=\"Object content type\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Object content type\" sortActionDescription=\"Sort by contentType\">\n                                Content-Type\n                            </th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.contentType }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"size\" matTooltip=\"Object size in bytes\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Object size\" sortActionDescription=\"Sort by key\">Size</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ byteConversion(element.size) }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"created\" matTooltip=\"Created\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Create timestamp\" sortActionDescription=\"Sort by created\">Created</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.created | date: 'dd-MM-yyyy hh:mm:ss' }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"modified\" matTooltip=\"Modified\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header matTooltip=\"Modified timestamp\" sortActionDescription=\"Sort by modified\">Modified</th>\n                            <td *matCellDef=\"let element\" mat-cell> {{ element.modified | date: 'dd-MM-yyyy hh:mm:ss' }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"actions\">\n                            <th *matHeaderCellDef mat-header-cell style=\"width:160px\">Actions</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                <button (click)=\"downloadObject(row.bucketName, row.key)\" aria-label=\"List\" mat-icon-button matTooltip=\"Lists all objects\">\n                                    <mat-icon>download</mat-icon>\n                                </button>\n                                <button (click)=\"deleteObject(row.key)\" aria-label=\"DeleteObject\" mat-icon-button matTooltip=\"Delete object\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </td>\n                        </ng-container>\n                        <tr *matHeaderRowDef=\"columns\" mat-header-row></tr>\n                        <tr *matRowDef=\"let row; columns: columns;\" mat-row></tr>\n                        <tr *matNoDataRow class=\"mat-row\">\n                            <td [attr.colspan]=\"columns.length\" class=\"mat-cell\" style=\"padding-left: 20px;padding-top: 10px\">\n                                No data matching the filter.\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <mat-paginator (page)=\"handlePageEvent($event)\"\n                           [disabled]=\"disabled\"\n                           [hidePageSize]=\"hidePageSize\"\n                           [length]=\"(s3ObjectCountersResponse$ | async)?.total\"\n                           [pageIndex]=\"(pageIndex$ | async)\"\n                           [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\n                           [pageSize]=\"(pageSize$ | async)\"\n                           [showFirstLastButtons]=\"showFirstLastButtons\"\n                           aria-label=\"Select page\" style=\"width:99%; margin-left:15px\">\n            </mat-paginator>\n        </mat-card>\n    </mat-card-content>\n    <div class=\"footer\">\n        Last update: {{ lastUpdate | date: 'HH:mm:ss' }}\n    </div>\n</mat-card>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {S3BucketListComponent} from \"./bucket-list/bucket-list.component\";\nimport {S3BucketDetailComponent} from \"./bucket-detail/bucket-detail.component\";\nimport {S3ObjectListComponent} from \"./object-list/object-list.component\";\nimport {S3ObjectViewDialog} from \"./object-list/view/object-view.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        title: 'S3BucketList',\n        component: S3BucketListComponent\n    },\n    {\n        path: 'details/:bucketName',\n        component: S3BucketDetailComponent\n    },\n    {\n        path: 'objects/:bucketName',\n        component: S3ObjectListComponent\n    },\n    {\n        path: 'objects/details/:id',\n        component: S3ObjectViewDialog\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class S3RoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, mergeMap, of} from 'rxjs';\nimport {s3ObjectListActions} from './s3-object-list.actions';\nimport {SortColumn} from \"../../../../shared/sorting/sorting.component\";\nimport {S3Service} from \"../../service/s3-service.component\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable()\nexport class S3ObjectListEffects {\n\n    sortColumns: SortColumn[] = [];\n\n    loadBucketCounters$ = createEffect(() => this.actions$.pipe(\n        ofType(s3ObjectListActions.loadObjects),\n        mergeMap(action =>\n            this.s3Service.listObjectsCounters(\n                action.bucketName,\n                action.prefix,\n                action.pageSize,\n                action.pageIndex,\n                action.sortColumns)\n                .pipe(map((objects: any) => s3ObjectListActions.loadObjectsSuccess({objects})),\n                    catchError((error) =>\n                        of(s3ObjectListActions.loadObjectsFailure({error: error.message}))\n                    )\n                )\n        )\n    ));\n\n    deleteObject$ = createEffect(() => this.actions$.pipe(\n        ofType(s3ObjectListActions.deleteObject),\n        mergeMap(action =>\n            this.s3Service.deleteObject(action.bucketName, action.key)\n                .then(() => s3ObjectListActions.deleteObjectSuccess()))\n    ));\n\n    constructor(private actions$: Actions, private s3Service: S3Service) {\n    }\n}","import {NgModule} from '@angular/core';\nimport {AsyncPipe, DatePipe, NgIf} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {MatCard, MatCardActions, MatCardContent, MatCardHeader, MatCardSubtitle, MatCardTitle} from \"@angular/material/card\";\nimport {\n    MatCell,\n    MatCellDef,\n    MatColumnDef,\n    MatHeaderCell,\n    MatHeaderCellDef,\n    MatHeaderRow,\n    MatHeaderRowDef,\n    MatNoDataRow,\n    MatRow,\n    MatRowDef,\n    MatTable\n} from \"@angular/material/table\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport {MatSortHeader, MatSortModule} from \"@angular/material/sort\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatTooltip} from \"@angular/material/tooltip\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatList, MatListItem, MatNavList} from \"@angular/material/list\";\nimport {MatFormField, MatLabel, MatSuffix} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {AwsMockHttpService} from \"../../services/awsmock-http.service\";\nimport {MatGridList, MatGridTile} from \"@angular/material/grid-list\";\nimport {MatTab, MatTabGroup} from \"@angular/material/tabs\";\nimport {s3BucketListFeatureKey, s3BucketListReducer} from \"./bucket-list/state/s3-bucket-list.reducer\";\nimport {S3BucketListEffects} from \"./bucket-list/state/s3-bucket-list.effects\";\nimport {S3BucketListComponent} from \"./bucket-list/bucket-list.component\";\nimport {S3BucketDetailComponent} from \"./bucket-detail/bucket-detail.component\";\nimport {S3ObjectListComponent} from \"./object-list/object-list.component\";\nimport {S3RoutingModule} from \"./s3-routing.module\";\nimport {S3Service} from \"./service/s3-service.component\";\nimport {S3ObjectListEffects} from \"./object-list/state/s3-object-list.effects\";\nimport {s3ObjectListFeatureKey, s3ObjectListReducer} from \"./object-list/state/s3-object-list.reducer\";\n\n@NgModule({\n    declarations: [S3BucketListComponent, S3BucketDetailComponent, S3ObjectListComponent],\n    imports: [\n        MatCard,\n        MatCardHeader,\n        MatCardContent,\n        MatCardActions,\n        MatCardSubtitle,\n        MatCardTitle,\n        MatTable,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatColumnDef,\n        MatIcon,\n        MatHeaderCell,\n        MatCell,\n        MatHeaderRowDef,\n        MatHeaderRow,\n        MatSortHeader,\n        MatRowDef,\n        MatNoDataRow,\n        MatIconButton,\n        MatRow,\n        MatPaginator,\n        MatSortModule,\n        MatTooltip,\n        RouterLink,\n        MatListItem,\n        MatNavList,\n        DatePipe,\n        MatFormField,\n        MatInput,\n        MatLabel,\n        MatSuffix,\n        MatGridTile,\n        MatGridList,\n        MatList,\n        MatTabGroup,\n        MatTab,\n        MatButton,\n        NgIf,\n        ReactiveFormsModule,\n        FormsModule,\n        AsyncPipe,\n        S3RoutingModule,\n        StoreModule.forFeature(s3BucketListFeatureKey, s3BucketListReducer),\n        StoreModule.forFeature(s3ObjectListFeatureKey, s3ObjectListReducer),\n        EffectsModule.forFeature([S3BucketListEffects, S3ObjectListEffects]),\n    ],\n    exports: [S3BucketListComponent, S3BucketDetailComponent, S3ObjectListComponent],\n    providers: [S3Service, AwsMockHttpService],\n})\nexport class S3Module {\n}\n"],"mappings":"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","names":["ChecksumAlgorithm","ChecksumLocation","SelectorType","AwsCrc32c","Crc32c","getAwsChunkedEncodingStream","e","e","e","cache","collectBody","e","e","defaultEndpointResolver","s","name","AnalyticsFilter","MetricsFilter","attribute","c","SelectObjectContentEventStream","b","map","b","map","b","map","b","map","b","map","b","map","map","map","map","map","map","map","map","bn","bn","bn","e","e","Command","cs","o","fromUtf8","isEmptyData","Sha1","convertToBuffer","isEmptyData","convertToBuffer","fromUtf8","Sha1","blobHasher","getRuntimeConfig","Sha1","t","getRuntimeConfig","Command","cs","o","Command","cs","o","Command","cs","o","Command","cs","o","Command","cs","o","Command","cs","o","e","e","initialState","selectIsLoading","selectPrefix","selectPageSize","selectPageIndex","selectSortColumns","v","m","filter","i","esm_default","data","esm_default","e","_c0"],"x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,90,95,96]}