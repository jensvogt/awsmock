{"version":3,"sources":["node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js"],"sourcesContent":["import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    try {\n      return JSON.parse(encoded);\n    } catch (e) {\n      if (e?.name === \"SyntaxError\") {\n        Object.defineProperty(e, \"$responseBodyText\", {\n          value: encoded\n        });\n      }\n      throw e;\n    }\n  }\n  return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n  const value = await parseJsonBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};"],"mappings":";;;;;;;;AACO,IAAM,gBAAgB,CAAC,YAAY,YAAY,kBAAkB,YAAY,OAAO,EAAE,KAAK,aAAW;AAC3G,MAAI,QAAQ,QAAQ;AAClB,QAAI;AACF,aAAO,KAAK,MAAM,OAAO;AAAA,IAC3B,SAAS,GAAG;AACV,UAAI,GAAG,SAAS,eAAe;AAC7B,eAAO,eAAe,GAAG,qBAAqB;AAAA,UAC5C,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AACA,YAAM;AAAA,IACR;AAAA,EACF;AACA,SAAO,CAAC;AACV,CAAC;AACM,IAAM,qBAAqB,CAAO,WAAW,YAAY;AAC9D,QAAM,QAAQ,MAAM,cAAc,WAAW,OAAO;AACpD,QAAM,UAAU,MAAM,WAAW,MAAM;AACvC,SAAO;AACT;AACO,IAAM,wBAAwB,CAAC,QAAQ,SAAS;AACrD,QAAM,UAAU,CAAC,QAAQ,QAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,OAAK,EAAE,YAAY,MAAM,IAAI,YAAY,CAAC;AACpG,QAAM,oBAAoB,cAAY;AACpC,QAAI,aAAa;AACjB,QAAI,OAAO,eAAe,UAAU;AAClC,mBAAa,WAAW,SAAS;AAAA,IACnC;AACA,QAAI,WAAW,QAAQ,GAAG,KAAK,GAAG;AAChC,mBAAa,WAAW,MAAM,GAAG,EAAE,CAAC;AAAA,IACtC;AACA,QAAI,WAAW,QAAQ,GAAG,KAAK,GAAG;AAChC,mBAAa,WAAW,MAAM,GAAG,EAAE,CAAC;AAAA,IACtC;AACA,QAAI,WAAW,QAAQ,GAAG,KAAK,GAAG;AAChC,mBAAa,WAAW,MAAM,GAAG,EAAE,CAAC;AAAA,IACtC;AACA,WAAO;AAAA,EACT;AACA,QAAM,YAAY,QAAQ,OAAO,SAAS,kBAAkB;AAC5D,MAAI,cAAc,QAAW;AAC3B,WAAO,kBAAkB,OAAO,QAAQ,SAAS,CAAC;AAAA,EACpD;AACA,MAAI,KAAK,SAAS,QAAW;AAC3B,WAAO,kBAAkB,KAAK,IAAI;AAAA,EACpC;AACA,MAAI,KAAK,QAAQ,MAAM,QAAW;AAChC,WAAO,kBAAkB,KAAK,QAAQ,CAAC;AAAA,EACzC;AACF;","names":[],"x_google_ignoreList":[0]}