{"version":3,"sources":["node_modules/@aws-sdk/middleware-sdk-sqs/dist-es/queue-url.js","node_modules/@aws-sdk/middleware-sdk-sqs/dist-es/send-message.js","node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js","node_modules/@aws-sdk/client-sqs/dist-es/auth/httpAuthSchemeProvider.js","node_modules/@aws-sdk/client-sqs/dist-es/endpoint/EndpointParameters.js","node_modules/@aws-sdk/client-sqs/package.json","node_modules/@aws-sdk/client-sqs/dist-es/endpoint/ruleset.js","node_modules/@aws-sdk/client-sqs/dist-es/endpoint/endpointResolver.js","node_modules/@aws-sdk/client-sqs/dist-es/runtimeConfig.shared.js","node_modules/@aws-sdk/client-sqs/dist-es/runtimeConfig.browser.js","node_modules/@aws-sdk/client-sqs/dist-es/auth/httpAuthExtensionConfiguration.js","node_modules/@aws-sdk/client-sqs/dist-es/runtimeExtensions.js","node_modules/@aws-sdk/client-sqs/dist-es/SQSClient.js","node_modules/@aws-sdk/client-sqs/dist-es/models/SQSServiceException.js","node_modules/@aws-sdk/client-sqs/dist-es/models/models_0.js","node_modules/@aws-sdk/client-sqs/dist-es/protocols/Aws_json1_0.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/CreateQueueCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/DeleteMessageCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/DeleteQueueCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/GetQueueAttributesCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/GetQueueUrlCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/ListQueuesCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/PurgeQueueCommand.js","node_modules/@aws-sdk/client-sqs/dist-es/commands/SendMessageCommand.js","src/app/modules/sqs/service/sqs-service.component.ts"],"sourcesContent":["import { NoOpLogger } from \"@smithy/smithy-client\";\nexport const resolveQueueUrlConfig = config => {\n  return {\n    ...config,\n    useQueueUrlAsEndpoint: config.useQueueUrlAsEndpoint ?? true\n  };\n};\nexport function queueUrlMiddleware({\n  useQueueUrlAsEndpoint,\n  endpoint\n}) {\n  return (next, context) => {\n    return async args => {\n      const {\n        input\n      } = args;\n      const resolvedEndpoint = context.endpointV2;\n      if (!endpoint && input.QueueUrl && resolvedEndpoint && useQueueUrlAsEndpoint) {\n        const logger = context.logger instanceof NoOpLogger || !context.logger?.warn ? console : context.logger;\n        try {\n          const queueUrl = new URL(input.QueueUrl);\n          const queueUrlOrigin = new URL(queueUrl.origin);\n          if (resolvedEndpoint.url.origin !== queueUrlOrigin.origin) {\n            logger.warn(`QueueUrl=${input.QueueUrl} differs from SQSClient resolved endpoint=${resolvedEndpoint.url.toString()}, using QueueUrl host as endpoint.\nSet [endpoint=string] or [useQueueUrlAsEndpoint=false] on the SQSClient.`);\n            context.endpointV2 = {\n              ...resolvedEndpoint,\n              url: queueUrlOrigin\n            };\n          }\n        } catch (e) {\n          logger.warn(e);\n        }\n      }\n      return next(args);\n    };\n  };\n}\nexport const queueUrlMiddlewareOptions = {\n  name: \"queueUrlMiddleware\",\n  relation: \"after\",\n  toMiddleware: \"endpointV2Middleware\",\n  override: true\n};\nexport const getQueueUrlPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(queueUrlMiddleware(config), queueUrlMiddlewareOptions);\n  }\n});","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nexport const sendMessageMiddleware = options => next => async args => {\n  const resp = await next({\n    ...args\n  });\n  if (options.md5 === false) {\n    return resp;\n  }\n  const output = resp.output;\n  const hash = new options.md5();\n  hash.update(toUint8Array(args.input.MessageBody || \"\"));\n  if (output.MD5OfMessageBody !== toHex(await hash.digest())) {\n    throw new Error(\"InvalidChecksumError\");\n  }\n  return resp;\n};\nexport const sendMessageMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BODY_MD5\"],\n  name: \"sendMessageMiddleware\",\n  override: true\n};\nexport const getSendMessagePlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(sendMessageMiddleware(config), sendMessageMiddlewareOptions);\n  }\n});","export const _toStr = val => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"number\" || typeof val === \"bigint\") {\n    const warning = new Error(`Received number ${val} where a string was expected.`);\n    warning.name = \"Warning\";\n    console.warn(warning);\n    return String(val);\n  }\n  if (typeof val === \"boolean\") {\n    const warning = new Error(`Received boolean ${val} where a string was expected.`);\n    warning.name = \"Warning\";\n    console.warn(warning);\n    return String(val);\n  }\n  return val;\n};\nexport const _toBool = val => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"number\") {}\n  if (typeof val === \"string\") {\n    const lowercase = val.toLowerCase();\n    if (val !== \"\" && lowercase !== \"false\" && lowercase !== \"true\") {\n      const warning = new Error(`Received string \"${val}\" where a boolean was expected.`);\n      warning.name = \"Warning\";\n      console.warn(warning);\n    }\n    return val !== \"\" && lowercase !== \"false\";\n  }\n  return val;\n};\nexport const _toNum = val => {\n  if (val == null) {\n    return val;\n  }\n  if (typeof val === \"boolean\") {}\n  if (typeof val === \"string\") {\n    const num = Number(val);\n    if (num.toString() !== val) {\n      const warning = new Error(`Received string \"${val}\" where a number was expected.`);\n      warning.name = \"Warning\";\n      console.warn(warning);\n      return val;\n    }\n    return num;\n  }\n  return val;\n};","import { resolveAwsSdkSigV4Config } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultSQSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n  return {\n    operation: getSmithyContext(context).operation,\n    region: (await normalizeProvider(config.region)()) || (() => {\n      throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n    })()\n  };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n  return {\n    schemeId: \"aws.auth#sigv4\",\n    signingProperties: {\n      name: \"sqs\",\n      region: authParameters.region\n    },\n    propertiesExtractor: (config, context) => ({\n      signingProperties: {\n        config,\n        context\n      }\n    })\n  };\n}\nexport const defaultSQSHttpAuthSchemeProvider = authParameters => {\n  const options = [];\n  switch (authParameters.operation) {\n    default:\n      {\n        options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n      }\n  }\n  return options;\n};\nexport const resolveHttpAuthSchemeConfig = config => {\n  const config_0 = resolveAwsSdkSigV4Config(config);\n  return {\n    ...config_0\n  };\n};","export const resolveClientEndpointParameters = options => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"sqs\"\n  };\n};\nexport const commonParams = {\n  UseFIPS: {\n    type: \"builtInParams\",\n    name: \"useFipsEndpoint\"\n  },\n  Endpoint: {\n    type: \"builtInParams\",\n    name: \"endpoint\"\n  },\n  Region: {\n    type: \"builtInParams\",\n    name: \"region\"\n  },\n  UseDualStack: {\n    type: \"builtInParams\",\n    name: \"useDualstackEndpoint\"\n  }\n};","{\n  \"name\": \"@aws-sdk/client-sqs\",\n  \"description\": \"AWS SDK for JavaScript Sqs Client for Node.js, Browser and React Native\",\n  \"version\": \"3.693.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sqs\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sqs\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.693.0\",\n    \"@aws-sdk/client-sts\": \"3.693.0\",\n    \"@aws-sdk/core\": \"3.693.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.693.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.693.0\",\n    \"@aws-sdk/middleware-logger\": \"3.693.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.693.0\",\n    \"@aws-sdk/middleware-sdk-sqs\": \"3.693.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.693.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.693.0\",\n    \"@aws-sdk/types\": \"3.692.0\",\n    \"@aws-sdk/util-endpoints\": \"3.693.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.693.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.693.0\",\n    \"@smithy/config-resolver\": \"^3.0.11\",\n    \"@smithy/core\": \"^2.5.2\",\n    \"@smithy/fetch-http-handler\": \"^4.1.0\",\n    \"@smithy/hash-node\": \"^3.0.9\",\n    \"@smithy/invalid-dependency\": \"^3.0.9\",\n    \"@smithy/md5-js\": \"^3.0.9\",\n    \"@smithy/middleware-content-length\": \"^3.0.11\",\n    \"@smithy/middleware-endpoint\": \"^3.2.2\",\n    \"@smithy/middleware-retry\": \"^3.0.26\",\n    \"@smithy/middleware-serde\": \"^3.0.9\",\n    \"@smithy/middleware-stack\": \"^3.0.9\",\n    \"@smithy/node-config-provider\": \"^3.1.10\",\n    \"@smithy/node-http-handler\": \"^3.3.0\",\n    \"@smithy/protocol-http\": \"^4.1.6\",\n    \"@smithy/smithy-client\": \"^3.4.3\",\n    \"@smithy/types\": \"^3.7.0\",\n    \"@smithy/url-parser\": \"^3.0.9\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.26\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.26\",\n    \"@smithy/util-endpoints\": \"^2.1.5\",\n    \"@smithy/util-middleware\": \"^3.0.9\",\n    \"@smithy/util-retry\": \"^3.0.9\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sqs\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sqs\"\n  }\n}\n","const u = \"required\",\n  v = \"fn\",\n  w = \"argv\",\n  x = \"ref\";\nconst a = true,\n  b = \"isSet\",\n  c = \"booleanEquals\",\n  d = \"error\",\n  e = \"endpoint\",\n  f = \"tree\",\n  g = \"PartitionResult\",\n  h = \"getAttr\",\n  i = {\n    [u]: false,\n    \"type\": \"String\"\n  },\n  j = {\n    [u]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n  },\n  k = {\n    [x]: \"Endpoint\"\n  },\n  l = {\n    [v]: c,\n    [w]: [{\n      [x]: \"UseFIPS\"\n    }, true]\n  },\n  m = {\n    [v]: c,\n    [w]: [{\n      [x]: \"UseDualStack\"\n    }, true]\n  },\n  n = {},\n  o = {\n    [v]: h,\n    [w]: [{\n      [x]: g\n    }, \"supportsFIPS\"]\n  },\n  p = {\n    [x]: g\n  },\n  q = {\n    [v]: c,\n    [w]: [true, {\n      [v]: h,\n      [w]: [p, \"supportsDualStack\"]\n    }]\n  },\n  r = [l],\n  s = [m],\n  t = [{\n    [x]: \"Region\"\n  }];\nconst _data = {\n  version: \"1.0\",\n  parameters: {\n    Region: i,\n    UseDualStack: j,\n    UseFIPS: j,\n    Endpoint: i\n  },\n  rules: [{\n    conditions: [{\n      [v]: b,\n      [w]: [k]\n    }],\n    rules: [{\n      conditions: r,\n      error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n      type: d\n    }, {\n      conditions: s,\n      error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n      type: d\n    }, {\n      endpoint: {\n        url: k,\n        properties: n,\n        headers: n\n      },\n      type: e\n    }],\n    type: f\n  }, {\n    conditions: [{\n      [v]: b,\n      [w]: t\n    }],\n    rules: [{\n      conditions: [{\n        [v]: \"aws.partition\",\n        [w]: t,\n        assign: g\n      }],\n      rules: [{\n        conditions: [l, m],\n        rules: [{\n          conditions: [{\n            [v]: c,\n            [w]: [a, o]\n          }, q],\n          rules: [{\n            endpoint: {\n              url: \"https://sqs-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n              properties: n,\n              headers: n\n            },\n            type: e\n          }],\n          type: f\n        }, {\n          error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n          type: d\n        }],\n        type: f\n      }, {\n        conditions: r,\n        rules: [{\n          conditions: [{\n            [v]: c,\n            [w]: [o, a]\n          }],\n          rules: [{\n            conditions: [{\n              [v]: \"stringEquals\",\n              [w]: [{\n                [v]: h,\n                [w]: [p, \"name\"]\n              }, \"aws-us-gov\"]\n            }],\n            endpoint: {\n              url: \"https://sqs.{Region}.amazonaws.com\",\n              properties: n,\n              headers: n\n            },\n            type: e\n          }, {\n            endpoint: {\n              url: \"https://sqs-fips.{Region}.{PartitionResult#dnsSuffix}\",\n              properties: n,\n              headers: n\n            },\n            type: e\n          }],\n          type: f\n        }, {\n          error: \"FIPS is enabled but this partition does not support FIPS\",\n          type: d\n        }],\n        type: f\n      }, {\n        conditions: s,\n        rules: [{\n          conditions: [q],\n          rules: [{\n            endpoint: {\n              url: \"https://sqs.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n              properties: n,\n              headers: n\n            },\n            type: e\n          }],\n          type: f\n        }, {\n          error: \"DualStack is enabled but this partition does not support DualStack\",\n          type: d\n        }],\n        type: f\n      }, {\n        endpoint: {\n          url: \"https://sqs.{Region}.{PartitionResult#dnsSuffix}\",\n          properties: n,\n          headers: n\n        },\n        type: e\n      }],\n      type: f\n    }],\n    type: f\n  }, {\n    error: \"Invalid Configuration: Missing Region\",\n    type: d\n  }]\n};\nexport const ruleSet = _data;","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n  size: 50,\n  params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"]\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n  return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n    endpointParams: endpointParams,\n    logger: context.logger\n  }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSQSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = config => {\n  return {\n    apiVersion: \"2012-11-05\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSQSHttpAuthSchemeProvider,\n    httpAuthSchemes: config?.httpAuthSchemes ?? [{\n      schemeId: \"aws.auth#sigv4\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n      signer: new AwsSdkSigV4Signer()\n    }],\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SQS\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8\n  };\n};","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { Md5 } from \"@smithy/md5-js\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? createDefaultUserAgentProvider({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    md5: config?.md5 ?? Md5,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))\n  };\n};","export const getHttpAuthExtensionConfiguration = runtimeConfig => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex(scheme => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n};\nexport const resolveHttpAuthRuntimeConfig = config => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n};","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = t => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach(extension => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n    ...resolveDefaultRuntimeConfig(extensionConfiguration),\n    ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n};","import { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getQueueUrlPlugin, resolveQueueUrlConfig } from \"@aws-sdk/middleware-sdk-sqs\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client } from \"@smithy/smithy-client\";\nimport { defaultSQSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class SQSClient extends __Client {\n  constructor(...[configuration]) {\n    const _config_0 = __getRuntimeConfig(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = resolveUserAgentConfig(_config_1);\n    const _config_3 = resolveRetryConfig(_config_2);\n    const _config_4 = resolveRegionConfig(_config_3);\n    const _config_5 = resolveHostHeaderConfig(_config_4);\n    const _config_6 = resolveEndpointConfig(_config_5);\n    const _config_7 = resolveQueueUrlConfig(_config_6);\n    const _config_8 = resolveHttpAuthSchemeConfig(_config_7);\n    const _config_9 = resolveRuntimeExtensions(_config_8, configuration?.extensions || []);\n    super(_config_9);\n    this.config = _config_9;\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n    this.middlewareStack.use(getQueueUrlPlugin(this.config));\n    this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n      httpAuthSchemeParametersProvider: defaultSQSHttpAuthSchemeParametersProvider,\n      identityProviderConfigProvider: async config => new DefaultIdentityProviderConfig({\n        \"aws.auth#sigv4\": config.credentials\n      })\n    }));\n    this.middlewareStack.use(getHttpSigningPlugin(this.config));\n  }\n  destroy() {\n    super.destroy();\n  }\n}","import { ServiceException as __ServiceException } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class SQSServiceException extends __ServiceException {\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, SQSServiceException.prototype);\n  }\n}","import { SQSServiceException as __BaseException } from \"./SQSServiceException\";\nexport class InvalidAddress extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidAddress\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAddress\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidAddress.prototype);\n  }\n}\nexport class InvalidSecurity extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidSecurity\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidSecurity\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidSecurity.prototype);\n  }\n}\nexport class OverLimit extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"OverLimit\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OverLimit\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, OverLimit.prototype);\n  }\n}\nexport class QueueDoesNotExist extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"QueueDoesNotExist\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"QueueDoesNotExist\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, QueueDoesNotExist.prototype);\n  }\n}\nexport class RequestThrottled extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"RequestThrottled\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"RequestThrottled\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, RequestThrottled.prototype);\n  }\n}\nexport class UnsupportedOperation extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"UnsupportedOperation\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedOperation\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, UnsupportedOperation.prototype);\n  }\n}\nexport class ResourceNotFoundException extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"ResourceNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n  }\n}\nexport class MessageNotInflight extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"MessageNotInflight\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"MessageNotInflight\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, MessageNotInflight.prototype);\n  }\n}\nexport class ReceiptHandleIsInvalid extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"ReceiptHandleIsInvalid\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ReceiptHandleIsInvalid\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, ReceiptHandleIsInvalid.prototype);\n  }\n}\nexport class BatchEntryIdsNotDistinct extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"BatchEntryIdsNotDistinct\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BatchEntryIdsNotDistinct\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, BatchEntryIdsNotDistinct.prototype);\n  }\n}\nexport class EmptyBatchRequest extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"EmptyBatchRequest\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"EmptyBatchRequest\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, EmptyBatchRequest.prototype);\n  }\n}\nexport class InvalidBatchEntryId extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidBatchEntryId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidBatchEntryId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidBatchEntryId.prototype);\n  }\n}\nexport class TooManyEntriesInBatchRequest extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"TooManyEntriesInBatchRequest\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TooManyEntriesInBatchRequest\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, TooManyEntriesInBatchRequest.prototype);\n  }\n}\nexport const QueueAttributeName = {\n  All: \"All\",\n  ApproximateNumberOfMessages: \"ApproximateNumberOfMessages\",\n  ApproximateNumberOfMessagesDelayed: \"ApproximateNumberOfMessagesDelayed\",\n  ApproximateNumberOfMessagesNotVisible: \"ApproximateNumberOfMessagesNotVisible\",\n  ContentBasedDeduplication: \"ContentBasedDeduplication\",\n  CreatedTimestamp: \"CreatedTimestamp\",\n  DeduplicationScope: \"DeduplicationScope\",\n  DelaySeconds: \"DelaySeconds\",\n  FifoQueue: \"FifoQueue\",\n  FifoThroughputLimit: \"FifoThroughputLimit\",\n  KmsDataKeyReusePeriodSeconds: \"KmsDataKeyReusePeriodSeconds\",\n  KmsMasterKeyId: \"KmsMasterKeyId\",\n  LastModifiedTimestamp: \"LastModifiedTimestamp\",\n  MaximumMessageSize: \"MaximumMessageSize\",\n  MessageRetentionPeriod: \"MessageRetentionPeriod\",\n  Policy: \"Policy\",\n  QueueArn: \"QueueArn\",\n  ReceiveMessageWaitTimeSeconds: \"ReceiveMessageWaitTimeSeconds\",\n  RedriveAllowPolicy: \"RedriveAllowPolicy\",\n  RedrivePolicy: \"RedrivePolicy\",\n  SqsManagedSseEnabled: \"SqsManagedSseEnabled\",\n  VisibilityTimeout: \"VisibilityTimeout\"\n};\nexport class InvalidAttributeName extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidAttributeName\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAttributeName\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidAttributeName.prototype);\n  }\n}\nexport class InvalidAttributeValue extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidAttributeValue\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAttributeValue\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidAttributeValue.prototype);\n  }\n}\nexport class QueueDeletedRecently extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"QueueDeletedRecently\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"QueueDeletedRecently\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, QueueDeletedRecently.prototype);\n  }\n}\nexport class QueueNameExists extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"QueueNameExists\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"QueueNameExists\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, QueueNameExists.prototype);\n  }\n}\nexport class InvalidIdFormat extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidIdFormat\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidIdFormat\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidIdFormat.prototype);\n  }\n}\nexport class PurgeQueueInProgress extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"PurgeQueueInProgress\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"PurgeQueueInProgress\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, PurgeQueueInProgress.prototype);\n  }\n}\nexport class KmsAccessDenied extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsAccessDenied\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsAccessDenied\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsAccessDenied.prototype);\n  }\n}\nexport class KmsDisabled extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsDisabled\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsDisabled\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsDisabled.prototype);\n  }\n}\nexport class KmsInvalidKeyUsage extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsInvalidKeyUsage\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsInvalidKeyUsage\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsInvalidKeyUsage.prototype);\n  }\n}\nexport class KmsInvalidState extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsInvalidState\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsInvalidState\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsInvalidState.prototype);\n  }\n}\nexport class KmsNotFound extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsNotFound\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsNotFound\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsNotFound.prototype);\n  }\n}\nexport class KmsOptInRequired extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsOptInRequired\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsOptInRequired\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsOptInRequired.prototype);\n  }\n}\nexport class KmsThrottled extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"KmsThrottled\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KmsThrottled\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, KmsThrottled.prototype);\n  }\n}\nexport const MessageSystemAttributeName = {\n  AWSTraceHeader: \"AWSTraceHeader\",\n  All: \"All\",\n  ApproximateFirstReceiveTimestamp: \"ApproximateFirstReceiveTimestamp\",\n  ApproximateReceiveCount: \"ApproximateReceiveCount\",\n  DeadLetterQueueSourceArn: \"DeadLetterQueueSourceArn\",\n  MessageDeduplicationId: \"MessageDeduplicationId\",\n  MessageGroupId: \"MessageGroupId\",\n  SenderId: \"SenderId\",\n  SentTimestamp: \"SentTimestamp\",\n  SequenceNumber: \"SequenceNumber\"\n};\nexport class InvalidMessageContents extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"InvalidMessageContents\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidMessageContents\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, InvalidMessageContents.prototype);\n  }\n}\nexport const MessageSystemAttributeNameForSends = {\n  AWSTraceHeader: \"AWSTraceHeader\"\n};\nexport class BatchRequestTooLong extends __BaseException {\n  constructor(opts) {\n    super({\n      name: \"BatchRequestTooLong\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BatchRequestTooLong\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, BatchRequestTooLong.prototype);\n  }\n}","import { _toNum, _toStr, loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectString as __expectString, take, withBaseException } from \"@smithy/smithy-client\";\nimport { BatchEntryIdsNotDistinct, BatchRequestTooLong, EmptyBatchRequest, InvalidAddress, InvalidAttributeName, InvalidAttributeValue, InvalidBatchEntryId, InvalidIdFormat, InvalidMessageContents, InvalidSecurity, KmsAccessDenied, KmsDisabled, KmsInvalidKeyUsage, KmsInvalidState, KmsNotFound, KmsOptInRequired, KmsThrottled, MessageNotInflight, OverLimit, PurgeQueueInProgress, QueueDeletedRecently, QueueDoesNotExist, QueueNameExists, ReceiptHandleIsInvalid, RequestThrottled, ResourceNotFoundException, TooManyEntriesInBatchRequest, UnsupportedOperation } from \"../models/models_0\";\nimport { SQSServiceException as __BaseException } from \"../models/SQSServiceException\";\nexport const se_AddPermissionCommand = async (input, context) => {\n  const headers = sharedHeaders(\"AddPermission\");\n  let body;\n  body = JSON.stringify(se_AddPermissionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CancelMessageMoveTaskCommand = async (input, context) => {\n  const headers = sharedHeaders(\"CancelMessageMoveTask\");\n  let body;\n  body = JSON.stringify(se_CancelMessageMoveTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ChangeMessageVisibilityCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ChangeMessageVisibility\");\n  let body;\n  body = JSON.stringify(se_ChangeMessageVisibilityRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ChangeMessageVisibilityBatchCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ChangeMessageVisibilityBatch\");\n  let body;\n  body = JSON.stringify(se_ChangeMessageVisibilityBatchRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateQueueCommand = async (input, context) => {\n  const headers = sharedHeaders(\"CreateQueue\");\n  let body;\n  body = JSON.stringify(se_CreateQueueRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteMessageCommand = async (input, context) => {\n  const headers = sharedHeaders(\"DeleteMessage\");\n  let body;\n  body = JSON.stringify(se_DeleteMessageRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteMessageBatchCommand = async (input, context) => {\n  const headers = sharedHeaders(\"DeleteMessageBatch\");\n  let body;\n  body = JSON.stringify(se_DeleteMessageBatchRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteQueueCommand = async (input, context) => {\n  const headers = sharedHeaders(\"DeleteQueue\");\n  let body;\n  body = JSON.stringify(se_DeleteQueueRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetQueueAttributesCommand = async (input, context) => {\n  const headers = sharedHeaders(\"GetQueueAttributes\");\n  let body;\n  body = JSON.stringify(se_GetQueueAttributesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetQueueUrlCommand = async (input, context) => {\n  const headers = sharedHeaders(\"GetQueueUrl\");\n  let body;\n  body = JSON.stringify(se_GetQueueUrlRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListDeadLetterSourceQueuesCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ListDeadLetterSourceQueues\");\n  let body;\n  body = JSON.stringify(se_ListDeadLetterSourceQueuesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListMessageMoveTasksCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ListMessageMoveTasks\");\n  let body;\n  body = JSON.stringify(se_ListMessageMoveTasksRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListQueuesCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ListQueues\");\n  let body;\n  body = JSON.stringify(se_ListQueuesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListQueueTagsCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ListQueueTags\");\n  let body;\n  body = JSON.stringify(se_ListQueueTagsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PurgeQueueCommand = async (input, context) => {\n  const headers = sharedHeaders(\"PurgeQueue\");\n  let body;\n  body = JSON.stringify(se_PurgeQueueRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ReceiveMessageCommand = async (input, context) => {\n  const headers = sharedHeaders(\"ReceiveMessage\");\n  let body;\n  body = JSON.stringify(se_ReceiveMessageRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RemovePermissionCommand = async (input, context) => {\n  const headers = sharedHeaders(\"RemovePermission\");\n  let body;\n  body = JSON.stringify(se_RemovePermissionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SendMessageCommand = async (input, context) => {\n  const headers = sharedHeaders(\"SendMessage\");\n  let body;\n  body = JSON.stringify(se_SendMessageRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SendMessageBatchCommand = async (input, context) => {\n  const headers = sharedHeaders(\"SendMessageBatch\");\n  let body;\n  body = JSON.stringify(se_SendMessageBatchRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetQueueAttributesCommand = async (input, context) => {\n  const headers = sharedHeaders(\"SetQueueAttributes\");\n  let body;\n  body = JSON.stringify(se_SetQueueAttributesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StartMessageMoveTaskCommand = async (input, context) => {\n  const headers = sharedHeaders(\"StartMessageMoveTask\");\n  let body;\n  body = JSON.stringify(se_StartMessageMoveTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagQueueCommand = async (input, context) => {\n  const headers = sharedHeaders(\"TagQueue\");\n  let body;\n  body = JSON.stringify(se_TagQueueRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagQueueCommand = async (input, context) => {\n  const headers = sharedHeaders(\"UntagQueue\");\n  let body;\n  body = JSON.stringify(se_UntagQueueRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AddPermissionCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_CancelMessageMoveTaskCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_ChangeMessageVisibilityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_ChangeMessageVisibilityBatchCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_CreateQueueCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_DeleteMessageCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_DeleteMessageBatchCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_DeleteQueueCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_GetQueueAttributesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_GetQueueUrlCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_ListDeadLetterSourceQueuesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_ListMessageMoveTasksCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_ListQueuesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_ListQueueTagsCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_PurgeQueueCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_ReceiveMessageCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = de_ReceiveMessageResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_RemovePermissionCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_SendMessageCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_SendMessageBatchCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_SetQueueAttributesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_StartMessageMoveTaskCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = _json(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n};\nexport const de_TagQueueCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nexport const de_UntagQueueCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n};\nconst de_CommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  populateBodyWithQueryCompatibility(parsedOutput, output.headers);\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidAddress\":\n    case \"com.amazonaws.sqs#InvalidAddress\":\n      throw await de_InvalidAddressRes(parsedOutput, context);\n    case \"InvalidSecurity\":\n    case \"com.amazonaws.sqs#InvalidSecurity\":\n      throw await de_InvalidSecurityRes(parsedOutput, context);\n    case \"OverLimit\":\n    case \"com.amazonaws.sqs#OverLimit\":\n      throw await de_OverLimitRes(parsedOutput, context);\n    case \"QueueDoesNotExist\":\n    case \"com.amazonaws.sqs#QueueDoesNotExist\":\n      throw await de_QueueDoesNotExistRes(parsedOutput, context);\n    case \"RequestThrottled\":\n    case \"com.amazonaws.sqs#RequestThrottled\":\n      throw await de_RequestThrottledRes(parsedOutput, context);\n    case \"UnsupportedOperation\":\n    case \"com.amazonaws.sqs#UnsupportedOperation\":\n      throw await de_UnsupportedOperationRes(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.sqs#ResourceNotFoundException\":\n      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n    case \"MessageNotInflight\":\n    case \"com.amazonaws.sqs#MessageNotInflight\":\n      throw await de_MessageNotInflightRes(parsedOutput, context);\n    case \"ReceiptHandleIsInvalid\":\n    case \"com.amazonaws.sqs#ReceiptHandleIsInvalid\":\n      throw await de_ReceiptHandleIsInvalidRes(parsedOutput, context);\n    case \"BatchEntryIdsNotDistinct\":\n    case \"com.amazonaws.sqs#BatchEntryIdsNotDistinct\":\n      throw await de_BatchEntryIdsNotDistinctRes(parsedOutput, context);\n    case \"EmptyBatchRequest\":\n    case \"com.amazonaws.sqs#EmptyBatchRequest\":\n      throw await de_EmptyBatchRequestRes(parsedOutput, context);\n    case \"InvalidBatchEntryId\":\n    case \"com.amazonaws.sqs#InvalidBatchEntryId\":\n      throw await de_InvalidBatchEntryIdRes(parsedOutput, context);\n    case \"TooManyEntriesInBatchRequest\":\n    case \"com.amazonaws.sqs#TooManyEntriesInBatchRequest\":\n      throw await de_TooManyEntriesInBatchRequestRes(parsedOutput, context);\n    case \"InvalidAttributeName\":\n    case \"com.amazonaws.sqs#InvalidAttributeName\":\n      throw await de_InvalidAttributeNameRes(parsedOutput, context);\n    case \"InvalidAttributeValue\":\n    case \"com.amazonaws.sqs#InvalidAttributeValue\":\n      throw await de_InvalidAttributeValueRes(parsedOutput, context);\n    case \"QueueDeletedRecently\":\n    case \"com.amazonaws.sqs#QueueDeletedRecently\":\n      throw await de_QueueDeletedRecentlyRes(parsedOutput, context);\n    case \"QueueNameExists\":\n    case \"com.amazonaws.sqs#QueueNameExists\":\n      throw await de_QueueNameExistsRes(parsedOutput, context);\n    case \"InvalidIdFormat\":\n    case \"com.amazonaws.sqs#InvalidIdFormat\":\n      throw await de_InvalidIdFormatRes(parsedOutput, context);\n    case \"PurgeQueueInProgress\":\n    case \"com.amazonaws.sqs#PurgeQueueInProgress\":\n      throw await de_PurgeQueueInProgressRes(parsedOutput, context);\n    case \"KmsAccessDenied\":\n    case \"com.amazonaws.sqs#KmsAccessDenied\":\n      throw await de_KmsAccessDeniedRes(parsedOutput, context);\n    case \"KmsDisabled\":\n    case \"com.amazonaws.sqs#KmsDisabled\":\n      throw await de_KmsDisabledRes(parsedOutput, context);\n    case \"KmsInvalidKeyUsage\":\n    case \"com.amazonaws.sqs#KmsInvalidKeyUsage\":\n      throw await de_KmsInvalidKeyUsageRes(parsedOutput, context);\n    case \"KmsInvalidState\":\n    case \"com.amazonaws.sqs#KmsInvalidState\":\n      throw await de_KmsInvalidStateRes(parsedOutput, context);\n    case \"KmsNotFound\":\n    case \"com.amazonaws.sqs#KmsNotFound\":\n      throw await de_KmsNotFoundRes(parsedOutput, context);\n    case \"KmsOptInRequired\":\n    case \"com.amazonaws.sqs#KmsOptInRequired\":\n      throw await de_KmsOptInRequiredRes(parsedOutput, context);\n    case \"KmsThrottled\":\n    case \"com.amazonaws.sqs#KmsThrottled\":\n      throw await de_KmsThrottledRes(parsedOutput, context);\n    case \"InvalidMessageContents\":\n    case \"com.amazonaws.sqs#InvalidMessageContents\":\n      throw await de_InvalidMessageContentsRes(parsedOutput, context);\n    case \"BatchRequestTooLong\":\n    case \"com.amazonaws.sqs#BatchRequestTooLong\":\n      throw await de_BatchRequestTooLongRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n};\nconst de_BatchEntryIdsNotDistinctRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new BatchEntryIdsNotDistinct({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_BatchRequestTooLongRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new BatchRequestTooLong({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_EmptyBatchRequestRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new EmptyBatchRequest({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidAddressRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidAddress({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidAttributeNameRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidAttributeName({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidAttributeValueRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidAttributeValue({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidBatchEntryIdRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidBatchEntryId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdFormatRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidIdFormat({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidMessageContentsRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidMessageContents({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_InvalidSecurityRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new InvalidSecurity({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsAccessDeniedRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsAccessDenied({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsDisabledRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsDisabled({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsInvalidKeyUsageRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsInvalidKeyUsage({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsInvalidStateRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsInvalidState({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsNotFoundRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsNotFound({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsOptInRequiredRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsOptInRequired({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_KmsThrottledRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new KmsThrottled({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_MessageNotInflightRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new MessageNotInflight({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_OverLimitRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new OverLimit({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_PurgeQueueInProgressRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new PurgeQueueInProgress({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_QueueDeletedRecentlyRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new QueueDeletedRecently({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_QueueDoesNotExistRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new QueueDoesNotExist({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_QueueNameExistsRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new QueueNameExists({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_ReceiptHandleIsInvalidRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new ReceiptHandleIsInvalid({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_RequestThrottledRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new RequestThrottled({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_TooManyEntriesInBatchRequestRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new TooManyEntriesInBatchRequest({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedOperationRes = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = _json(body);\n  const exception = new UnsupportedOperation({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst se_ActionNameList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_AddPermissionRequest = (input, context) => {\n  return take(input, {\n    AWSAccountIds: _ => se_AWSAccountIdList(_, context),\n    Actions: _ => se_ActionNameList(_, context),\n    Label: _toStr,\n    QueueUrl: _toStr\n  });\n};\nconst se_AttributeNameList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_AWSAccountIdList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_BinaryList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return context.base64Encoder(entry);\n  });\n};\nconst se_CancelMessageMoveTaskRequest = (input, context) => {\n  return take(input, {\n    TaskHandle: _toStr\n  });\n};\nconst se_ChangeMessageVisibilityBatchRequest = (input, context) => {\n  return take(input, {\n    Entries: _ => se_ChangeMessageVisibilityBatchRequestEntryList(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_ChangeMessageVisibilityBatchRequestEntry = (input, context) => {\n  return take(input, {\n    Id: _toStr,\n    ReceiptHandle: _toStr,\n    VisibilityTimeout: _toNum\n  });\n};\nconst se_ChangeMessageVisibilityBatchRequestEntryList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_ChangeMessageVisibilityBatchRequestEntry(entry, context);\n  });\n};\nconst se_ChangeMessageVisibilityRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr,\n    ReceiptHandle: _toStr,\n    VisibilityTimeout: _toNum\n  });\n};\nconst se_CreateQueueRequest = (input, context) => {\n  return take(input, {\n    Attributes: _ => se_QueueAttributeMap(_, context),\n    QueueName: _toStr,\n    tags: _ => se_TagMap(_, context)\n  });\n};\nconst se_DeleteMessageBatchRequest = (input, context) => {\n  return take(input, {\n    Entries: _ => se_DeleteMessageBatchRequestEntryList(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_DeleteMessageBatchRequestEntry = (input, context) => {\n  return take(input, {\n    Id: _toStr,\n    ReceiptHandle: _toStr\n  });\n};\nconst se_DeleteMessageBatchRequestEntryList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_DeleteMessageBatchRequestEntry(entry, context);\n  });\n};\nconst se_DeleteMessageRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr,\n    ReceiptHandle: _toStr\n  });\n};\nconst se_DeleteQueueRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr\n  });\n};\nconst se_GetQueueAttributesRequest = (input, context) => {\n  return take(input, {\n    AttributeNames: _ => se_AttributeNameList(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_GetQueueUrlRequest = (input, context) => {\n  return take(input, {\n    QueueName: _toStr,\n    QueueOwnerAWSAccountId: _toStr\n  });\n};\nconst se_ListDeadLetterSourceQueuesRequest = (input, context) => {\n  return take(input, {\n    MaxResults: _toNum,\n    NextToken: _toStr,\n    QueueUrl: _toStr\n  });\n};\nconst se_ListMessageMoveTasksRequest = (input, context) => {\n  return take(input, {\n    MaxResults: _toNum,\n    SourceArn: _toStr\n  });\n};\nconst se_ListQueuesRequest = (input, context) => {\n  return take(input, {\n    MaxResults: _toNum,\n    NextToken: _toStr,\n    QueueNamePrefix: _toStr\n  });\n};\nconst se_ListQueueTagsRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr\n  });\n};\nconst se_MessageAttributeNameList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_MessageAttributeValue = (input, context) => {\n  return take(input, {\n    BinaryListValues: _ => se_BinaryList(_, context),\n    BinaryValue: context.base64Encoder,\n    DataType: _toStr,\n    StringListValues: _ => se_StringList(_, context),\n    StringValue: _toStr\n  });\n};\nconst se_MessageBodyAttributeMap = (input, context) => {\n  return Object.entries(input).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = se_MessageAttributeValue(value, context);\n    return acc;\n  }, {});\n};\nconst se_MessageBodySystemAttributeMap = (input, context) => {\n  return Object.entries(input).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = se_MessageSystemAttributeValue(value, context);\n    return acc;\n  }, {});\n};\nconst se_MessageSystemAttributeList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_MessageSystemAttributeValue = (input, context) => {\n  return take(input, {\n    BinaryListValues: _ => se_BinaryList(_, context),\n    BinaryValue: context.base64Encoder,\n    DataType: _toStr,\n    StringListValues: _ => se_StringList(_, context),\n    StringValue: _toStr\n  });\n};\nconst se_PurgeQueueRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr\n  });\n};\nconst se_QueueAttributeMap = (input, context) => {\n  return Object.entries(input).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = _toStr(value);\n    return acc;\n  }, {});\n};\nconst se_ReceiveMessageRequest = (input, context) => {\n  return take(input, {\n    AttributeNames: _ => se_AttributeNameList(_, context),\n    MaxNumberOfMessages: _toNum,\n    MessageAttributeNames: _ => se_MessageAttributeNameList(_, context),\n    MessageSystemAttributeNames: _ => se_MessageSystemAttributeList(_, context),\n    QueueUrl: _toStr,\n    ReceiveRequestAttemptId: _toStr,\n    VisibilityTimeout: _toNum,\n    WaitTimeSeconds: _toNum\n  });\n};\nconst se_RemovePermissionRequest = (input, context) => {\n  return take(input, {\n    Label: _toStr,\n    QueueUrl: _toStr\n  });\n};\nconst se_SendMessageBatchRequest = (input, context) => {\n  return take(input, {\n    Entries: _ => se_SendMessageBatchRequestEntryList(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_SendMessageBatchRequestEntry = (input, context) => {\n  return take(input, {\n    DelaySeconds: _toNum,\n    Id: _toStr,\n    MessageAttributes: _ => se_MessageBodyAttributeMap(_, context),\n    MessageBody: _toStr,\n    MessageDeduplicationId: _toStr,\n    MessageGroupId: _toStr,\n    MessageSystemAttributes: _ => se_MessageBodySystemAttributeMap(_, context)\n  });\n};\nconst se_SendMessageBatchRequestEntryList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_SendMessageBatchRequestEntry(entry, context);\n  });\n};\nconst se_SendMessageRequest = (input, context) => {\n  return take(input, {\n    DelaySeconds: _toNum,\n    MessageAttributes: _ => se_MessageBodyAttributeMap(_, context),\n    MessageBody: _toStr,\n    MessageDeduplicationId: _toStr,\n    MessageGroupId: _toStr,\n    MessageSystemAttributes: _ => se_MessageBodySystemAttributeMap(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_SetQueueAttributesRequest = (input, context) => {\n  return take(input, {\n    Attributes: _ => se_QueueAttributeMap(_, context),\n    QueueUrl: _toStr\n  });\n};\nconst se_StartMessageMoveTaskRequest = (input, context) => {\n  return take(input, {\n    DestinationArn: _toStr,\n    MaxNumberOfMessagesPerSecond: _toNum,\n    SourceArn: _toStr\n  });\n};\nconst se_StringList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_TagKeyList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return _toStr(entry);\n  });\n};\nconst se_TagMap = (input, context) => {\n  return Object.entries(input).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = _toStr(value);\n    return acc;\n  }, {});\n};\nconst se_TagQueueRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr,\n    Tags: _ => se_TagMap(_, context)\n  });\n};\nconst se_UntagQueueRequest = (input, context) => {\n  return take(input, {\n    QueueUrl: _toStr,\n    TagKeys: _ => se_TagKeyList(_, context)\n  });\n};\nconst de_BinaryList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return context.base64Decoder(entry);\n  });\n  return retVal;\n};\nconst de_Message = (output, context) => {\n  return take(output, {\n    Attributes: _json,\n    Body: __expectString,\n    MD5OfBody: __expectString,\n    MD5OfMessageAttributes: __expectString,\n    MessageAttributes: _ => de_MessageBodyAttributeMap(_, context),\n    MessageId: __expectString,\n    ReceiptHandle: __expectString\n  });\n};\nconst de_MessageAttributeValue = (output, context) => {\n  return take(output, {\n    BinaryListValues: _ => de_BinaryList(_, context),\n    BinaryValue: context.base64Decoder,\n    DataType: __expectString,\n    StringListValues: _json,\n    StringValue: __expectString\n  });\n};\nconst de_MessageBodyAttributeMap = (output, context) => {\n  return Object.entries(output).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = de_MessageAttributeValue(value, context);\n    return acc;\n  }, {});\n};\nconst de_MessageList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_Message(entry, context);\n  });\n  return retVal;\n};\nconst de_ReceiveMessageResult = (output, context) => {\n  return take(output, {\n    Messages: _ => de_MessageList(_, context)\n  });\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n  return {\n    \"content-type\": \"application/x-amz-json-1.0\",\n    \"x-amz-target\": `AmazonSQS.${operation}`,\n    \"x-amzn-query-mode\": \"true\"\n  };\n}\nconst populateBodyWithQueryCompatibility = (parsedOutput, headers) => {\n  const queryErrorHeader = headers[\"x-amzn-query-error\"];\n  if (parsedOutput.body !== undefined && queryErrorHeader != null) {\n    const codeAndType = queryErrorHeader.split(\";\");\n    parsedOutput.body.Code = codeAndType[0];\n    parsedOutput.body.Type = codeAndType[1];\n  }\n};","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_CreateQueueCommand, se_CreateQueueCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class CreateQueueCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"CreateQueue\", {}).n(\"SQSClient\", \"CreateQueueCommand\").f(void 0, void 0).ser(se_CreateQueueCommand).de(de_CreateQueueCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DeleteMessageCommand, se_DeleteMessageCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class DeleteMessageCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"DeleteMessage\", {}).n(\"SQSClient\", \"DeleteMessageCommand\").f(void 0, void 0).ser(se_DeleteMessageCommand).de(de_DeleteMessageCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DeleteQueueCommand, se_DeleteQueueCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class DeleteQueueCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"DeleteQueue\", {}).n(\"SQSClient\", \"DeleteQueueCommand\").f(void 0, void 0).ser(se_DeleteQueueCommand).de(de_DeleteQueueCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_GetQueueAttributesCommand, se_GetQueueAttributesCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class GetQueueAttributesCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"GetQueueAttributes\", {}).n(\"SQSClient\", \"GetQueueAttributesCommand\").f(void 0, void 0).ser(se_GetQueueAttributesCommand).de(de_GetQueueAttributesCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_GetQueueUrlCommand, se_GetQueueUrlCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class GetQueueUrlCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"GetQueueUrl\", {}).n(\"SQSClient\", \"GetQueueUrlCommand\").f(void 0, void 0).ser(se_GetQueueUrlCommand).de(de_GetQueueUrlCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_ListQueuesCommand, se_ListQueuesCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class ListQueuesCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"ListQueues\", {}).n(\"SQSClient\", \"ListQueuesCommand\").f(void 0, void 0).ser(se_ListQueuesCommand).de(de_ListQueuesCommand).build() {}","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_PurgeQueueCommand, se_PurgeQueueCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class PurgeQueueCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions())];\n}).s(\"AmazonSQS\", \"PurgeQueue\", {}).n(\"SQSClient\", \"PurgeQueueCommand\").f(void 0, void 0).ser(se_PurgeQueueCommand).de(de_PurgeQueueCommand).build() {}","import { getSendMessagePlugin } from \"@aws-sdk/middleware-sdk-sqs\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_SendMessageCommand, se_SendMessageCommand } from \"../protocols/Aws_json1_0\";\nexport { $Command };\nexport class SendMessageCommand extends $Command.classBuilder().ep(commonParams).m(function (Command, cs, config, o) {\n  return [getSerdePlugin(config, this.serialize, this.deserialize), getEndpointPlugin(config, Command.getEndpointParameterInstructions()), getSendMessagePlugin(config)];\n}).s(\"AmazonSQS\", \"SendMessage\", {}).n(\"SQSClient\", \"SendMessageCommand\").f(void 0, void 0).ser(se_SendMessageCommand).de(de_SendMessageCommand).build() {}","import {Injectable} from \"@angular/core\";\nimport {environment} from \"../../../../environments/environment\";\nimport {\n    CreateQueueCommand,\n    DeleteMessageCommand,\n    DeleteMessageCommandOutput,\n    DeleteQueueCommand,\n    GetQueueAttributesCommand,\n    GetQueueUrlCommand,\n    ListQueuesCommand,\n    PurgeQueueCommand,\n    QueueAttributeName,\n    SendMessageCommand,\n    SQSClient\n} from \"@aws-sdk/client-sqs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {SortColumn} from \"../../../shared/sorting/sorting.component\";\n\n@Injectable({providedIn: 'root'})\nexport class SqsService {\n\n    client = new SQSClient({\n        region: environment.awsmockRegion,\n        endpoint: environment.gatewayEndpoint,\n        credentials: {\n            accessKeyId: 'test',\n            secretAccessKey: 'test',\n        },\n        requestHandler: {\n            requestTimeout: 30_000,\n            httpsAgent: {maxSockets: 25},\n        },\n    });\n\n    // Default headers for AwsMock HTTP requests\n    headers: HttpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'AWS4-HMAC-SHA256 Credential=none/20240928/eu-central-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-target, Signature=01316d694335ec0e0bf68b08570490f1b0bae0b130ecbe13ebad511b3ece8a41'\n    });\n    url: string = environment.gatewayEndpoint + '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n    listQueues(pageIndex: number, pageSize: number, prefix: string): any {\n        const input = {\n            QueueNamePrefix: prefix,\n            NextToken: (pageIndex * pageSize).toString(),\n            MaxResults: pageSize,\n        };\n        return this.client.send(new ListQueuesCommand(input));\n    }\n\n    purgeQueue(queueName: string) {\n        const input = {\n            QueueUrl: queueName\n        };\n        return this.client.send(new PurgeQueueCommand(input))\n    }\n\n    getQueueAttributes(queueUrl: string) {\n        const input = {\n            QueueUrl: queueUrl,\n            AttributeNames: [QueueAttributeName.All],\n        };\n        return this.client.send(new GetQueueAttributesCommand(input));\n    }\n\n    getQueueArn(queueUrl: string) {\n        const input = {\n            QueueUrl: queueUrl,\n            AttributeNames: [QueueAttributeName.QueueArn],\n        };\n        return this.client.send(new GetQueueAttributesCommand(input));\n    }\n\n    getQueueUrl(queueName: string) {\n        const input = {\n            QueueName: queueName\n        };\n        return this.client.send(new GetQueueUrlCommand(input));\n    }\n\n    saveQueue(queueName: string) {\n        const input = {\n            QueueName: queueName\n        };\n        return this.client.send(new CreateQueueCommand(input));\n    }\n\n    deleteQueue(queueUrl: string) {\n        const input = {\n            QueueUrl: queueUrl\n        };\n        return this.client.send(new DeleteQueueCommand(input));\n    }\n\n    sendMessage(queueUrl: string, message: string) {\n        const input = {\n            QueueUrl: queueUrl,\n            MessageBody: message,\n            DelaySeconds: 0\n        };\n        return this.client.send(new SendMessageCommand(input));\n    }\n\n    deleteMessage(queueUrl: string, receiptHandle: string): Promise<DeleteMessageCommandOutput> {\n        const input = {\n            QueueUrl: queueUrl,\n            ReceiptHandle: receiptHandle,\n        };\n        return this.client.send(new DeleteMessageCommand(input));\n    }\n\n    cleanup() {\n        this.client.destroy();\n    }\n\n    /**\n     * @brief List all queue ARNs\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     */\n    public listQueueArns() {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'ListQueueArns');\n        return this.http.post(this.url, {}, {headers: headers});\n    }\n\n    /**\n     * @brief List all queues\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param prefix bucket name prefix\n     * @param pageSize page size\n     * @param pageIndex page index\n     * @param sortColumns sorting columns\n     */\n    public listQueueCounters(prefix: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[]) {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'ListQueueCounters');\n        return this.http.post(this.url, {prefix: prefix, pageSize: pageSize, pageIndex: pageIndex, sortColumns: sortColumns}, {headers: headers});\n    }\n\n    /**\n     * @brief List all messages for a queues\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param queueArn queue ARN\n     * @param pageSize page size\n     * @param pageIndex page index\n     * @param sortColumns sorting columns\n     */\n    public listSqsMessages(queueArn: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[]) {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'ListMessages');\n        return this.http.post(this.url, {\n            queueArn: queueArn,\n            pageSize: pageSize,\n            pageIndex: pageIndex,\n            sortColumns: sortColumns\n        }, {headers: headers});\n    }\n\n    /**\n     * @brief List queue details\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param queueArn SQS queue ARN\n     */\n    public getQueueDetails(queueArn: string) {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'GetQueueDetails');\n        return this.http.post(this.url, {QueueArn: queueArn}, {headers: headers});\n    }\n\n    /**\n     * @brief List all queues\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param queueArn SQS queue ARN\n     * @param prefix SQS message prefix\n     * @param pageSize page size\n     * @param pageIndex page index\n     * @param sortColumns sorting columns\n     */\n    public listMessageCounters(queueArn: string, prefix: string, pageSize: number, pageIndex: number, sortColumns: SortColumn[]) {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'ListMessageCounters');\n        return this.http.post(this.url, {queueArn: queueArn, prefix: prefix, pageSize: pageSize, pageIndex: pageIndex, sortColumns: sortColumns}, {headers: headers});\n    }\n\n\n    /**\n     * @brief Delete message\n     *\n     * @par\n     * This is a fake AWS NodeJS SDK request. This will only work, if runs against a AwsMock instance.\n     *\n     * @param queueUrl SQS queue URL\n     * @param receiptHandle SQS receipt handle\n     */\n    public deleteMessageAws(queueUrl: string, receiptHandle: string) {\n        let headers = this.headers.set('x-awsmock-target', 'sqs').set('x-awsmock-action', 'DeleteMessage');\n        return this.http.post(this.url, {QueueUrl: queueUrl, ReceiptHandle: receiptHandle}, {headers: headers});\n    }\n}"],"mappings":"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","names":["e","getRuntimeConfig","t","getRuntimeConfig","e","e","e","Command","o","Command","o","Command","o","Command","o","Command","o","Command","o","Command","o","Command","o"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}