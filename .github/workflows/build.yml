name: AWSMockBuild
on:
  release:
    types: [ created ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: self-hosted
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GH_AUTH_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: simple

  build:
    runs-on: self-hosted
    needs: [ release-please ]
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker
        run: |
          VERSION=$(git sv cv)
          cd docker 
          docker build --no-cache --build-arg GH_TOKEN=${GH_TOKEN} -t awsmock:$VERSION .

  #  test:
  #    needs: build
  #    runs-on: self-hosted
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #
  #      - run: cmake .
  #      - run: cmake --build . -j 16
  #      - run: ctest -V

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: self-hosted
    needs: [ build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag images
        run: |
          VERSION=$(git sv cv)
          docker tag awsmock:$VERSION ${{ secrets.DOCKER_USER }}/awsmock:$VERSION
          docker push ${{ secrets.DOCKER_USER }}/awsmock:$VERSION
          docker tag awsmock:$VERSION ${{ secrets.DOCKER_USER }}/awsmock:latest
          docker push ${{ secrets.DOCKER_USER }}/awsmock:latest
